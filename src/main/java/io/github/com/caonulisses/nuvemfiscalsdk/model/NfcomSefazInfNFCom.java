/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazAssinante;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazAutXML;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazDest;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazDet;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazEmit;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGCofat;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGFat;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGFatCentral;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGFidelidade;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGSub;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazIde;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazInfAdic;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazRespTec;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazTotal;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações da NFCom.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazInfNFCom {
  public static final String SERIALIZED_NAME_VERSAO = "versao";
  @SerializedName(SERIALIZED_NAME_VERSAO)
  @javax.annotation.Nullable
  private String versao;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_IDE = "ide";
  @SerializedName(SERIALIZED_NAME_IDE)
  @javax.annotation.Nonnull
  private NfcomSefazIde ide;

  public static final String SERIALIZED_NAME_EMIT = "emit";
  @SerializedName(SERIALIZED_NAME_EMIT)
  @javax.annotation.Nonnull
  private NfcomSefazEmit emit;

  public static final String SERIALIZED_NAME_DEST = "dest";
  @SerializedName(SERIALIZED_NAME_DEST)
  @javax.annotation.Nonnull
  private NfcomSefazDest dest;

  public static final String SERIALIZED_NAME_ASSINANTE = "assinante";
  @SerializedName(SERIALIZED_NAME_ASSINANTE)
  @javax.annotation.Nonnull
  private NfcomSefazAssinante assinante;

  public static final String SERIALIZED_NAME_G_SUB = "gSub";
  @SerializedName(SERIALIZED_NAME_G_SUB)
  @javax.annotation.Nullable
  private NfcomSefazGSub gSub;

  public static final String SERIALIZED_NAME_G_COFAT = "gCofat";
  @SerializedName(SERIALIZED_NAME_G_COFAT)
  @javax.annotation.Nullable
  private NfcomSefazGCofat gCofat;

  public static final String SERIALIZED_NAME_DET = "det";
  @SerializedName(SERIALIZED_NAME_DET)
  @javax.annotation.Nonnull
  private List<NfcomSefazDet> det = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  @javax.annotation.Nonnull
  private NfcomSefazTotal total;

  public static final String SERIALIZED_NAME_G_FIDELIDADE = "gFidelidade";
  @SerializedName(SERIALIZED_NAME_G_FIDELIDADE)
  @javax.annotation.Nullable
  private NfcomSefazGFidelidade gFidelidade;

  public static final String SERIALIZED_NAME_G_FAT = "gFat";
  @SerializedName(SERIALIZED_NAME_G_FAT)
  @javax.annotation.Nullable
  private NfcomSefazGFat gFat;

  public static final String SERIALIZED_NAME_G_FAT_CENTRAL = "gFatCentral";
  @SerializedName(SERIALIZED_NAME_G_FAT_CENTRAL)
  @javax.annotation.Nullable
  private NfcomSefazGFatCentral gFatCentral;

  public static final String SERIALIZED_NAME_AUT_X_M_L = "autXML";
  @SerializedName(SERIALIZED_NAME_AUT_X_M_L)
  @javax.annotation.Nullable
  private List<NfcomSefazAutXML> autXML = new ArrayList<>();

  public static final String SERIALIZED_NAME_INF_ADIC = "infAdic";
  @SerializedName(SERIALIZED_NAME_INF_ADIC)
  @javax.annotation.Nullable
  private NfcomSefazInfAdic infAdic;

  public static final String SERIALIZED_NAME_G_RESP_TEC = "gRespTec";
  @SerializedName(SERIALIZED_NAME_G_RESP_TEC)
  @javax.annotation.Nullable
  private NfcomSefazRespTec gRespTec;

  public NfcomSefazInfNFCom() {
  }

  public NfcomSefazInfNFCom versao(@javax.annotation.Nullable String versao) {
    this.versao = versao;
    return this;
  }

  /**
   * Versão do leiaute.
   * @return versao
   */
  @javax.annotation.Nullable
  public String getVersao() {
    return versao;
  }

  public void setVersao(@javax.annotation.Nullable String versao) {
    this.versao = versao;
  }


  public NfcomSefazInfNFCom id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Identificador da tag a ser assinada.  Informar a chave de acesso da NFCom e precedida do literal \&quot;NFCom\&quot;.    *Geramos automaticamente quando nenhum valor é informado.*
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public NfcomSefazInfNFCom ide(@javax.annotation.Nonnull NfcomSefazIde ide) {
    this.ide = ide;
    return this;
  }

  /**
   * Get ide
   * @return ide
   */
  @javax.annotation.Nonnull
  public NfcomSefazIde getIde() {
    return ide;
  }

  public void setIde(@javax.annotation.Nonnull NfcomSefazIde ide) {
    this.ide = ide;
  }


  public NfcomSefazInfNFCom emit(@javax.annotation.Nonnull NfcomSefazEmit emit) {
    this.emit = emit;
    return this;
  }

  /**
   * Get emit
   * @return emit
   */
  @javax.annotation.Nonnull
  public NfcomSefazEmit getEmit() {
    return emit;
  }

  public void setEmit(@javax.annotation.Nonnull NfcomSefazEmit emit) {
    this.emit = emit;
  }


  public NfcomSefazInfNFCom dest(@javax.annotation.Nonnull NfcomSefazDest dest) {
    this.dest = dest;
    return this;
  }

  /**
   * Get dest
   * @return dest
   */
  @javax.annotation.Nonnull
  public NfcomSefazDest getDest() {
    return dest;
  }

  public void setDest(@javax.annotation.Nonnull NfcomSefazDest dest) {
    this.dest = dest;
  }


  public NfcomSefazInfNFCom assinante(@javax.annotation.Nonnull NfcomSefazAssinante assinante) {
    this.assinante = assinante;
    return this;
  }

  /**
   * Get assinante
   * @return assinante
   */
  @javax.annotation.Nonnull
  public NfcomSefazAssinante getAssinante() {
    return assinante;
  }

  public void setAssinante(@javax.annotation.Nonnull NfcomSefazAssinante assinante) {
    this.assinante = assinante;
  }


  public NfcomSefazInfNFCom gSub(@javax.annotation.Nullable NfcomSefazGSub gSub) {
    this.gSub = gSub;
    return this;
  }

  /**
   * Get gSub
   * @return gSub
   */
  @javax.annotation.Nullable
  public NfcomSefazGSub getgSub() {
    return gSub;
  }

  public void setgSub(@javax.annotation.Nullable NfcomSefazGSub gSub) {
    this.gSub = gSub;
  }


  public NfcomSefazInfNFCom gCofat(@javax.annotation.Nullable NfcomSefazGCofat gCofat) {
    this.gCofat = gCofat;
    return this;
  }

  /**
   * Get gCofat
   * @return gCofat
   */
  @javax.annotation.Nullable
  public NfcomSefazGCofat getgCofat() {
    return gCofat;
  }

  public void setgCofat(@javax.annotation.Nullable NfcomSefazGCofat gCofat) {
    this.gCofat = gCofat;
  }


  public NfcomSefazInfNFCom det(@javax.annotation.Nonnull List<NfcomSefazDet> det) {
    this.det = det;
    return this;
  }

  public NfcomSefazInfNFCom addDetItem(NfcomSefazDet detItem) {
    if (this.det == null) {
      this.det = new ArrayList<>();
    }
    this.det.add(detItem);
    return this;
  }

  /**
   * Get det
   * @return det
   */
  @javax.annotation.Nonnull
  public List<NfcomSefazDet> getDet() {
    return det;
  }

  public void setDet(@javax.annotation.Nonnull List<NfcomSefazDet> det) {
    this.det = det;
  }


  public NfcomSefazInfNFCom total(@javax.annotation.Nonnull NfcomSefazTotal total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nonnull
  public NfcomSefazTotal getTotal() {
    return total;
  }

  public void setTotal(@javax.annotation.Nonnull NfcomSefazTotal total) {
    this.total = total;
  }


  public NfcomSefazInfNFCom gFidelidade(@javax.annotation.Nullable NfcomSefazGFidelidade gFidelidade) {
    this.gFidelidade = gFidelidade;
    return this;
  }

  /**
   * Get gFidelidade
   * @return gFidelidade
   */
  @javax.annotation.Nullable
  public NfcomSefazGFidelidade getgFidelidade() {
    return gFidelidade;
  }

  public void setgFidelidade(@javax.annotation.Nullable NfcomSefazGFidelidade gFidelidade) {
    this.gFidelidade = gFidelidade;
  }


  public NfcomSefazInfNFCom gFat(@javax.annotation.Nullable NfcomSefazGFat gFat) {
    this.gFat = gFat;
    return this;
  }

  /**
   * Get gFat
   * @return gFat
   */
  @javax.annotation.Nullable
  public NfcomSefazGFat getgFat() {
    return gFat;
  }

  public void setgFat(@javax.annotation.Nullable NfcomSefazGFat gFat) {
    this.gFat = gFat;
  }


  public NfcomSefazInfNFCom gFatCentral(@javax.annotation.Nullable NfcomSefazGFatCentral gFatCentral) {
    this.gFatCentral = gFatCentral;
    return this;
  }

  /**
   * Get gFatCentral
   * @return gFatCentral
   */
  @javax.annotation.Nullable
  public NfcomSefazGFatCentral getgFatCentral() {
    return gFatCentral;
  }

  public void setgFatCentral(@javax.annotation.Nullable NfcomSefazGFatCentral gFatCentral) {
    this.gFatCentral = gFatCentral;
  }


  public NfcomSefazInfNFCom autXML(@javax.annotation.Nullable List<NfcomSefazAutXML> autXML) {
    this.autXML = autXML;
    return this;
  }

  public NfcomSefazInfNFCom addAutXMLItem(NfcomSefazAutXML autXMLItem) {
    if (this.autXML == null) {
      this.autXML = new ArrayList<>();
    }
    this.autXML.add(autXMLItem);
    return this;
  }

  /**
   * Get autXML
   * @return autXML
   */
  @javax.annotation.Nullable
  public List<NfcomSefazAutXML> getAutXML() {
    return autXML;
  }

  public void setAutXML(@javax.annotation.Nullable List<NfcomSefazAutXML> autXML) {
    this.autXML = autXML;
  }


  public NfcomSefazInfNFCom infAdic(@javax.annotation.Nullable NfcomSefazInfAdic infAdic) {
    this.infAdic = infAdic;
    return this;
  }

  /**
   * Get infAdic
   * @return infAdic
   */
  @javax.annotation.Nullable
  public NfcomSefazInfAdic getInfAdic() {
    return infAdic;
  }

  public void setInfAdic(@javax.annotation.Nullable NfcomSefazInfAdic infAdic) {
    this.infAdic = infAdic;
  }


  public NfcomSefazInfNFCom gRespTec(@javax.annotation.Nullable NfcomSefazRespTec gRespTec) {
    this.gRespTec = gRespTec;
    return this;
  }

  /**
   * Get gRespTec
   * @return gRespTec
   */
  @javax.annotation.Nullable
  public NfcomSefazRespTec getgRespTec() {
    return gRespTec;
  }

  public void setgRespTec(@javax.annotation.Nullable NfcomSefazRespTec gRespTec) {
    this.gRespTec = gRespTec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazInfNFCom nfcomSefazInfNFCom = (NfcomSefazInfNFCom) o;
    return Objects.equals(this.versao, nfcomSefazInfNFCom.versao) &&
        Objects.equals(this.id, nfcomSefazInfNFCom.id) &&
        Objects.equals(this.ide, nfcomSefazInfNFCom.ide) &&
        Objects.equals(this.emit, nfcomSefazInfNFCom.emit) &&
        Objects.equals(this.dest, nfcomSefazInfNFCom.dest) &&
        Objects.equals(this.assinante, nfcomSefazInfNFCom.assinante) &&
        Objects.equals(this.gSub, nfcomSefazInfNFCom.gSub) &&
        Objects.equals(this.gCofat, nfcomSefazInfNFCom.gCofat) &&
        Objects.equals(this.det, nfcomSefazInfNFCom.det) &&
        Objects.equals(this.total, nfcomSefazInfNFCom.total) &&
        Objects.equals(this.gFidelidade, nfcomSefazInfNFCom.gFidelidade) &&
        Objects.equals(this.gFat, nfcomSefazInfNFCom.gFat) &&
        Objects.equals(this.gFatCentral, nfcomSefazInfNFCom.gFatCentral) &&
        Objects.equals(this.autXML, nfcomSefazInfNFCom.autXML) &&
        Objects.equals(this.infAdic, nfcomSefazInfNFCom.infAdic) &&
        Objects.equals(this.gRespTec, nfcomSefazInfNFCom.gRespTec);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(versao, id, ide, emit, dest, assinante, gSub, gCofat, det, total, gFidelidade, gFat, gFatCentral, autXML, infAdic, gRespTec);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazInfNFCom {\n");
    sb.append("    versao: ").append(toIndentedString(versao)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ide: ").append(toIndentedString(ide)).append("\n");
    sb.append("    emit: ").append(toIndentedString(emit)).append("\n");
    sb.append("    dest: ").append(toIndentedString(dest)).append("\n");
    sb.append("    assinante: ").append(toIndentedString(assinante)).append("\n");
    sb.append("    gSub: ").append(toIndentedString(gSub)).append("\n");
    sb.append("    gCofat: ").append(toIndentedString(gCofat)).append("\n");
    sb.append("    det: ").append(toIndentedString(det)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    gFidelidade: ").append(toIndentedString(gFidelidade)).append("\n");
    sb.append("    gFat: ").append(toIndentedString(gFat)).append("\n");
    sb.append("    gFatCentral: ").append(toIndentedString(gFatCentral)).append("\n");
    sb.append("    autXML: ").append(toIndentedString(autXML)).append("\n");
    sb.append("    infAdic: ").append(toIndentedString(infAdic)).append("\n");
    sb.append("    gRespTec: ").append(toIndentedString(gRespTec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("versao");
    openapiFields.add("Id");
    openapiFields.add("ide");
    openapiFields.add("emit");
    openapiFields.add("dest");
    openapiFields.add("assinante");
    openapiFields.add("gSub");
    openapiFields.add("gCofat");
    openapiFields.add("det");
    openapiFields.add("total");
    openapiFields.add("gFidelidade");
    openapiFields.add("gFat");
    openapiFields.add("gFatCentral");
    openapiFields.add("autXML");
    openapiFields.add("infAdic");
    openapiFields.add("gRespTec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("versao");
    openapiRequiredFields.add("ide");
    openapiRequiredFields.add("emit");
    openapiRequiredFields.add("dest");
    openapiRequiredFields.add("assinante");
    openapiRequiredFields.add("det");
    openapiRequiredFields.add("total");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazInfNFCom
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazInfNFCom.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazInfNFCom is not found in the empty JSON string", NfcomSefazInfNFCom.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazInfNFCom.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazInfNFCom` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazInfNFCom.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("versao") != null && !jsonObj.get("versao").isJsonNull()) && !jsonObj.get("versao").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versao` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versao").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      // validate the required field `ide`
      NfcomSefazIde.validateJsonElement(jsonObj.get("ide"));
      // validate the required field `emit`
      NfcomSefazEmit.validateJsonElement(jsonObj.get("emit"));
      // validate the required field `dest`
      NfcomSefazDest.validateJsonElement(jsonObj.get("dest"));
      // validate the required field `assinante`
      NfcomSefazAssinante.validateJsonElement(jsonObj.get("assinante"));
      // validate the optional field `gSub`
      if (jsonObj.get("gSub") != null && !jsonObj.get("gSub").isJsonNull()) {
        NfcomSefazGSub.validateJsonElement(jsonObj.get("gSub"));
      }
      // validate the optional field `gCofat`
      if (jsonObj.get("gCofat") != null && !jsonObj.get("gCofat").isJsonNull()) {
        NfcomSefazGCofat.validateJsonElement(jsonObj.get("gCofat"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("det").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `det` to be an array in the JSON string but got `%s`", jsonObj.get("det").toString()));
      }

      JsonArray jsonArraydet = jsonObj.getAsJsonArray("det");
      // validate the required field `det` (array)
      for (int i = 0; i < jsonArraydet.size(); i++) {
        NfcomSefazDet.validateJsonElement(jsonArraydet.get(i));
      };
      // validate the required field `total`
      NfcomSefazTotal.validateJsonElement(jsonObj.get("total"));
      // validate the optional field `gFidelidade`
      if (jsonObj.get("gFidelidade") != null && !jsonObj.get("gFidelidade").isJsonNull()) {
        NfcomSefazGFidelidade.validateJsonElement(jsonObj.get("gFidelidade"));
      }
      // validate the optional field `gFat`
      if (jsonObj.get("gFat") != null && !jsonObj.get("gFat").isJsonNull()) {
        NfcomSefazGFat.validateJsonElement(jsonObj.get("gFat"));
      }
      // validate the optional field `gFatCentral`
      if (jsonObj.get("gFatCentral") != null && !jsonObj.get("gFatCentral").isJsonNull()) {
        NfcomSefazGFatCentral.validateJsonElement(jsonObj.get("gFatCentral"));
      }
      if (jsonObj.get("autXML") != null && !jsonObj.get("autXML").isJsonNull()) {
        JsonArray jsonArrayautXML = jsonObj.getAsJsonArray("autXML");
        if (jsonArrayautXML != null) {
          // ensure the json data is an array
          if (!jsonObj.get("autXML").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `autXML` to be an array in the JSON string but got `%s`", jsonObj.get("autXML").toString()));
          }

          // validate the optional field `autXML` (array)
          for (int i = 0; i < jsonArrayautXML.size(); i++) {
            NfcomSefazAutXML.validateJsonElement(jsonArrayautXML.get(i));
          };
        }
      }
      // validate the optional field `infAdic`
      if (jsonObj.get("infAdic") != null && !jsonObj.get("infAdic").isJsonNull()) {
        NfcomSefazInfAdic.validateJsonElement(jsonObj.get("infAdic"));
      }
      // validate the optional field `gRespTec`
      if (jsonObj.get("gRespTec") != null && !jsonObj.get("gRespTec").isJsonNull()) {
        NfcomSefazRespTec.validateJsonElement(jsonObj.get("gRespTec"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazInfNFCom.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazInfNFCom' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazInfNFCom> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazInfNFCom.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazInfNFCom>() {
           @Override
           public void write(JsonWriter out, NfcomSefazInfNFCom value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazInfNFCom read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazInfNFCom given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazInfNFCom
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazInfNFCom
   */
  public static NfcomSefazInfNFCom fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazInfNFCom.class);
  }

  /**
   * Convert an instance of NfcomSefazInfNFCom to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

