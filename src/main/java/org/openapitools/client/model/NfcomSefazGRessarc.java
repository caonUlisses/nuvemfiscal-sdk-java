/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Grupo de Informações detalhadas de item de cClass de Ressarcimento.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazGRessarc {
  public static final String SERIALIZED_NAME_TP_RESSARC = "tpRessarc";
  @SerializedName(SERIALIZED_NAME_TP_RESSARC)
  @javax.annotation.Nullable
  private Integer tpRessarc;

  public static final String SERIALIZED_NAME_D_REF = "dRef";
  @SerializedName(SERIALIZED_NAME_D_REF)
  @javax.annotation.Nullable
  private LocalDate dRef;

  public static final String SERIALIZED_NAME_N_PROCESSO = "nProcesso";
  @SerializedName(SERIALIZED_NAME_N_PROCESSO)
  @javax.annotation.Nullable
  private String nProcesso;

  public static final String SERIALIZED_NAME_N_PROT_RECLAMA = "nProtReclama";
  @SerializedName(SERIALIZED_NAME_N_PROT_RECLAMA)
  @javax.annotation.Nullable
  private String nProtReclama;

  public static final String SERIALIZED_NAME_X_OBS = "xObs";
  @SerializedName(SERIALIZED_NAME_X_OBS)
  @javax.annotation.Nullable
  private String xObs;

  public NfcomSefazGRessarc() {
  }

  public NfcomSefazGRessarc tpRessarc(@javax.annotation.Nullable Integer tpRessarc) {
    this.tpRessarc = tpRessarc;
    return this;
  }

  /**
   * Tipo de Ressarcimento.  * 1 - Cobrança Indevida  * 2 - Interrupção  * 99 - Outros
   * @return tpRessarc
   */
  @javax.annotation.Nullable
  public Integer getTpRessarc() {
    return tpRessarc;
  }

  public void setTpRessarc(@javax.annotation.Nullable Integer tpRessarc) {
    this.tpRessarc = tpRessarc;
  }


  public NfcomSefazGRessarc dRef(@javax.annotation.Nullable LocalDate dRef) {
    this.dRef = dRef;
    return this;
  }

  /**
   * Data de referencia.  Formato AAAA-MM-DD.
   * @return dRef
   */
  @javax.annotation.Nullable
  public LocalDate getdRef() {
    return dRef;
  }

  public void setdRef(@javax.annotation.Nullable LocalDate dRef) {
    this.dRef = dRef;
  }


  public NfcomSefazGRessarc nProcesso(@javax.annotation.Nullable String nProcesso) {
    this.nProcesso = nProcesso;
    return this;
  }

  /**
   * Número do Processo.
   * @return nProcesso
   */
  @javax.annotation.Nullable
  public String getnProcesso() {
    return nProcesso;
  }

  public void setnProcesso(@javax.annotation.Nullable String nProcesso) {
    this.nProcesso = nProcesso;
  }


  public NfcomSefazGRessarc nProtReclama(@javax.annotation.Nullable String nProtReclama) {
    this.nProtReclama = nProtReclama;
    return this;
  }

  /**
   * Número do protocolo de reclamação.
   * @return nProtReclama
   */
  @javax.annotation.Nullable
  public String getnProtReclama() {
    return nProtReclama;
  }

  public void setnProtReclama(@javax.annotation.Nullable String nProtReclama) {
    this.nProtReclama = nProtReclama;
  }


  public NfcomSefazGRessarc xObs(@javax.annotation.Nullable String xObs) {
    this.xObs = xObs;
    return this;
  }

  /**
   * Observações sobre o processo de ressarcimento.
   * @return xObs
   */
  @javax.annotation.Nullable
  public String getxObs() {
    return xObs;
  }

  public void setxObs(@javax.annotation.Nullable String xObs) {
    this.xObs = xObs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazGRessarc nfcomSefazGRessarc = (NfcomSefazGRessarc) o;
    return Objects.equals(this.tpRessarc, nfcomSefazGRessarc.tpRessarc) &&
        Objects.equals(this.dRef, nfcomSefazGRessarc.dRef) &&
        Objects.equals(this.nProcesso, nfcomSefazGRessarc.nProcesso) &&
        Objects.equals(this.nProtReclama, nfcomSefazGRessarc.nProtReclama) &&
        Objects.equals(this.xObs, nfcomSefazGRessarc.xObs);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tpRessarc, dRef, nProcesso, nProtReclama, xObs);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazGRessarc {\n");
    sb.append("    tpRessarc: ").append(toIndentedString(tpRessarc)).append("\n");
    sb.append("    dRef: ").append(toIndentedString(dRef)).append("\n");
    sb.append("    nProcesso: ").append(toIndentedString(nProcesso)).append("\n");
    sb.append("    nProtReclama: ").append(toIndentedString(nProtReclama)).append("\n");
    sb.append("    xObs: ").append(toIndentedString(xObs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tpRessarc");
    openapiFields.add("dRef");
    openapiFields.add("nProcesso");
    openapiFields.add("nProtReclama");
    openapiFields.add("xObs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tpRessarc");
    openapiRequiredFields.add("dRef");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazGRessarc
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazGRessarc.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazGRessarc is not found in the empty JSON string", NfcomSefazGRessarc.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazGRessarc.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazGRessarc` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazGRessarc.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("nProcesso") != null && !jsonObj.get("nProcesso").isJsonNull()) && !jsonObj.get("nProcesso").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nProcesso` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nProcesso").toString()));
      }
      if ((jsonObj.get("nProtReclama") != null && !jsonObj.get("nProtReclama").isJsonNull()) && !jsonObj.get("nProtReclama").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nProtReclama` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nProtReclama").toString()));
      }
      if ((jsonObj.get("xObs") != null && !jsonObj.get("xObs").isJsonNull()) && !jsonObj.get("xObs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xObs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xObs").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazGRessarc.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazGRessarc' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazGRessarc> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazGRessarc.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazGRessarc>() {
           @Override
           public void write(JsonWriter out, NfcomSefazGRessarc value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazGRessarc read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazGRessarc given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazGRessarc
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazGRessarc
   */
  public static NfcomSefazGRessarc fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazGRessarc.class);
  }

  /**
   * Convert an instance of NfcomSefazGRessarc to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

