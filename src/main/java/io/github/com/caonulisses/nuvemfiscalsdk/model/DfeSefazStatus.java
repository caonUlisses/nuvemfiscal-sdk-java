/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * DfeSefazStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class DfeSefazStatus {
  /**
   * SEFAZ autorizadora responsável.
   */
  @JsonAdapter(AutorizadorEnum.Adapter.class)
  public enum AutorizadorEnum {
    AM("AM"),
    
    BA("BA"),
    
    CE("CE"),
    
    GO("GO"),
    
    MG("MG"),
    
    MS("MS"),
    
    MT("MT"),
    
    PE("PE"),
    
    PR("PR"),
    
    RS("RS"),
    
    SP("SP"),
    
    SVAN("SVAN"),
    
    SVRS("SVRS"),
    
    SVCAN("SVCAN"),
    
    SVCRS("SVCRS"),
    
    AN("AN"),
    
    SVSP("SVSP"),
    
    SVCSP("SVCSP");

    private String value;

    AutorizadorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AutorizadorEnum fromValue(String value) {
      for (AutorizadorEnum b : AutorizadorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AutorizadorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AutorizadorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AutorizadorEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AutorizadorEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AutorizadorEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUTORIZADOR = "autorizador";
  @SerializedName(SERIALIZED_NAME_AUTORIZADOR)
  @javax.annotation.Nullable
  private AutorizadorEnum autorizador;

  /**
   * Identificação do Ambiente.
   */
  @JsonAdapter(AmbienteEnum.Adapter.class)
  public enum AmbienteEnum {
    HOMOLOGACAO("homologacao"),
    
    PRODUCAO("producao");

    private String value;

    AmbienteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AmbienteEnum fromValue(String value) {
      for (AmbienteEnum b : AmbienteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AmbienteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AmbienteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AmbienteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AmbienteEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AmbienteEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AMBIENTE = "ambiente";
  @SerializedName(SERIALIZED_NAME_AMBIENTE)
  @javax.annotation.Nullable
  private AmbienteEnum ambiente;

  public static final String SERIALIZED_NAME_DATA_HORA_CONSULTA = "data_hora_consulta";
  @SerializedName(SERIALIZED_NAME_DATA_HORA_CONSULTA)
  @javax.annotation.Nullable
  private OffsetDateTime dataHoraConsulta;

  public static final String SERIALIZED_NAME_CODIGO_STATUS = "codigo_status";
  @SerializedName(SERIALIZED_NAME_CODIGO_STATUS)
  @javax.annotation.Nullable
  private Integer codigoStatus;

  public static final String SERIALIZED_NAME_MOTIVO_STATUS = "motivo_status";
  @SerializedName(SERIALIZED_NAME_MOTIVO_STATUS)
  @javax.annotation.Nullable
  private String motivoStatus;

  public static final String SERIALIZED_NAME_TEMPO_MEDIO_RESPOSTA = "tempo_medio_resposta";
  @SerializedName(SERIALIZED_NAME_TEMPO_MEDIO_RESPOSTA)
  @javax.annotation.Nullable
  private Integer tempoMedioResposta;

  public static final String SERIALIZED_NAME_DATA_HORA_RETORNO = "data_hora_retorno";
  @SerializedName(SERIALIZED_NAME_DATA_HORA_RETORNO)
  @javax.annotation.Nullable
  private OffsetDateTime dataHoraRetorno;

  public DfeSefazStatus() {
  }

  public DfeSefazStatus autorizador(@javax.annotation.Nullable AutorizadorEnum autorizador) {
    this.autorizador = autorizador;
    return this;
  }

  /**
   * SEFAZ autorizadora responsável.
   * @return autorizador
   */
  @javax.annotation.Nullable
  public AutorizadorEnum getAutorizador() {
    return autorizador;
  }

  public void setAutorizador(@javax.annotation.Nullable AutorizadorEnum autorizador) {
    this.autorizador = autorizador;
  }


  public DfeSefazStatus ambiente(@javax.annotation.Nullable AmbienteEnum ambiente) {
    this.ambiente = ambiente;
    return this;
  }

  /**
   * Identificação do Ambiente.
   * @return ambiente
   */
  @javax.annotation.Nullable
  public AmbienteEnum getAmbiente() {
    return ambiente;
  }

  public void setAmbiente(@javax.annotation.Nullable AmbienteEnum ambiente) {
    this.ambiente = ambiente;
  }


  public DfeSefazStatus dataHoraConsulta(@javax.annotation.Nullable OffsetDateTime dataHoraConsulta) {
    this.dataHoraConsulta = dataHoraConsulta;
    return this;
  }

  /**
   * Data e hora da consulta.
   * @return dataHoraConsulta
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataHoraConsulta() {
    return dataHoraConsulta;
  }

  public void setDataHoraConsulta(@javax.annotation.Nullable OffsetDateTime dataHoraConsulta) {
    this.dataHoraConsulta = dataHoraConsulta;
  }


  public DfeSefazStatus codigoStatus(@javax.annotation.Nullable Integer codigoStatus) {
    this.codigoStatus = codigoStatus;
    return this;
  }

  /**
   * Código do status da mensagem enviada.
   * @return codigoStatus
   */
  @javax.annotation.Nullable
  public Integer getCodigoStatus() {
    return codigoStatus;
  }

  public void setCodigoStatus(@javax.annotation.Nullable Integer codigoStatus) {
    this.codigoStatus = codigoStatus;
  }


  public DfeSefazStatus motivoStatus(@javax.annotation.Nullable String motivoStatus) {
    this.motivoStatus = motivoStatus;
    return this;
  }

  /**
   * Descrição literal do status do serviço solicitado.
   * @return motivoStatus
   */
  @javax.annotation.Nullable
  public String getMotivoStatus() {
    return motivoStatus;
  }

  public void setMotivoStatus(@javax.annotation.Nullable String motivoStatus) {
    this.motivoStatus = motivoStatus;
  }


  public DfeSefazStatus tempoMedioResposta(@javax.annotation.Nullable Integer tempoMedioResposta) {
    this.tempoMedioResposta = tempoMedioResposta;
    return this;
  }

  /**
   * Tempo médio de resposta do serviço (em segundos) dos últimos 5 minutos.
   * @return tempoMedioResposta
   */
  @javax.annotation.Nullable
  public Integer getTempoMedioResposta() {
    return tempoMedioResposta;
  }

  public void setTempoMedioResposta(@javax.annotation.Nullable Integer tempoMedioResposta) {
    this.tempoMedioResposta = tempoMedioResposta;
  }


  public DfeSefazStatus dataHoraRetorno(@javax.annotation.Nullable OffsetDateTime dataHoraRetorno) {
    this.dataHoraRetorno = dataHoraRetorno;
    return this;
  }

  /**
   * Data e hora prevista para o retorno dos serviços prestados.
   * @return dataHoraRetorno
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataHoraRetorno() {
    return dataHoraRetorno;
  }

  public void setDataHoraRetorno(@javax.annotation.Nullable OffsetDateTime dataHoraRetorno) {
    this.dataHoraRetorno = dataHoraRetorno;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfeSefazStatus dfeSefazStatus = (DfeSefazStatus) o;
    return Objects.equals(this.autorizador, dfeSefazStatus.autorizador) &&
        Objects.equals(this.ambiente, dfeSefazStatus.ambiente) &&
        Objects.equals(this.dataHoraConsulta, dfeSefazStatus.dataHoraConsulta) &&
        Objects.equals(this.codigoStatus, dfeSefazStatus.codigoStatus) &&
        Objects.equals(this.motivoStatus, dfeSefazStatus.motivoStatus) &&
        Objects.equals(this.tempoMedioResposta, dfeSefazStatus.tempoMedioResposta) &&
        Objects.equals(this.dataHoraRetorno, dfeSefazStatus.dataHoraRetorno);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(autorizador, ambiente, dataHoraConsulta, codigoStatus, motivoStatus, tempoMedioResposta, dataHoraRetorno);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfeSefazStatus {\n");
    sb.append("    autorizador: ").append(toIndentedString(autorizador)).append("\n");
    sb.append("    ambiente: ").append(toIndentedString(ambiente)).append("\n");
    sb.append("    dataHoraConsulta: ").append(toIndentedString(dataHoraConsulta)).append("\n");
    sb.append("    codigoStatus: ").append(toIndentedString(codigoStatus)).append("\n");
    sb.append("    motivoStatus: ").append(toIndentedString(motivoStatus)).append("\n");
    sb.append("    tempoMedioResposta: ").append(toIndentedString(tempoMedioResposta)).append("\n");
    sb.append("    dataHoraRetorno: ").append(toIndentedString(dataHoraRetorno)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("autorizador");
    openapiFields.add("ambiente");
    openapiFields.add("data_hora_consulta");
    openapiFields.add("codigo_status");
    openapiFields.add("motivo_status");
    openapiFields.add("tempo_medio_resposta");
    openapiFields.add("data_hora_retorno");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DfeSefazStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DfeSefazStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DfeSefazStatus is not found in the empty JSON string", DfeSefazStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DfeSefazStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DfeSefazStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("autorizador") != null && !jsonObj.get("autorizador").isJsonNull()) && !jsonObj.get("autorizador").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autorizador` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autorizador").toString()));
      }
      // validate the optional field `autorizador`
      if (jsonObj.get("autorizador") != null && !jsonObj.get("autorizador").isJsonNull()) {
        AutorizadorEnum.validateJsonElement(jsonObj.get("autorizador"));
      }
      if ((jsonObj.get("ambiente") != null && !jsonObj.get("ambiente").isJsonNull()) && !jsonObj.get("ambiente").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ambiente` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ambiente").toString()));
      }
      // validate the optional field `ambiente`
      if (jsonObj.get("ambiente") != null && !jsonObj.get("ambiente").isJsonNull()) {
        AmbienteEnum.validateJsonElement(jsonObj.get("ambiente"));
      }
      if ((jsonObj.get("motivo_status") != null && !jsonObj.get("motivo_status").isJsonNull()) && !jsonObj.get("motivo_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `motivo_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("motivo_status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DfeSefazStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DfeSefazStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DfeSefazStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DfeSefazStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<DfeSefazStatus>() {
           @Override
           public void write(JsonWriter out, DfeSefazStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DfeSefazStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DfeSefazStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DfeSefazStatus
   * @throws IOException if the JSON string is invalid with respect to DfeSefazStatus
   */
  public static DfeSefazStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DfeSefazStatus.class);
  }

  /**
   * Convert an instance of DfeSefazStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

