/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NfeSefazAutXML;
import org.openapitools.client.model.NfeSefazAvulsa;
import org.openapitools.client.model.NfeSefazCana;
import org.openapitools.client.model.NfeSefazCobr;
import org.openapitools.client.model.NfeSefazCompra;
import org.openapitools.client.model.NfeSefazDest;
import org.openapitools.client.model.NfeSefazDet;
import org.openapitools.client.model.NfeSefazEmit;
import org.openapitools.client.model.NfeSefazExporta;
import org.openapitools.client.model.NfeSefazIde;
import org.openapitools.client.model.NfeSefazInfAdic;
import org.openapitools.client.model.NfeSefazInfIntermed;
import org.openapitools.client.model.NfeSefazInfRespTec;
import org.openapitools.client.model.NfeSefazInfSolicNFF;
import org.openapitools.client.model.NfeSefazLocal;
import org.openapitools.client.model.NfeSefazPag;
import org.openapitools.client.model.NfeSefazTotal;
import org.openapitools.client.model.NfeSefazTransp;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Informações da Nota Fiscal eletrônica.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazInfNFe {
  public static final String SERIALIZED_NAME_VERSAO = "versao";
  @SerializedName(SERIALIZED_NAME_VERSAO)
  @javax.annotation.Nullable
  private String versao;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_IDE = "ide";
  @SerializedName(SERIALIZED_NAME_IDE)
  @javax.annotation.Nonnull
  private NfeSefazIde ide;

  public static final String SERIALIZED_NAME_EMIT = "emit";
  @SerializedName(SERIALIZED_NAME_EMIT)
  @javax.annotation.Nonnull
  private NfeSefazEmit emit;

  public static final String SERIALIZED_NAME_AVULSA = "avulsa";
  @SerializedName(SERIALIZED_NAME_AVULSA)
  @javax.annotation.Nullable
  private NfeSefazAvulsa avulsa;

  public static final String SERIALIZED_NAME_DEST = "dest";
  @SerializedName(SERIALIZED_NAME_DEST)
  @javax.annotation.Nullable
  private NfeSefazDest dest;

  public static final String SERIALIZED_NAME_RETIRADA = "retirada";
  @SerializedName(SERIALIZED_NAME_RETIRADA)
  @javax.annotation.Nullable
  private NfeSefazLocal retirada;

  public static final String SERIALIZED_NAME_ENTREGA = "entrega";
  @SerializedName(SERIALIZED_NAME_ENTREGA)
  @javax.annotation.Nullable
  private NfeSefazLocal entrega;

  public static final String SERIALIZED_NAME_AUT_X_M_L = "autXML";
  @SerializedName(SERIALIZED_NAME_AUT_X_M_L)
  @javax.annotation.Nullable
  private List<NfeSefazAutXML> autXML = new ArrayList<>();

  public static final String SERIALIZED_NAME_DET = "det";
  @SerializedName(SERIALIZED_NAME_DET)
  @javax.annotation.Nonnull
  private List<NfeSefazDet> det = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  @javax.annotation.Nonnull
  private NfeSefazTotal total;

  public static final String SERIALIZED_NAME_TRANSP = "transp";
  @SerializedName(SERIALIZED_NAME_TRANSP)
  @javax.annotation.Nonnull
  private NfeSefazTransp transp;

  public static final String SERIALIZED_NAME_COBR = "cobr";
  @SerializedName(SERIALIZED_NAME_COBR)
  @javax.annotation.Nullable
  private NfeSefazCobr cobr;

  public static final String SERIALIZED_NAME_PAG = "pag";
  @SerializedName(SERIALIZED_NAME_PAG)
  @javax.annotation.Nonnull
  private NfeSefazPag pag;

  public static final String SERIALIZED_NAME_INF_INTERMED = "infIntermed";
  @SerializedName(SERIALIZED_NAME_INF_INTERMED)
  @javax.annotation.Nullable
  private NfeSefazInfIntermed infIntermed;

  public static final String SERIALIZED_NAME_INF_ADIC = "infAdic";
  @SerializedName(SERIALIZED_NAME_INF_ADIC)
  @javax.annotation.Nullable
  private NfeSefazInfAdic infAdic;

  public static final String SERIALIZED_NAME_EXPORTA = "exporta";
  @SerializedName(SERIALIZED_NAME_EXPORTA)
  @javax.annotation.Nullable
  private NfeSefazExporta exporta;

  public static final String SERIALIZED_NAME_COMPRA = "compra";
  @SerializedName(SERIALIZED_NAME_COMPRA)
  @javax.annotation.Nullable
  private NfeSefazCompra compra;

  public static final String SERIALIZED_NAME_CANA = "cana";
  @SerializedName(SERIALIZED_NAME_CANA)
  @javax.annotation.Nullable
  private NfeSefazCana cana;

  public static final String SERIALIZED_NAME_INF_RESP_TEC = "infRespTec";
  @SerializedName(SERIALIZED_NAME_INF_RESP_TEC)
  @javax.annotation.Nullable
  private NfeSefazInfRespTec infRespTec;

  public static final String SERIALIZED_NAME_INF_SOLIC_N_F_F = "infSolicNFF";
  @SerializedName(SERIALIZED_NAME_INF_SOLIC_N_F_F)
  @javax.annotation.Nullable
  private NfeSefazInfSolicNFF infSolicNFF;

  public NfeSefazInfNFe() {
  }

  public NfeSefazInfNFe versao(@javax.annotation.Nullable String versao) {
    this.versao = versao;
    return this;
  }

  /**
   * Versão do leiaute (v4.00).
   * @return versao
   */
  @javax.annotation.Nullable
  public String getVersao() {
    return versao;
  }

  public void setVersao(@javax.annotation.Nullable String versao) {
    this.versao = versao;
  }


  public NfeSefazInfNFe id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * PL_005d - 11/08/09 - validação do Id.    *Geramos automaticamente quando nenhum valor é informado.*
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public NfeSefazInfNFe ide(@javax.annotation.Nonnull NfeSefazIde ide) {
    this.ide = ide;
    return this;
  }

  /**
   * Get ide
   * @return ide
   */
  @javax.annotation.Nonnull
  public NfeSefazIde getIde() {
    return ide;
  }

  public void setIde(@javax.annotation.Nonnull NfeSefazIde ide) {
    this.ide = ide;
  }


  public NfeSefazInfNFe emit(@javax.annotation.Nonnull NfeSefazEmit emit) {
    this.emit = emit;
    return this;
  }

  /**
   * Get emit
   * @return emit
   */
  @javax.annotation.Nonnull
  public NfeSefazEmit getEmit() {
    return emit;
  }

  public void setEmit(@javax.annotation.Nonnull NfeSefazEmit emit) {
    this.emit = emit;
  }


  public NfeSefazInfNFe avulsa(@javax.annotation.Nullable NfeSefazAvulsa avulsa) {
    this.avulsa = avulsa;
    return this;
  }

  /**
   * Get avulsa
   * @return avulsa
   */
  @javax.annotation.Nullable
  public NfeSefazAvulsa getAvulsa() {
    return avulsa;
  }

  public void setAvulsa(@javax.annotation.Nullable NfeSefazAvulsa avulsa) {
    this.avulsa = avulsa;
  }


  public NfeSefazInfNFe dest(@javax.annotation.Nullable NfeSefazDest dest) {
    this.dest = dest;
    return this;
  }

  /**
   * Get dest
   * @return dest
   */
  @javax.annotation.Nullable
  public NfeSefazDest getDest() {
    return dest;
  }

  public void setDest(@javax.annotation.Nullable NfeSefazDest dest) {
    this.dest = dest;
  }


  public NfeSefazInfNFe retirada(@javax.annotation.Nullable NfeSefazLocal retirada) {
    this.retirada = retirada;
    return this;
  }

  /**
   * Get retirada
   * @return retirada
   */
  @javax.annotation.Nullable
  public NfeSefazLocal getRetirada() {
    return retirada;
  }

  public void setRetirada(@javax.annotation.Nullable NfeSefazLocal retirada) {
    this.retirada = retirada;
  }


  public NfeSefazInfNFe entrega(@javax.annotation.Nullable NfeSefazLocal entrega) {
    this.entrega = entrega;
    return this;
  }

  /**
   * Get entrega
   * @return entrega
   */
  @javax.annotation.Nullable
  public NfeSefazLocal getEntrega() {
    return entrega;
  }

  public void setEntrega(@javax.annotation.Nullable NfeSefazLocal entrega) {
    this.entrega = entrega;
  }


  public NfeSefazInfNFe autXML(@javax.annotation.Nullable List<NfeSefazAutXML> autXML) {
    this.autXML = autXML;
    return this;
  }

  public NfeSefazInfNFe addAutXMLItem(NfeSefazAutXML autXMLItem) {
    if (this.autXML == null) {
      this.autXML = new ArrayList<>();
    }
    this.autXML.add(autXMLItem);
    return this;
  }

  /**
   * Get autXML
   * @return autXML
   */
  @javax.annotation.Nullable
  public List<NfeSefazAutXML> getAutXML() {
    return autXML;
  }

  public void setAutXML(@javax.annotation.Nullable List<NfeSefazAutXML> autXML) {
    this.autXML = autXML;
  }


  public NfeSefazInfNFe det(@javax.annotation.Nonnull List<NfeSefazDet> det) {
    this.det = det;
    return this;
  }

  public NfeSefazInfNFe addDetItem(NfeSefazDet detItem) {
    if (this.det == null) {
      this.det = new ArrayList<>();
    }
    this.det.add(detItem);
    return this;
  }

  /**
   * Get det
   * @return det
   */
  @javax.annotation.Nonnull
  public List<NfeSefazDet> getDet() {
    return det;
  }

  public void setDet(@javax.annotation.Nonnull List<NfeSefazDet> det) {
    this.det = det;
  }


  public NfeSefazInfNFe total(@javax.annotation.Nonnull NfeSefazTotal total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nonnull
  public NfeSefazTotal getTotal() {
    return total;
  }

  public void setTotal(@javax.annotation.Nonnull NfeSefazTotal total) {
    this.total = total;
  }


  public NfeSefazInfNFe transp(@javax.annotation.Nonnull NfeSefazTransp transp) {
    this.transp = transp;
    return this;
  }

  /**
   * Get transp
   * @return transp
   */
  @javax.annotation.Nonnull
  public NfeSefazTransp getTransp() {
    return transp;
  }

  public void setTransp(@javax.annotation.Nonnull NfeSefazTransp transp) {
    this.transp = transp;
  }


  public NfeSefazInfNFe cobr(@javax.annotation.Nullable NfeSefazCobr cobr) {
    this.cobr = cobr;
    return this;
  }

  /**
   * Get cobr
   * @return cobr
   */
  @javax.annotation.Nullable
  public NfeSefazCobr getCobr() {
    return cobr;
  }

  public void setCobr(@javax.annotation.Nullable NfeSefazCobr cobr) {
    this.cobr = cobr;
  }


  public NfeSefazInfNFe pag(@javax.annotation.Nonnull NfeSefazPag pag) {
    this.pag = pag;
    return this;
  }

  /**
   * Get pag
   * @return pag
   */
  @javax.annotation.Nonnull
  public NfeSefazPag getPag() {
    return pag;
  }

  public void setPag(@javax.annotation.Nonnull NfeSefazPag pag) {
    this.pag = pag;
  }


  public NfeSefazInfNFe infIntermed(@javax.annotation.Nullable NfeSefazInfIntermed infIntermed) {
    this.infIntermed = infIntermed;
    return this;
  }

  /**
   * Get infIntermed
   * @return infIntermed
   */
  @javax.annotation.Nullable
  public NfeSefazInfIntermed getInfIntermed() {
    return infIntermed;
  }

  public void setInfIntermed(@javax.annotation.Nullable NfeSefazInfIntermed infIntermed) {
    this.infIntermed = infIntermed;
  }


  public NfeSefazInfNFe infAdic(@javax.annotation.Nullable NfeSefazInfAdic infAdic) {
    this.infAdic = infAdic;
    return this;
  }

  /**
   * Get infAdic
   * @return infAdic
   */
  @javax.annotation.Nullable
  public NfeSefazInfAdic getInfAdic() {
    return infAdic;
  }

  public void setInfAdic(@javax.annotation.Nullable NfeSefazInfAdic infAdic) {
    this.infAdic = infAdic;
  }


  public NfeSefazInfNFe exporta(@javax.annotation.Nullable NfeSefazExporta exporta) {
    this.exporta = exporta;
    return this;
  }

  /**
   * Get exporta
   * @return exporta
   */
  @javax.annotation.Nullable
  public NfeSefazExporta getExporta() {
    return exporta;
  }

  public void setExporta(@javax.annotation.Nullable NfeSefazExporta exporta) {
    this.exporta = exporta;
  }


  public NfeSefazInfNFe compra(@javax.annotation.Nullable NfeSefazCompra compra) {
    this.compra = compra;
    return this;
  }

  /**
   * Get compra
   * @return compra
   */
  @javax.annotation.Nullable
  public NfeSefazCompra getCompra() {
    return compra;
  }

  public void setCompra(@javax.annotation.Nullable NfeSefazCompra compra) {
    this.compra = compra;
  }


  public NfeSefazInfNFe cana(@javax.annotation.Nullable NfeSefazCana cana) {
    this.cana = cana;
    return this;
  }

  /**
   * Get cana
   * @return cana
   */
  @javax.annotation.Nullable
  public NfeSefazCana getCana() {
    return cana;
  }

  public void setCana(@javax.annotation.Nullable NfeSefazCana cana) {
    this.cana = cana;
  }


  public NfeSefazInfNFe infRespTec(@javax.annotation.Nullable NfeSefazInfRespTec infRespTec) {
    this.infRespTec = infRespTec;
    return this;
  }

  /**
   * Get infRespTec
   * @return infRespTec
   */
  @javax.annotation.Nullable
  public NfeSefazInfRespTec getInfRespTec() {
    return infRespTec;
  }

  public void setInfRespTec(@javax.annotation.Nullable NfeSefazInfRespTec infRespTec) {
    this.infRespTec = infRespTec;
  }


  public NfeSefazInfNFe infSolicNFF(@javax.annotation.Nullable NfeSefazInfSolicNFF infSolicNFF) {
    this.infSolicNFF = infSolicNFF;
    return this;
  }

  /**
   * Get infSolicNFF
   * @return infSolicNFF
   */
  @javax.annotation.Nullable
  public NfeSefazInfSolicNFF getInfSolicNFF() {
    return infSolicNFF;
  }

  public void setInfSolicNFF(@javax.annotation.Nullable NfeSefazInfSolicNFF infSolicNFF) {
    this.infSolicNFF = infSolicNFF;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazInfNFe nfeSefazInfNFe = (NfeSefazInfNFe) o;
    return Objects.equals(this.versao, nfeSefazInfNFe.versao) &&
        Objects.equals(this.id, nfeSefazInfNFe.id) &&
        Objects.equals(this.ide, nfeSefazInfNFe.ide) &&
        Objects.equals(this.emit, nfeSefazInfNFe.emit) &&
        Objects.equals(this.avulsa, nfeSefazInfNFe.avulsa) &&
        Objects.equals(this.dest, nfeSefazInfNFe.dest) &&
        Objects.equals(this.retirada, nfeSefazInfNFe.retirada) &&
        Objects.equals(this.entrega, nfeSefazInfNFe.entrega) &&
        Objects.equals(this.autXML, nfeSefazInfNFe.autXML) &&
        Objects.equals(this.det, nfeSefazInfNFe.det) &&
        Objects.equals(this.total, nfeSefazInfNFe.total) &&
        Objects.equals(this.transp, nfeSefazInfNFe.transp) &&
        Objects.equals(this.cobr, nfeSefazInfNFe.cobr) &&
        Objects.equals(this.pag, nfeSefazInfNFe.pag) &&
        Objects.equals(this.infIntermed, nfeSefazInfNFe.infIntermed) &&
        Objects.equals(this.infAdic, nfeSefazInfNFe.infAdic) &&
        Objects.equals(this.exporta, nfeSefazInfNFe.exporta) &&
        Objects.equals(this.compra, nfeSefazInfNFe.compra) &&
        Objects.equals(this.cana, nfeSefazInfNFe.cana) &&
        Objects.equals(this.infRespTec, nfeSefazInfNFe.infRespTec) &&
        Objects.equals(this.infSolicNFF, nfeSefazInfNFe.infSolicNFF);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(versao, id, ide, emit, avulsa, dest, retirada, entrega, autXML, det, total, transp, cobr, pag, infIntermed, infAdic, exporta, compra, cana, infRespTec, infSolicNFF);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazInfNFe {\n");
    sb.append("    versao: ").append(toIndentedString(versao)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ide: ").append(toIndentedString(ide)).append("\n");
    sb.append("    emit: ").append(toIndentedString(emit)).append("\n");
    sb.append("    avulsa: ").append(toIndentedString(avulsa)).append("\n");
    sb.append("    dest: ").append(toIndentedString(dest)).append("\n");
    sb.append("    retirada: ").append(toIndentedString(retirada)).append("\n");
    sb.append("    entrega: ").append(toIndentedString(entrega)).append("\n");
    sb.append("    autXML: ").append(toIndentedString(autXML)).append("\n");
    sb.append("    det: ").append(toIndentedString(det)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    transp: ").append(toIndentedString(transp)).append("\n");
    sb.append("    cobr: ").append(toIndentedString(cobr)).append("\n");
    sb.append("    pag: ").append(toIndentedString(pag)).append("\n");
    sb.append("    infIntermed: ").append(toIndentedString(infIntermed)).append("\n");
    sb.append("    infAdic: ").append(toIndentedString(infAdic)).append("\n");
    sb.append("    exporta: ").append(toIndentedString(exporta)).append("\n");
    sb.append("    compra: ").append(toIndentedString(compra)).append("\n");
    sb.append("    cana: ").append(toIndentedString(cana)).append("\n");
    sb.append("    infRespTec: ").append(toIndentedString(infRespTec)).append("\n");
    sb.append("    infSolicNFF: ").append(toIndentedString(infSolicNFF)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("versao");
    openapiFields.add("Id");
    openapiFields.add("ide");
    openapiFields.add("emit");
    openapiFields.add("avulsa");
    openapiFields.add("dest");
    openapiFields.add("retirada");
    openapiFields.add("entrega");
    openapiFields.add("autXML");
    openapiFields.add("det");
    openapiFields.add("total");
    openapiFields.add("transp");
    openapiFields.add("cobr");
    openapiFields.add("pag");
    openapiFields.add("infIntermed");
    openapiFields.add("infAdic");
    openapiFields.add("exporta");
    openapiFields.add("compra");
    openapiFields.add("cana");
    openapiFields.add("infRespTec");
    openapiFields.add("infSolicNFF");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("versao");
    openapiRequiredFields.add("ide");
    openapiRequiredFields.add("emit");
    openapiRequiredFields.add("det");
    openapiRequiredFields.add("total");
    openapiRequiredFields.add("transp");
    openapiRequiredFields.add("pag");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazInfNFe
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazInfNFe.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazInfNFe is not found in the empty JSON string", NfeSefazInfNFe.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazInfNFe.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazInfNFe` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazInfNFe.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("versao") != null && !jsonObj.get("versao").isJsonNull()) && !jsonObj.get("versao").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versao` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versao").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      // validate the required field `ide`
      NfeSefazIde.validateJsonElement(jsonObj.get("ide"));
      // validate the required field `emit`
      NfeSefazEmit.validateJsonElement(jsonObj.get("emit"));
      // validate the optional field `avulsa`
      if (jsonObj.get("avulsa") != null && !jsonObj.get("avulsa").isJsonNull()) {
        NfeSefazAvulsa.validateJsonElement(jsonObj.get("avulsa"));
      }
      // validate the optional field `dest`
      if (jsonObj.get("dest") != null && !jsonObj.get("dest").isJsonNull()) {
        NfeSefazDest.validateJsonElement(jsonObj.get("dest"));
      }
      // validate the optional field `retirada`
      if (jsonObj.get("retirada") != null && !jsonObj.get("retirada").isJsonNull()) {
        NfeSefazLocal.validateJsonElement(jsonObj.get("retirada"));
      }
      // validate the optional field `entrega`
      if (jsonObj.get("entrega") != null && !jsonObj.get("entrega").isJsonNull()) {
        NfeSefazLocal.validateJsonElement(jsonObj.get("entrega"));
      }
      if (jsonObj.get("autXML") != null && !jsonObj.get("autXML").isJsonNull()) {
        JsonArray jsonArrayautXML = jsonObj.getAsJsonArray("autXML");
        if (jsonArrayautXML != null) {
          // ensure the json data is an array
          if (!jsonObj.get("autXML").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `autXML` to be an array in the JSON string but got `%s`", jsonObj.get("autXML").toString()));
          }

          // validate the optional field `autXML` (array)
          for (int i = 0; i < jsonArrayautXML.size(); i++) {
            NfeSefazAutXML.validateJsonElement(jsonArrayautXML.get(i));
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("det").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `det` to be an array in the JSON string but got `%s`", jsonObj.get("det").toString()));
      }

      JsonArray jsonArraydet = jsonObj.getAsJsonArray("det");
      // validate the required field `det` (array)
      for (int i = 0; i < jsonArraydet.size(); i++) {
        NfeSefazDet.validateJsonElement(jsonArraydet.get(i));
      };
      // validate the required field `total`
      NfeSefazTotal.validateJsonElement(jsonObj.get("total"));
      // validate the required field `transp`
      NfeSefazTransp.validateJsonElement(jsonObj.get("transp"));
      // validate the optional field `cobr`
      if (jsonObj.get("cobr") != null && !jsonObj.get("cobr").isJsonNull()) {
        NfeSefazCobr.validateJsonElement(jsonObj.get("cobr"));
      }
      // validate the required field `pag`
      NfeSefazPag.validateJsonElement(jsonObj.get("pag"));
      // validate the optional field `infIntermed`
      if (jsonObj.get("infIntermed") != null && !jsonObj.get("infIntermed").isJsonNull()) {
        NfeSefazInfIntermed.validateJsonElement(jsonObj.get("infIntermed"));
      }
      // validate the optional field `infAdic`
      if (jsonObj.get("infAdic") != null && !jsonObj.get("infAdic").isJsonNull()) {
        NfeSefazInfAdic.validateJsonElement(jsonObj.get("infAdic"));
      }
      // validate the optional field `exporta`
      if (jsonObj.get("exporta") != null && !jsonObj.get("exporta").isJsonNull()) {
        NfeSefazExporta.validateJsonElement(jsonObj.get("exporta"));
      }
      // validate the optional field `compra`
      if (jsonObj.get("compra") != null && !jsonObj.get("compra").isJsonNull()) {
        NfeSefazCompra.validateJsonElement(jsonObj.get("compra"));
      }
      // validate the optional field `cana`
      if (jsonObj.get("cana") != null && !jsonObj.get("cana").isJsonNull()) {
        NfeSefazCana.validateJsonElement(jsonObj.get("cana"));
      }
      // validate the optional field `infRespTec`
      if (jsonObj.get("infRespTec") != null && !jsonObj.get("infRespTec").isJsonNull()) {
        NfeSefazInfRespTec.validateJsonElement(jsonObj.get("infRespTec"));
      }
      // validate the optional field `infSolicNFF`
      if (jsonObj.get("infSolicNFF") != null && !jsonObj.get("infSolicNFF").isJsonNull()) {
        NfeSefazInfSolicNFF.validateJsonElement(jsonObj.get("infSolicNFF"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazInfNFe.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazInfNFe' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazInfNFe> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazInfNFe.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazInfNFe>() {
           @Override
           public void write(JsonWriter out, NfeSefazInfNFe value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazInfNFe read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazInfNFe given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazInfNFe
   * @throws IOException if the JSON string is invalid with respect to NfeSefazInfNFe
   */
  public static NfeSefazInfNFe fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazInfNFe.class);
  }

  /**
   * Convert an instance of NfeSefazInfNFe to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

