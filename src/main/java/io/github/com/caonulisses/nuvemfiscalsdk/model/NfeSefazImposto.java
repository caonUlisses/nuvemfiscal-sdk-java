/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazCOFINS;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazCOFINSST;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazICMS;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazICMSUFDest;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazII;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazISSQN;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazIpi;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazPIS;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazPISST;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Tributos incidentes nos produtos ou serviços da NF-e.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazImposto {
  public static final String SERIALIZED_NAME_V_TOT_TRIB = "vTotTrib";
  @SerializedName(SERIALIZED_NAME_V_TOT_TRIB)
  @javax.annotation.Nullable
  private BigDecimal vTotTrib;

  public static final String SERIALIZED_NAME_I_C_M_S = "ICMS";
  @SerializedName(SERIALIZED_NAME_I_C_M_S)
  @javax.annotation.Nullable
  private NfeSefazICMS ICMS;

  public static final String SERIALIZED_NAME_I_P_I = "IPI";
  @SerializedName(SERIALIZED_NAME_I_P_I)
  @javax.annotation.Nullable
  private NfeSefazIpi IPI;

  public static final String SERIALIZED_NAME_I_I = "II";
  @SerializedName(SERIALIZED_NAME_I_I)
  @javax.annotation.Nullable
  private NfeSefazII II;

  public static final String SERIALIZED_NAME_I_S_S_Q_N = "ISSQN";
  @SerializedName(SERIALIZED_NAME_I_S_S_Q_N)
  @javax.annotation.Nullable
  private NfeSefazISSQN ISSQN;

  public static final String SERIALIZED_NAME_P_I_S = "PIS";
  @SerializedName(SERIALIZED_NAME_P_I_S)
  @javax.annotation.Nullable
  private NfeSefazPIS PIS;

  public static final String SERIALIZED_NAME_P_I_S_S_T = "PISST";
  @SerializedName(SERIALIZED_NAME_P_I_S_S_T)
  @javax.annotation.Nullable
  private NfeSefazPISST PISST;

  public static final String SERIALIZED_NAME_C_O_F_I_N_S = "COFINS";
  @SerializedName(SERIALIZED_NAME_C_O_F_I_N_S)
  @javax.annotation.Nullable
  private NfeSefazCOFINS COFINS;

  public static final String SERIALIZED_NAME_C_O_F_I_N_S_S_T = "COFINSST";
  @SerializedName(SERIALIZED_NAME_C_O_F_I_N_S_S_T)
  @javax.annotation.Nullable
  private NfeSefazCOFINSST COFINSST;

  public static final String SERIALIZED_NAME_IC_M_S_U_F_DEST = "ICMSUFDest";
  @SerializedName(SERIALIZED_NAME_IC_M_S_U_F_DEST)
  @javax.annotation.Nullable
  private NfeSefazICMSUFDest icMSUFDest;

  public NfeSefazImposto() {
  }

  public NfeSefazImposto vTotTrib(@javax.annotation.Nullable BigDecimal vTotTrib) {
    this.vTotTrib = vTotTrib;
    return this;
  }

  /**
   * Valor estimado total de impostos federais, estaduais e municipais.
   * minimum: 0
   * @return vTotTrib
   */
  @javax.annotation.Nullable
  public BigDecimal getvTotTrib() {
    return vTotTrib;
  }

  public void setvTotTrib(@javax.annotation.Nullable BigDecimal vTotTrib) {
    this.vTotTrib = vTotTrib;
  }


  public NfeSefazImposto ICMS(@javax.annotation.Nullable NfeSefazICMS ICMS) {
    this.ICMS = ICMS;
    return this;
  }

  /**
   * Get ICMS
   * @return ICMS
   */
  @javax.annotation.Nullable
  public NfeSefazICMS getICMS() {
    return ICMS;
  }

  public void setICMS(@javax.annotation.Nullable NfeSefazICMS ICMS) {
    this.ICMS = ICMS;
  }


  public NfeSefazImposto IPI(@javax.annotation.Nullable NfeSefazIpi IPI) {
    this.IPI = IPI;
    return this;
  }

  /**
   * Get IPI
   * @return IPI
   */
  @javax.annotation.Nullable
  public NfeSefazIpi getIPI() {
    return IPI;
  }

  public void setIPI(@javax.annotation.Nullable NfeSefazIpi IPI) {
    this.IPI = IPI;
  }


  public NfeSefazImposto II(@javax.annotation.Nullable NfeSefazII II) {
    this.II = II;
    return this;
  }

  /**
   * Get II
   * @return II
   */
  @javax.annotation.Nullable
  public NfeSefazII getII() {
    return II;
  }

  public void setII(@javax.annotation.Nullable NfeSefazII II) {
    this.II = II;
  }


  public NfeSefazImposto ISSQN(@javax.annotation.Nullable NfeSefazISSQN ISSQN) {
    this.ISSQN = ISSQN;
    return this;
  }

  /**
   * Get ISSQN
   * @return ISSQN
   */
  @javax.annotation.Nullable
  public NfeSefazISSQN getISSQN() {
    return ISSQN;
  }

  public void setISSQN(@javax.annotation.Nullable NfeSefazISSQN ISSQN) {
    this.ISSQN = ISSQN;
  }


  public NfeSefazImposto PIS(@javax.annotation.Nullable NfeSefazPIS PIS) {
    this.PIS = PIS;
    return this;
  }

  /**
   * Get PIS
   * @return PIS
   */
  @javax.annotation.Nullable
  public NfeSefazPIS getPIS() {
    return PIS;
  }

  public void setPIS(@javax.annotation.Nullable NfeSefazPIS PIS) {
    this.PIS = PIS;
  }


  public NfeSefazImposto PISST(@javax.annotation.Nullable NfeSefazPISST PISST) {
    this.PISST = PISST;
    return this;
  }

  /**
   * Get PISST
   * @return PISST
   */
  @javax.annotation.Nullable
  public NfeSefazPISST getPISST() {
    return PISST;
  }

  public void setPISST(@javax.annotation.Nullable NfeSefazPISST PISST) {
    this.PISST = PISST;
  }


  public NfeSefazImposto COFINS(@javax.annotation.Nullable NfeSefazCOFINS COFINS) {
    this.COFINS = COFINS;
    return this;
  }

  /**
   * Get COFINS
   * @return COFINS
   */
  @javax.annotation.Nullable
  public NfeSefazCOFINS getCOFINS() {
    return COFINS;
  }

  public void setCOFINS(@javax.annotation.Nullable NfeSefazCOFINS COFINS) {
    this.COFINS = COFINS;
  }


  public NfeSefazImposto COFINSST(@javax.annotation.Nullable NfeSefazCOFINSST COFINSST) {
    this.COFINSST = COFINSST;
    return this;
  }

  /**
   * Get COFINSST
   * @return COFINSST
   */
  @javax.annotation.Nullable
  public NfeSefazCOFINSST getCOFINSST() {
    return COFINSST;
  }

  public void setCOFINSST(@javax.annotation.Nullable NfeSefazCOFINSST COFINSST) {
    this.COFINSST = COFINSST;
  }


  public NfeSefazImposto icMSUFDest(@javax.annotation.Nullable NfeSefazICMSUFDest icMSUFDest) {
    this.icMSUFDest = icMSUFDest;
    return this;
  }

  /**
   * Get icMSUFDest
   * @return icMSUFDest
   */
  @javax.annotation.Nullable
  public NfeSefazICMSUFDest getIcMSUFDest() {
    return icMSUFDest;
  }

  public void setIcMSUFDest(@javax.annotation.Nullable NfeSefazICMSUFDest icMSUFDest) {
    this.icMSUFDest = icMSUFDest;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazImposto nfeSefazImposto = (NfeSefazImposto) o;
    return Objects.equals(this.vTotTrib, nfeSefazImposto.vTotTrib) &&
        Objects.equals(this.ICMS, nfeSefazImposto.ICMS) &&
        Objects.equals(this.IPI, nfeSefazImposto.IPI) &&
        Objects.equals(this.II, nfeSefazImposto.II) &&
        Objects.equals(this.ISSQN, nfeSefazImposto.ISSQN) &&
        Objects.equals(this.PIS, nfeSefazImposto.PIS) &&
        Objects.equals(this.PISST, nfeSefazImposto.PISST) &&
        Objects.equals(this.COFINS, nfeSefazImposto.COFINS) &&
        Objects.equals(this.COFINSST, nfeSefazImposto.COFINSST) &&
        Objects.equals(this.icMSUFDest, nfeSefazImposto.icMSUFDest);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(vTotTrib, ICMS, IPI, II, ISSQN, PIS, PISST, COFINS, COFINSST, icMSUFDest);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazImposto {\n");
    sb.append("    vTotTrib: ").append(toIndentedString(vTotTrib)).append("\n");
    sb.append("    ICMS: ").append(toIndentedString(ICMS)).append("\n");
    sb.append("    IPI: ").append(toIndentedString(IPI)).append("\n");
    sb.append("    II: ").append(toIndentedString(II)).append("\n");
    sb.append("    ISSQN: ").append(toIndentedString(ISSQN)).append("\n");
    sb.append("    PIS: ").append(toIndentedString(PIS)).append("\n");
    sb.append("    PISST: ").append(toIndentedString(PISST)).append("\n");
    sb.append("    COFINS: ").append(toIndentedString(COFINS)).append("\n");
    sb.append("    COFINSST: ").append(toIndentedString(COFINSST)).append("\n");
    sb.append("    icMSUFDest: ").append(toIndentedString(icMSUFDest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vTotTrib");
    openapiFields.add("ICMS");
    openapiFields.add("IPI");
    openapiFields.add("II");
    openapiFields.add("ISSQN");
    openapiFields.add("PIS");
    openapiFields.add("PISST");
    openapiFields.add("COFINS");
    openapiFields.add("COFINSST");
    openapiFields.add("ICMSUFDest");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazImposto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazImposto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazImposto is not found in the empty JSON string", NfeSefazImposto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazImposto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazImposto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ICMS`
      if (jsonObj.get("ICMS") != null && !jsonObj.get("ICMS").isJsonNull()) {
        NfeSefazICMS.validateJsonElement(jsonObj.get("ICMS"));
      }
      // validate the optional field `IPI`
      if (jsonObj.get("IPI") != null && !jsonObj.get("IPI").isJsonNull()) {
        NfeSefazIpi.validateJsonElement(jsonObj.get("IPI"));
      }
      // validate the optional field `II`
      if (jsonObj.get("II") != null && !jsonObj.get("II").isJsonNull()) {
        NfeSefazII.validateJsonElement(jsonObj.get("II"));
      }
      // validate the optional field `ISSQN`
      if (jsonObj.get("ISSQN") != null && !jsonObj.get("ISSQN").isJsonNull()) {
        NfeSefazISSQN.validateJsonElement(jsonObj.get("ISSQN"));
      }
      // validate the optional field `PIS`
      if (jsonObj.get("PIS") != null && !jsonObj.get("PIS").isJsonNull()) {
        NfeSefazPIS.validateJsonElement(jsonObj.get("PIS"));
      }
      // validate the optional field `PISST`
      if (jsonObj.get("PISST") != null && !jsonObj.get("PISST").isJsonNull()) {
        NfeSefazPISST.validateJsonElement(jsonObj.get("PISST"));
      }
      // validate the optional field `COFINS`
      if (jsonObj.get("COFINS") != null && !jsonObj.get("COFINS").isJsonNull()) {
        NfeSefazCOFINS.validateJsonElement(jsonObj.get("COFINS"));
      }
      // validate the optional field `COFINSST`
      if (jsonObj.get("COFINSST") != null && !jsonObj.get("COFINSST").isJsonNull()) {
        NfeSefazCOFINSST.validateJsonElement(jsonObj.get("COFINSST"));
      }
      // validate the optional field `ICMSUFDest`
      if (jsonObj.get("ICMSUFDest") != null && !jsonObj.get("ICMSUFDest").isJsonNull()) {
        NfeSefazICMSUFDest.validateJsonElement(jsonObj.get("ICMSUFDest"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazImposto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazImposto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazImposto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazImposto.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazImposto>() {
           @Override
           public void write(JsonWriter out, NfeSefazImposto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazImposto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazImposto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazImposto
   * @throws IOException if the JSON string is invalid with respect to NfeSefazImposto
   */
  public static NfeSefazImposto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazImposto.class);
  }

  /**
   * Convert an instance of NfeSefazImposto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

