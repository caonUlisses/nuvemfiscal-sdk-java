/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MdfeSefazComp;
import org.openapitools.client.model.MdfeSefazInfBanc;
import org.openapitools.client.model.MdfeSefazInfPrazo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Informações do Pagamento do Frete.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class MdfeSefazInfPag {
  public static final String SERIALIZED_NAME_X_NOME = "xNome";
  @SerializedName(SERIALIZED_NAME_X_NOME)
  @javax.annotation.Nullable
  private String xNome;

  public static final String SERIALIZED_NAME_C_P_F = "CPF";
  @SerializedName(SERIALIZED_NAME_C_P_F)
  @javax.annotation.Nullable
  private String CPF;

  public static final String SERIALIZED_NAME_C_N_P_J = "CNPJ";
  @SerializedName(SERIALIZED_NAME_C_N_P_J)
  @javax.annotation.Nullable
  private String CNPJ;

  public static final String SERIALIZED_NAME_ID_ESTRANGEIRO = "idEstrangeiro";
  @SerializedName(SERIALIZED_NAME_ID_ESTRANGEIRO)
  @javax.annotation.Nullable
  private String idEstrangeiro;

  public static final String SERIALIZED_NAME_COMP = "Comp";
  @SerializedName(SERIALIZED_NAME_COMP)
  @javax.annotation.Nonnull
  private List<MdfeSefazComp> comp = new ArrayList<>();

  public static final String SERIALIZED_NAME_V_CONTRATO = "vContrato";
  @SerializedName(SERIALIZED_NAME_V_CONTRATO)
  @javax.annotation.Nullable
  private BigDecimal vContrato;

  public static final String SERIALIZED_NAME_IND_ALTO_DESEMP = "indAltoDesemp";
  @SerializedName(SERIALIZED_NAME_IND_ALTO_DESEMP)
  @javax.annotation.Nullable
  private Integer indAltoDesemp;

  public static final String SERIALIZED_NAME_IND_PAG = "indPag";
  @SerializedName(SERIALIZED_NAME_IND_PAG)
  @javax.annotation.Nullable
  private Integer indPag;

  public static final String SERIALIZED_NAME_V_ADIANT = "vAdiant";
  @SerializedName(SERIALIZED_NAME_V_ADIANT)
  @javax.annotation.Nullable
  private BigDecimal vAdiant;

  public static final String SERIALIZED_NAME_IND_ANTECIPA_ADIANT = "indAntecipaAdiant";
  @SerializedName(SERIALIZED_NAME_IND_ANTECIPA_ADIANT)
  @javax.annotation.Nullable
  private Integer indAntecipaAdiant;

  public static final String SERIALIZED_NAME_INF_PRAZO = "infPrazo";
  @SerializedName(SERIALIZED_NAME_INF_PRAZO)
  @javax.annotation.Nullable
  private List<MdfeSefazInfPrazo> infPrazo = new ArrayList<>();

  public static final String SERIALIZED_NAME_TP_ANTECIP = "tpAntecip";
  @SerializedName(SERIALIZED_NAME_TP_ANTECIP)
  @javax.annotation.Nullable
  private Integer tpAntecip;

  public static final String SERIALIZED_NAME_INF_BANC = "infBanc";
  @SerializedName(SERIALIZED_NAME_INF_BANC)
  @javax.annotation.Nonnull
  private MdfeSefazInfBanc infBanc;

  public MdfeSefazInfPag() {
  }

  public MdfeSefazInfPag xNome(@javax.annotation.Nullable String xNome) {
    this.xNome = xNome;
    return this;
  }

  /**
   * Razão social ou Nome do respnsável pelo pagamento.
   * @return xNome
   */
  @javax.annotation.Nullable
  public String getxNome() {
    return xNome;
  }

  public void setxNome(@javax.annotation.Nullable String xNome) {
    this.xNome = xNome;
  }


  public MdfeSefazInfPag CPF(@javax.annotation.Nullable String CPF) {
    this.CPF = CPF;
    return this;
  }

  /**
   * Número do CPF do responsável pelo pgto.  Informar os zeros não significativos.
   * @return CPF
   */
  @javax.annotation.Nullable
  public String getCPF() {
    return CPF;
  }

  public void setCPF(@javax.annotation.Nullable String CPF) {
    this.CPF = CPF;
  }


  public MdfeSefazInfPag CNPJ(@javax.annotation.Nullable String CNPJ) {
    this.CNPJ = CNPJ;
    return this;
  }

  /**
   * Número do CNPJ do responsável pelo pgto.  Informar os zeros não significativos.
   * @return CNPJ
   */
  @javax.annotation.Nullable
  public String getCNPJ() {
    return CNPJ;
  }

  public void setCNPJ(@javax.annotation.Nullable String CNPJ) {
    this.CNPJ = CNPJ;
  }


  public MdfeSefazInfPag idEstrangeiro(@javax.annotation.Nullable String idEstrangeiro) {
    this.idEstrangeiro = idEstrangeiro;
    return this;
  }

  /**
   * Identificador do responsável pelo pgto em caso de ser estrangeiro.
   * @return idEstrangeiro
   */
  @javax.annotation.Nullable
  public String getIdEstrangeiro() {
    return idEstrangeiro;
  }

  public void setIdEstrangeiro(@javax.annotation.Nullable String idEstrangeiro) {
    this.idEstrangeiro = idEstrangeiro;
  }


  public MdfeSefazInfPag comp(@javax.annotation.Nonnull List<MdfeSefazComp> comp) {
    this.comp = comp;
    return this;
  }

  public MdfeSefazInfPag addCompItem(MdfeSefazComp compItem) {
    if (this.comp == null) {
      this.comp = new ArrayList<>();
    }
    this.comp.add(compItem);
    return this;
  }

  /**
   * Get comp
   * @return comp
   */
  @javax.annotation.Nonnull
  public List<MdfeSefazComp> getComp() {
    return comp;
  }

  public void setComp(@javax.annotation.Nonnull List<MdfeSefazComp> comp) {
    this.comp = comp;
  }


  public MdfeSefazInfPag vContrato(@javax.annotation.Nullable BigDecimal vContrato) {
    this.vContrato = vContrato;
    return this;
  }

  /**
   * Valor Total do Contrato.
   * minimum: 0
   * @return vContrato
   */
  @javax.annotation.Nullable
  public BigDecimal getvContrato() {
    return vContrato;
  }

  public void setvContrato(@javax.annotation.Nullable BigDecimal vContrato) {
    this.vContrato = vContrato;
  }


  public MdfeSefazInfPag indAltoDesemp(@javax.annotation.Nullable Integer indAltoDesemp) {
    this.indAltoDesemp = indAltoDesemp;
    return this;
  }

  /**
   * Indicador de operação de transporte de alto desempenho.  Operação de transporte com utilização de veículos de frotas dedicadas ou fidelizadas.  Preencher com “1” para indicar operação de transporte de alto desempenho, demais casos não informar a tag.
   * @return indAltoDesemp
   */
  @javax.annotation.Nullable
  public Integer getIndAltoDesemp() {
    return indAltoDesemp;
  }

  public void setIndAltoDesemp(@javax.annotation.Nullable Integer indAltoDesemp) {
    this.indAltoDesemp = indAltoDesemp;
  }


  public MdfeSefazInfPag indPag(@javax.annotation.Nullable Integer indPag) {
    this.indPag = indPag;
    return this;
  }

  /**
   * Indicador da Forma de Pagamento:0-Pagamento à Vista  * 1 - Pagamento à Prazo
   * @return indPag
   */
  @javax.annotation.Nullable
  public Integer getIndPag() {
    return indPag;
  }

  public void setIndPag(@javax.annotation.Nullable Integer indPag) {
    this.indPag = indPag;
  }


  public MdfeSefazInfPag vAdiant(@javax.annotation.Nullable BigDecimal vAdiant) {
    this.vAdiant = vAdiant;
    return this;
  }

  /**
   * Valor do Adiantamento (usar apenas em pagamento à Prazo.
   * minimum: 0
   * @return vAdiant
   */
  @javax.annotation.Nullable
  public BigDecimal getvAdiant() {
    return vAdiant;
  }

  public void setvAdiant(@javax.annotation.Nullable BigDecimal vAdiant) {
    this.vAdiant = vAdiant;
  }


  public MdfeSefazInfPag indAntecipaAdiant(@javax.annotation.Nullable Integer indAntecipaAdiant) {
    this.indAntecipaAdiant = indAntecipaAdiant;
    return this;
  }

  /**
   * Indicador para declarar concordância em antecipar o adiantamento.  Informar a tag somente se for autorizado antecipar o adiantamento.
   * @return indAntecipaAdiant
   */
  @javax.annotation.Nullable
  public Integer getIndAntecipaAdiant() {
    return indAntecipaAdiant;
  }

  public void setIndAntecipaAdiant(@javax.annotation.Nullable Integer indAntecipaAdiant) {
    this.indAntecipaAdiant = indAntecipaAdiant;
  }


  public MdfeSefazInfPag infPrazo(@javax.annotation.Nullable List<MdfeSefazInfPrazo> infPrazo) {
    this.infPrazo = infPrazo;
    return this;
  }

  public MdfeSefazInfPag addInfPrazoItem(MdfeSefazInfPrazo infPrazoItem) {
    if (this.infPrazo == null) {
      this.infPrazo = new ArrayList<>();
    }
    this.infPrazo.add(infPrazoItem);
    return this;
  }

  /**
   * Get infPrazo
   * @return infPrazo
   */
  @javax.annotation.Nullable
  public List<MdfeSefazInfPrazo> getInfPrazo() {
    return infPrazo;
  }

  public void setInfPrazo(@javax.annotation.Nullable List<MdfeSefazInfPrazo> infPrazo) {
    this.infPrazo = infPrazo;
  }


  public MdfeSefazInfPag tpAntecip(@javax.annotation.Nullable Integer tpAntecip) {
    this.tpAntecip = tpAntecip;
    return this;
  }

  /**
   * Tipo de Permissão em relação a antecipação das parcelas.  * 0 - Não permite antecipar  * 1 - Permite antecipar as parcelas  * 2 - Permite antecipar as parcelas mediante confirmação
   * @return tpAntecip
   */
  @javax.annotation.Nullable
  public Integer getTpAntecip() {
    return tpAntecip;
  }

  public void setTpAntecip(@javax.annotation.Nullable Integer tpAntecip) {
    this.tpAntecip = tpAntecip;
  }


  public MdfeSefazInfPag infBanc(@javax.annotation.Nonnull MdfeSefazInfBanc infBanc) {
    this.infBanc = infBanc;
    return this;
  }

  /**
   * Get infBanc
   * @return infBanc
   */
  @javax.annotation.Nonnull
  public MdfeSefazInfBanc getInfBanc() {
    return infBanc;
  }

  public void setInfBanc(@javax.annotation.Nonnull MdfeSefazInfBanc infBanc) {
    this.infBanc = infBanc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdfeSefazInfPag mdfeSefazInfPag = (MdfeSefazInfPag) o;
    return Objects.equals(this.xNome, mdfeSefazInfPag.xNome) &&
        Objects.equals(this.CPF, mdfeSefazInfPag.CPF) &&
        Objects.equals(this.CNPJ, mdfeSefazInfPag.CNPJ) &&
        Objects.equals(this.idEstrangeiro, mdfeSefazInfPag.idEstrangeiro) &&
        Objects.equals(this.comp, mdfeSefazInfPag.comp) &&
        Objects.equals(this.vContrato, mdfeSefazInfPag.vContrato) &&
        Objects.equals(this.indAltoDesemp, mdfeSefazInfPag.indAltoDesemp) &&
        Objects.equals(this.indPag, mdfeSefazInfPag.indPag) &&
        Objects.equals(this.vAdiant, mdfeSefazInfPag.vAdiant) &&
        Objects.equals(this.indAntecipaAdiant, mdfeSefazInfPag.indAntecipaAdiant) &&
        Objects.equals(this.infPrazo, mdfeSefazInfPag.infPrazo) &&
        Objects.equals(this.tpAntecip, mdfeSefazInfPag.tpAntecip) &&
        Objects.equals(this.infBanc, mdfeSefazInfPag.infBanc);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(xNome, CPF, CNPJ, idEstrangeiro, comp, vContrato, indAltoDesemp, indPag, vAdiant, indAntecipaAdiant, infPrazo, tpAntecip, infBanc);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdfeSefazInfPag {\n");
    sb.append("    xNome: ").append(toIndentedString(xNome)).append("\n");
    sb.append("    CPF: ").append(toIndentedString(CPF)).append("\n");
    sb.append("    CNPJ: ").append(toIndentedString(CNPJ)).append("\n");
    sb.append("    idEstrangeiro: ").append(toIndentedString(idEstrangeiro)).append("\n");
    sb.append("    comp: ").append(toIndentedString(comp)).append("\n");
    sb.append("    vContrato: ").append(toIndentedString(vContrato)).append("\n");
    sb.append("    indAltoDesemp: ").append(toIndentedString(indAltoDesemp)).append("\n");
    sb.append("    indPag: ").append(toIndentedString(indPag)).append("\n");
    sb.append("    vAdiant: ").append(toIndentedString(vAdiant)).append("\n");
    sb.append("    indAntecipaAdiant: ").append(toIndentedString(indAntecipaAdiant)).append("\n");
    sb.append("    infPrazo: ").append(toIndentedString(infPrazo)).append("\n");
    sb.append("    tpAntecip: ").append(toIndentedString(tpAntecip)).append("\n");
    sb.append("    infBanc: ").append(toIndentedString(infBanc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("xNome");
    openapiFields.add("CPF");
    openapiFields.add("CNPJ");
    openapiFields.add("idEstrangeiro");
    openapiFields.add("Comp");
    openapiFields.add("vContrato");
    openapiFields.add("indAltoDesemp");
    openapiFields.add("indPag");
    openapiFields.add("vAdiant");
    openapiFields.add("indAntecipaAdiant");
    openapiFields.add("infPrazo");
    openapiFields.add("tpAntecip");
    openapiFields.add("infBanc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Comp");
    openapiRequiredFields.add("vContrato");
    openapiRequiredFields.add("indPag");
    openapiRequiredFields.add("infBanc");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MdfeSefazInfPag
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MdfeSefazInfPag.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MdfeSefazInfPag is not found in the empty JSON string", MdfeSefazInfPag.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MdfeSefazInfPag.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MdfeSefazInfPag` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MdfeSefazInfPag.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("xNome") != null && !jsonObj.get("xNome").isJsonNull()) && !jsonObj.get("xNome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xNome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xNome").toString()));
      }
      if ((jsonObj.get("CPF") != null && !jsonObj.get("CPF").isJsonNull()) && !jsonObj.get("CPF").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CPF` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CPF").toString()));
      }
      if ((jsonObj.get("CNPJ") != null && !jsonObj.get("CNPJ").isJsonNull()) && !jsonObj.get("CNPJ").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CNPJ` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CNPJ").toString()));
      }
      if ((jsonObj.get("idEstrangeiro") != null && !jsonObj.get("idEstrangeiro").isJsonNull()) && !jsonObj.get("idEstrangeiro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idEstrangeiro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idEstrangeiro").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("Comp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Comp` to be an array in the JSON string but got `%s`", jsonObj.get("Comp").toString()));
      }

      JsonArray jsonArraycomp = jsonObj.getAsJsonArray("Comp");
      // validate the required field `Comp` (array)
      for (int i = 0; i < jsonArraycomp.size(); i++) {
        MdfeSefazComp.validateJsonElement(jsonArraycomp.get(i));
      };
      if (jsonObj.get("infPrazo") != null && !jsonObj.get("infPrazo").isJsonNull()) {
        JsonArray jsonArrayinfPrazo = jsonObj.getAsJsonArray("infPrazo");
        if (jsonArrayinfPrazo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("infPrazo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `infPrazo` to be an array in the JSON string but got `%s`", jsonObj.get("infPrazo").toString()));
          }

          // validate the optional field `infPrazo` (array)
          for (int i = 0; i < jsonArrayinfPrazo.size(); i++) {
            MdfeSefazInfPrazo.validateJsonElement(jsonArrayinfPrazo.get(i));
          };
        }
      }
      // validate the required field `infBanc`
      MdfeSefazInfBanc.validateJsonElement(jsonObj.get("infBanc"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MdfeSefazInfPag.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MdfeSefazInfPag' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MdfeSefazInfPag> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MdfeSefazInfPag.class));

       return (TypeAdapter<T>) new TypeAdapter<MdfeSefazInfPag>() {
           @Override
           public void write(JsonWriter out, MdfeSefazInfPag value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MdfeSefazInfPag read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MdfeSefazInfPag given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MdfeSefazInfPag
   * @throws IOException if the JSON string is invalid with respect to MdfeSefazInfPag
   */
  public static MdfeSefazInfPag fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MdfeSefazInfPag.class);
  }

  /**
   * Convert an instance of MdfeSefazInfPag to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

