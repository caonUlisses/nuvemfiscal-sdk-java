/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.DfeContribuinteEndereco;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações cadastrais do contribuinte consultado.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class DfeContribuinteInfCad {
  public static final String SERIALIZED_NAME_IE = "ie";
  @SerializedName(SERIALIZED_NAME_IE)
  @javax.annotation.Nullable
  private String ie;

  public static final String SERIALIZED_NAME_CNPJ = "cnpj";
  @SerializedName(SERIALIZED_NAME_CNPJ)
  @javax.annotation.Nullable
  private String cnpj;

  public static final String SERIALIZED_NAME_CPF = "cpf";
  @SerializedName(SERIALIZED_NAME_CPF)
  @javax.annotation.Nullable
  private String cpf;

  public static final String SERIALIZED_NAME_UF = "uf";
  @SerializedName(SERIALIZED_NAME_UF)
  @javax.annotation.Nullable
  private String uf;

  public static final String SERIALIZED_NAME_SITUACAO_CADASTRAL = "situacao_cadastral";
  @SerializedName(SERIALIZED_NAME_SITUACAO_CADASTRAL)
  @javax.annotation.Nullable
  private Integer situacaoCadastral;

  public static final String SERIALIZED_NAME_INDICADOR_NFE = "indicador_nfe";
  @SerializedName(SERIALIZED_NAME_INDICADOR_NFE)
  @javax.annotation.Nullable
  private Integer indicadorNfe;

  public static final String SERIALIZED_NAME_INDICADOR_CTE = "indicador_cte";
  @SerializedName(SERIALIZED_NAME_INDICADOR_CTE)
  @javax.annotation.Nullable
  private Integer indicadorCte;

  public static final String SERIALIZED_NAME_NOME_RAZAO_SOCIAL = "nome_razao_social";
  @SerializedName(SERIALIZED_NAME_NOME_RAZAO_SOCIAL)
  @javax.annotation.Nullable
  private String nomeRazaoSocial;

  public static final String SERIALIZED_NAME_NOME_FANTASIA = "nome_fantasia";
  @SerializedName(SERIALIZED_NAME_NOME_FANTASIA)
  @javax.annotation.Nullable
  private String nomeFantasia;

  public static final String SERIALIZED_NAME_REGIME_APURACAO_ICMS = "regime_apuracao_icms";
  @SerializedName(SERIALIZED_NAME_REGIME_APURACAO_ICMS)
  @javax.annotation.Nullable
  private String regimeApuracaoIcms;

  public static final String SERIALIZED_NAME_CNAE = "cnae";
  @SerializedName(SERIALIZED_NAME_CNAE)
  @javax.annotation.Nullable
  private String cnae;

  public static final String SERIALIZED_NAME_DATA_INICIO_ATIVIDADE = "data_inicio_atividade";
  @SerializedName(SERIALIZED_NAME_DATA_INICIO_ATIVIDADE)
  @javax.annotation.Nullable
  private LocalDate dataInicioAtividade;

  public static final String SERIALIZED_NAME_DATA_SITUACAO_CADASTRAL = "data_situacao_cadastral";
  @SerializedName(SERIALIZED_NAME_DATA_SITUACAO_CADASTRAL)
  @javax.annotation.Nullable
  private LocalDate dataSituacaoCadastral;

  public static final String SERIALIZED_NAME_DATA_FIM_ATIVIDADE = "data_fim_atividade";
  @SerializedName(SERIALIZED_NAME_DATA_FIM_ATIVIDADE)
  @javax.annotation.Nullable
  private LocalDate dataFimAtividade;

  public static final String SERIALIZED_NAME_IE_UNICA = "ie_unica";
  @SerializedName(SERIALIZED_NAME_IE_UNICA)
  @javax.annotation.Nullable
  private String ieUnica;

  public static final String SERIALIZED_NAME_IE_ATUAL = "ie_atual";
  @SerializedName(SERIALIZED_NAME_IE_ATUAL)
  @javax.annotation.Nullable
  private String ieAtual;

  public static final String SERIALIZED_NAME_ENDERECO = "endereco";
  @SerializedName(SERIALIZED_NAME_ENDERECO)
  @javax.annotation.Nullable
  private DfeContribuinteEndereco endereco;

  public DfeContribuinteInfCad() {
  }

  public DfeContribuinteInfCad ie(@javax.annotation.Nullable String ie) {
    this.ie = ie;
    return this;
  }

  /**
   * Número da Inscrição Estadual do contribuinte.
   * @return ie
   */
  @javax.annotation.Nullable
  public String getIe() {
    return ie;
  }

  public void setIe(@javax.annotation.Nullable String ie) {
    this.ie = ie;
  }


  public DfeContribuinteInfCad cnpj(@javax.annotation.Nullable String cnpj) {
    this.cnpj = cnpj;
    return this;
  }

  /**
   * Número do CNPJ  do contribuinte.
   * @return cnpj
   */
  @javax.annotation.Nullable
  public String getCnpj() {
    return cnpj;
  }

  public void setCnpj(@javax.annotation.Nullable String cnpj) {
    this.cnpj = cnpj;
  }


  public DfeContribuinteInfCad cpf(@javax.annotation.Nullable String cpf) {
    this.cpf = cpf;
    return this;
  }

  /**
   * Número do CPF do contribuinte.
   * @return cpf
   */
  @javax.annotation.Nullable
  public String getCpf() {
    return cpf;
  }

  public void setCpf(@javax.annotation.Nullable String cpf) {
    this.cpf = cpf;
  }


  public DfeContribuinteInfCad uf(@javax.annotation.Nullable String uf) {
    this.uf = uf;
    return this;
  }

  /**
   * Sigla da UF de localização do contribuinte. Em algumas situações, a UF de localização pode ser diferente da UF consultada. Ex. IE de Substituto Tributário.
   * @return uf
   */
  @javax.annotation.Nullable
  public String getUf() {
    return uf;
  }

  public void setUf(@javax.annotation.Nullable String uf) {
    this.uf = uf;
  }


  public DfeContribuinteInfCad situacaoCadastral(@javax.annotation.Nullable Integer situacaoCadastral) {
    this.situacaoCadastral = situacaoCadastral;
    return this;
  }

  /**
   * Situação cadastral do contribuinte:  * 0 - não habilitado  * 1 - habilitado
   * @return situacaoCadastral
   */
  @javax.annotation.Nullable
  public Integer getSituacaoCadastral() {
    return situacaoCadastral;
  }

  public void setSituacaoCadastral(@javax.annotation.Nullable Integer situacaoCadastral) {
    this.situacaoCadastral = situacaoCadastral;
  }


  public DfeContribuinteInfCad indicadorNfe(@javax.annotation.Nullable Integer indicadorNfe) {
    this.indicadorNfe = indicadorNfe;
    return this;
  }

  /**
   * Indicador de contribuinte credenciado a emitir NF-e.  * 0 - Não credenciado para emissão da NF-e  * 1 - Credenciado  * 2 - Credenciado com obrigatoriedade para todas operações  * 3 - Credenciado com obrigatoriedade parcial  * 4 - a SEFAZ não fornece a informação  Este indicador significa apenas que o contribuinte é credenciado para emitir NF-e na SEFAZ consultada.
   * @return indicadorNfe
   */
  @javax.annotation.Nullable
  public Integer getIndicadorNfe() {
    return indicadorNfe;
  }

  public void setIndicadorNfe(@javax.annotation.Nullable Integer indicadorNfe) {
    this.indicadorNfe = indicadorNfe;
  }


  public DfeContribuinteInfCad indicadorCte(@javax.annotation.Nullable Integer indicadorCte) {
    this.indicadorCte = indicadorCte;
    return this;
  }

  /**
   * Indicador de contribuinte credenciado a emitir CT-e.  * 0 - Não credenciado para emissão da CT-e  * 1 - Credenciado  * 2 - Credenciado com obrigatoriedade para todas operações  * 3 - Credenciado com obrigatoriedade parcial  * 4 - a SEFAZ não fornece a informação  Este indicador significa apenas que o contribuinte é credenciado para emitir CT-e na SEFAZ consultada.
   * @return indicadorCte
   */
  @javax.annotation.Nullable
  public Integer getIndicadorCte() {
    return indicadorCte;
  }

  public void setIndicadorCte(@javax.annotation.Nullable Integer indicadorCte) {
    this.indicadorCte = indicadorCte;
  }


  public DfeContribuinteInfCad nomeRazaoSocial(@javax.annotation.Nullable String nomeRazaoSocial) {
    this.nomeRazaoSocial = nomeRazaoSocial;
    return this;
  }

  /**
   * Razão Social ou nome do contribuinte.
   * @return nomeRazaoSocial
   */
  @javax.annotation.Nullable
  public String getNomeRazaoSocial() {
    return nomeRazaoSocial;
  }

  public void setNomeRazaoSocial(@javax.annotation.Nullable String nomeRazaoSocial) {
    this.nomeRazaoSocial = nomeRazaoSocial;
  }


  public DfeContribuinteInfCad nomeFantasia(@javax.annotation.Nullable String nomeFantasia) {
    this.nomeFantasia = nomeFantasia;
    return this;
  }

  /**
   * Razão Social ou nome do contribuinte.
   * @return nomeFantasia
   */
  @javax.annotation.Nullable
  public String getNomeFantasia() {
    return nomeFantasia;
  }

  public void setNomeFantasia(@javax.annotation.Nullable String nomeFantasia) {
    this.nomeFantasia = nomeFantasia;
  }


  public DfeContribuinteInfCad regimeApuracaoIcms(@javax.annotation.Nullable String regimeApuracaoIcms) {
    this.regimeApuracaoIcms = regimeApuracaoIcms;
    return this;
  }

  /**
   * Regime de Apuração do ICMS.
   * @return regimeApuracaoIcms
   */
  @javax.annotation.Nullable
  public String getRegimeApuracaoIcms() {
    return regimeApuracaoIcms;
  }

  public void setRegimeApuracaoIcms(@javax.annotation.Nullable String regimeApuracaoIcms) {
    this.regimeApuracaoIcms = regimeApuracaoIcms;
  }


  public DfeContribuinteInfCad cnae(@javax.annotation.Nullable String cnae) {
    this.cnae = cnae;
    return this;
  }

  /**
   * CNAE Fiscal do contribuinte.
   * @return cnae
   */
  @javax.annotation.Nullable
  public String getCnae() {
    return cnae;
  }

  public void setCnae(@javax.annotation.Nullable String cnae) {
    this.cnae = cnae;
  }


  public DfeContribuinteInfCad dataInicioAtividade(@javax.annotation.Nullable LocalDate dataInicioAtividade) {
    this.dataInicioAtividade = dataInicioAtividade;
    return this;
  }

  /**
   * Data de início de atividades do contribuinte.
   * @return dataInicioAtividade
   */
  @javax.annotation.Nullable
  public LocalDate getDataInicioAtividade() {
    return dataInicioAtividade;
  }

  public void setDataInicioAtividade(@javax.annotation.Nullable LocalDate dataInicioAtividade) {
    this.dataInicioAtividade = dataInicioAtividade;
  }


  public DfeContribuinteInfCad dataSituacaoCadastral(@javax.annotation.Nullable LocalDate dataSituacaoCadastral) {
    this.dataSituacaoCadastral = dataSituacaoCadastral;
    return this;
  }

  /**
   * Data da última modificação da situação cadastral do contribuinte.
   * @return dataSituacaoCadastral
   */
  @javax.annotation.Nullable
  public LocalDate getDataSituacaoCadastral() {
    return dataSituacaoCadastral;
  }

  public void setDataSituacaoCadastral(@javax.annotation.Nullable LocalDate dataSituacaoCadastral) {
    this.dataSituacaoCadastral = dataSituacaoCadastral;
  }


  public DfeContribuinteInfCad dataFimAtividade(@javax.annotation.Nullable LocalDate dataFimAtividade) {
    this.dataFimAtividade = dataFimAtividade;
    return this;
  }

  /**
   * Data de ocorrência da baixa do contribuinte.
   * @return dataFimAtividade
   */
  @javax.annotation.Nullable
  public LocalDate getDataFimAtividade() {
    return dataFimAtividade;
  }

  public void setDataFimAtividade(@javax.annotation.Nullable LocalDate dataFimAtividade) {
    this.dataFimAtividade = dataFimAtividade;
  }


  public DfeContribuinteInfCad ieUnica(@javax.annotation.Nullable String ieUnica) {
    this.ieUnica = ieUnica;
    return this;
  }

  /**
   * Inscrição Estadual Única.
   * @return ieUnica
   */
  @javax.annotation.Nullable
  public String getIeUnica() {
    return ieUnica;
  }

  public void setIeUnica(@javax.annotation.Nullable String ieUnica) {
    this.ieUnica = ieUnica;
  }


  public DfeContribuinteInfCad ieAtual(@javax.annotation.Nullable String ieAtual) {
    this.ieAtual = ieAtual;
    return this;
  }

  /**
   * Inscrição Estadual atual.
   * @return ieAtual
   */
  @javax.annotation.Nullable
  public String getIeAtual() {
    return ieAtual;
  }

  public void setIeAtual(@javax.annotation.Nullable String ieAtual) {
    this.ieAtual = ieAtual;
  }


  public DfeContribuinteInfCad endereco(@javax.annotation.Nullable DfeContribuinteEndereco endereco) {
    this.endereco = endereco;
    return this;
  }

  /**
   * Get endereco
   * @return endereco
   */
  @javax.annotation.Nullable
  public DfeContribuinteEndereco getEndereco() {
    return endereco;
  }

  public void setEndereco(@javax.annotation.Nullable DfeContribuinteEndereco endereco) {
    this.endereco = endereco;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfeContribuinteInfCad dfeContribuinteInfCad = (DfeContribuinteInfCad) o;
    return Objects.equals(this.ie, dfeContribuinteInfCad.ie) &&
        Objects.equals(this.cnpj, dfeContribuinteInfCad.cnpj) &&
        Objects.equals(this.cpf, dfeContribuinteInfCad.cpf) &&
        Objects.equals(this.uf, dfeContribuinteInfCad.uf) &&
        Objects.equals(this.situacaoCadastral, dfeContribuinteInfCad.situacaoCadastral) &&
        Objects.equals(this.indicadorNfe, dfeContribuinteInfCad.indicadorNfe) &&
        Objects.equals(this.indicadorCte, dfeContribuinteInfCad.indicadorCte) &&
        Objects.equals(this.nomeRazaoSocial, dfeContribuinteInfCad.nomeRazaoSocial) &&
        Objects.equals(this.nomeFantasia, dfeContribuinteInfCad.nomeFantasia) &&
        Objects.equals(this.regimeApuracaoIcms, dfeContribuinteInfCad.regimeApuracaoIcms) &&
        Objects.equals(this.cnae, dfeContribuinteInfCad.cnae) &&
        Objects.equals(this.dataInicioAtividade, dfeContribuinteInfCad.dataInicioAtividade) &&
        Objects.equals(this.dataSituacaoCadastral, dfeContribuinteInfCad.dataSituacaoCadastral) &&
        Objects.equals(this.dataFimAtividade, dfeContribuinteInfCad.dataFimAtividade) &&
        Objects.equals(this.ieUnica, dfeContribuinteInfCad.ieUnica) &&
        Objects.equals(this.ieAtual, dfeContribuinteInfCad.ieAtual) &&
        Objects.equals(this.endereco, dfeContribuinteInfCad.endereco);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(ie, cnpj, cpf, uf, situacaoCadastral, indicadorNfe, indicadorCte, nomeRazaoSocial, nomeFantasia, regimeApuracaoIcms, cnae, dataInicioAtividade, dataSituacaoCadastral, dataFimAtividade, ieUnica, ieAtual, endereco);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfeContribuinteInfCad {\n");
    sb.append("    ie: ").append(toIndentedString(ie)).append("\n");
    sb.append("    cnpj: ").append(toIndentedString(cnpj)).append("\n");
    sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
    sb.append("    uf: ").append(toIndentedString(uf)).append("\n");
    sb.append("    situacaoCadastral: ").append(toIndentedString(situacaoCadastral)).append("\n");
    sb.append("    indicadorNfe: ").append(toIndentedString(indicadorNfe)).append("\n");
    sb.append("    indicadorCte: ").append(toIndentedString(indicadorCte)).append("\n");
    sb.append("    nomeRazaoSocial: ").append(toIndentedString(nomeRazaoSocial)).append("\n");
    sb.append("    nomeFantasia: ").append(toIndentedString(nomeFantasia)).append("\n");
    sb.append("    regimeApuracaoIcms: ").append(toIndentedString(regimeApuracaoIcms)).append("\n");
    sb.append("    cnae: ").append(toIndentedString(cnae)).append("\n");
    sb.append("    dataInicioAtividade: ").append(toIndentedString(dataInicioAtividade)).append("\n");
    sb.append("    dataSituacaoCadastral: ").append(toIndentedString(dataSituacaoCadastral)).append("\n");
    sb.append("    dataFimAtividade: ").append(toIndentedString(dataFimAtividade)).append("\n");
    sb.append("    ieUnica: ").append(toIndentedString(ieUnica)).append("\n");
    sb.append("    ieAtual: ").append(toIndentedString(ieAtual)).append("\n");
    sb.append("    endereco: ").append(toIndentedString(endereco)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ie");
    openapiFields.add("cnpj");
    openapiFields.add("cpf");
    openapiFields.add("uf");
    openapiFields.add("situacao_cadastral");
    openapiFields.add("indicador_nfe");
    openapiFields.add("indicador_cte");
    openapiFields.add("nome_razao_social");
    openapiFields.add("nome_fantasia");
    openapiFields.add("regime_apuracao_icms");
    openapiFields.add("cnae");
    openapiFields.add("data_inicio_atividade");
    openapiFields.add("data_situacao_cadastral");
    openapiFields.add("data_fim_atividade");
    openapiFields.add("ie_unica");
    openapiFields.add("ie_atual");
    openapiFields.add("endereco");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ie");
    openapiRequiredFields.add("uf");
    openapiRequiredFields.add("situacao_cadastral");
    openapiRequiredFields.add("indicador_nfe");
    openapiRequiredFields.add("indicador_cte");
    openapiRequiredFields.add("nome_razao_social");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DfeContribuinteInfCad
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DfeContribuinteInfCad.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DfeContribuinteInfCad is not found in the empty JSON string", DfeContribuinteInfCad.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DfeContribuinteInfCad.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DfeContribuinteInfCad` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DfeContribuinteInfCad.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ie") != null && !jsonObj.get("ie").isJsonNull()) && !jsonObj.get("ie").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ie` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ie").toString()));
      }
      if ((jsonObj.get("cnpj") != null && !jsonObj.get("cnpj").isJsonNull()) && !jsonObj.get("cnpj").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cnpj` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cnpj").toString()));
      }
      if ((jsonObj.get("cpf") != null && !jsonObj.get("cpf").isJsonNull()) && !jsonObj.get("cpf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cpf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpf").toString()));
      }
      if ((jsonObj.get("uf") != null && !jsonObj.get("uf").isJsonNull()) && !jsonObj.get("uf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uf").toString()));
      }
      if ((jsonObj.get("nome_razao_social") != null && !jsonObj.get("nome_razao_social").isJsonNull()) && !jsonObj.get("nome_razao_social").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nome_razao_social` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nome_razao_social").toString()));
      }
      if ((jsonObj.get("nome_fantasia") != null && !jsonObj.get("nome_fantasia").isJsonNull()) && !jsonObj.get("nome_fantasia").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nome_fantasia` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nome_fantasia").toString()));
      }
      if ((jsonObj.get("regime_apuracao_icms") != null && !jsonObj.get("regime_apuracao_icms").isJsonNull()) && !jsonObj.get("regime_apuracao_icms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regime_apuracao_icms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regime_apuracao_icms").toString()));
      }
      if ((jsonObj.get("cnae") != null && !jsonObj.get("cnae").isJsonNull()) && !jsonObj.get("cnae").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cnae` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cnae").toString()));
      }
      if ((jsonObj.get("ie_unica") != null && !jsonObj.get("ie_unica").isJsonNull()) && !jsonObj.get("ie_unica").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ie_unica` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ie_unica").toString()));
      }
      if ((jsonObj.get("ie_atual") != null && !jsonObj.get("ie_atual").isJsonNull()) && !jsonObj.get("ie_atual").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ie_atual` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ie_atual").toString()));
      }
      // validate the optional field `endereco`
      if (jsonObj.get("endereco") != null && !jsonObj.get("endereco").isJsonNull()) {
        DfeContribuinteEndereco.validateJsonElement(jsonObj.get("endereco"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DfeContribuinteInfCad.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DfeContribuinteInfCad' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DfeContribuinteInfCad> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DfeContribuinteInfCad.class));

       return (TypeAdapter<T>) new TypeAdapter<DfeContribuinteInfCad>() {
           @Override
           public void write(JsonWriter out, DfeContribuinteInfCad value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DfeContribuinteInfCad read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DfeContribuinteInfCad given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DfeContribuinteInfCad
   * @throws IOException if the JSON string is invalid with respect to DfeContribuinteInfCad
   */
  public static DfeContribuinteInfCad fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DfeContribuinteInfCad.class);
  }

  /**
   * Convert an instance of DfeContribuinteInfCad to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

