/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações dos dispositivos do Vale Pedágio.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class MdfeSefazDisp {
  public static final String SERIALIZED_NAME_CN_P_J_FORN = "CNPJForn";
  @SerializedName(SERIALIZED_NAME_CN_P_J_FORN)
  @javax.annotation.Nullable
  private String cnPJForn;

  public static final String SERIALIZED_NAME_CN_P_J_PG = "CNPJPg";
  @SerializedName(SERIALIZED_NAME_CN_P_J_PG)
  @javax.annotation.Nullable
  private String cnPJPg;

  public static final String SERIALIZED_NAME_CP_F_PG = "CPFPg";
  @SerializedName(SERIALIZED_NAME_CP_F_PG)
  @javax.annotation.Nullable
  private String cpFPg;

  public static final String SERIALIZED_NAME_N_COMPRA = "nCompra";
  @SerializedName(SERIALIZED_NAME_N_COMPRA)
  @javax.annotation.Nullable
  private String nCompra;

  public static final String SERIALIZED_NAME_V_VALE_PED = "vValePed";
  @SerializedName(SERIALIZED_NAME_V_VALE_PED)
  @javax.annotation.Nullable
  private BigDecimal vValePed;

  public static final String SERIALIZED_NAME_TP_VALE_PED = "tpValePed";
  @SerializedName(SERIALIZED_NAME_TP_VALE_PED)
  @javax.annotation.Nullable
  private String tpValePed;

  public MdfeSefazDisp() {
  }

  public MdfeSefazDisp cnPJForn(@javax.annotation.Nullable String cnPJForn) {
    this.cnPJForn = cnPJForn;
    return this;
  }

  /**
   * CNPJ da empresa fornecedora do Vale-Pedágio.  * CNPJ da Empresa Fornecedora do Vale-Pedágio, ou seja, empresa que fornece ao Responsável pelo Pagamento do Vale-Pedágio os dispositivos do Vale-Pedágio.  * Informar os zeros não significativos.
   * @return cnPJForn
   */
  @javax.annotation.Nullable
  public String getCnPJForn() {
    return cnPJForn;
  }

  public void setCnPJForn(@javax.annotation.Nullable String cnPJForn) {
    this.cnPJForn = cnPJForn;
  }


  public MdfeSefazDisp cnPJPg(@javax.annotation.Nullable String cnPJPg) {
    this.cnPJPg = cnPJPg;
    return this;
  }

  /**
   * CNPJ do responsável pelo pagamento do Vale-Pedágio.  * responsável pelo pagamento do Vale Pedágio. Informar somente quando o responsável não for o emitente do MDF-e.  * Informar os zeros não significativos.
   * @return cnPJPg
   */
  @javax.annotation.Nullable
  public String getCnPJPg() {
    return cnPJPg;
  }

  public void setCnPJPg(@javax.annotation.Nullable String cnPJPg) {
    this.cnPJPg = cnPJPg;
  }


  public MdfeSefazDisp cpFPg(@javax.annotation.Nullable String cpFPg) {
    this.cpFPg = cpFPg;
    return this;
  }

  /**
   * CNPJ do responsável pelo pagamento do Vale-Pedágio.  Informar os zeros não significativos.
   * @return cpFPg
   */
  @javax.annotation.Nullable
  public String getCpFPg() {
    return cpFPg;
  }

  public void setCpFPg(@javax.annotation.Nullable String cpFPg) {
    this.cpFPg = cpFPg;
  }


  public MdfeSefazDisp nCompra(@javax.annotation.Nullable String nCompra) {
    this.nCompra = nCompra;
    return this;
  }

  /**
   * Número do comprovante de compra.  Número de ordem do comprovante de compra do Vale-Pedágio fornecido para cada veículo ou combinação veicular, por viagem.
   * @return nCompra
   */
  @javax.annotation.Nullable
  public String getnCompra() {
    return nCompra;
  }

  public void setnCompra(@javax.annotation.Nullable String nCompra) {
    this.nCompra = nCompra;
  }


  public MdfeSefazDisp vValePed(@javax.annotation.Nullable BigDecimal vValePed) {
    this.vValePed = vValePed;
    return this;
  }

  /**
   * Valor do Vale-Pedagio.  Valor do Vale-Pedágio obrigatório necessário à livre circulação, desde a origem da operação de transporte até o destino, do transportador contratado.
   * minimum: 0
   * @return vValePed
   */
  @javax.annotation.Nullable
  public BigDecimal getvValePed() {
    return vValePed;
  }

  public void setvValePed(@javax.annotation.Nullable BigDecimal vValePed) {
    this.vValePed = vValePed;
  }


  public MdfeSefazDisp tpValePed(@javax.annotation.Nullable String tpValePed) {
    this.tpValePed = tpValePed;
    return this;
  }

  /**
   * Tipo do Vale Pedagio.  * 01 - TAG  * 02 - Cupom  * 03 - Cartão
   * @return tpValePed
   */
  @javax.annotation.Nullable
  public String getTpValePed() {
    return tpValePed;
  }

  public void setTpValePed(@javax.annotation.Nullable String tpValePed) {
    this.tpValePed = tpValePed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdfeSefazDisp mdfeSefazDisp = (MdfeSefazDisp) o;
    return Objects.equals(this.cnPJForn, mdfeSefazDisp.cnPJForn) &&
        Objects.equals(this.cnPJPg, mdfeSefazDisp.cnPJPg) &&
        Objects.equals(this.cpFPg, mdfeSefazDisp.cpFPg) &&
        Objects.equals(this.nCompra, mdfeSefazDisp.nCompra) &&
        Objects.equals(this.vValePed, mdfeSefazDisp.vValePed) &&
        Objects.equals(this.tpValePed, mdfeSefazDisp.tpValePed);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cnPJForn, cnPJPg, cpFPg, nCompra, vValePed, tpValePed);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdfeSefazDisp {\n");
    sb.append("    cnPJForn: ").append(toIndentedString(cnPJForn)).append("\n");
    sb.append("    cnPJPg: ").append(toIndentedString(cnPJPg)).append("\n");
    sb.append("    cpFPg: ").append(toIndentedString(cpFPg)).append("\n");
    sb.append("    nCompra: ").append(toIndentedString(nCompra)).append("\n");
    sb.append("    vValePed: ").append(toIndentedString(vValePed)).append("\n");
    sb.append("    tpValePed: ").append(toIndentedString(tpValePed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CNPJForn");
    openapiFields.add("CNPJPg");
    openapiFields.add("CPFPg");
    openapiFields.add("nCompra");
    openapiFields.add("vValePed");
    openapiFields.add("tpValePed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CNPJForn");
    openapiRequiredFields.add("vValePed");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MdfeSefazDisp
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MdfeSefazDisp.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MdfeSefazDisp is not found in the empty JSON string", MdfeSefazDisp.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MdfeSefazDisp.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MdfeSefazDisp` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MdfeSefazDisp.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CNPJForn") != null && !jsonObj.get("CNPJForn").isJsonNull()) && !jsonObj.get("CNPJForn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CNPJForn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CNPJForn").toString()));
      }
      if ((jsonObj.get("CNPJPg") != null && !jsonObj.get("CNPJPg").isJsonNull()) && !jsonObj.get("CNPJPg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CNPJPg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CNPJPg").toString()));
      }
      if ((jsonObj.get("CPFPg") != null && !jsonObj.get("CPFPg").isJsonNull()) && !jsonObj.get("CPFPg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CPFPg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CPFPg").toString()));
      }
      if ((jsonObj.get("nCompra") != null && !jsonObj.get("nCompra").isJsonNull()) && !jsonObj.get("nCompra").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nCompra` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nCompra").toString()));
      }
      if ((jsonObj.get("tpValePed") != null && !jsonObj.get("tpValePed").isJsonNull()) && !jsonObj.get("tpValePed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tpValePed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tpValePed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MdfeSefazDisp.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MdfeSefazDisp' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MdfeSefazDisp> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MdfeSefazDisp.class));

       return (TypeAdapter<T>) new TypeAdapter<MdfeSefazDisp>() {
           @Override
           public void write(JsonWriter out, MdfeSefazDisp value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MdfeSefazDisp read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MdfeSefazDisp given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MdfeSefazDisp
   * @throws IOException if the JSON string is invalid with respect to MdfeSefazDisp
   */
  public static MdfeSefazDisp fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MdfeSefazDisp.class);
  }

  /**
   * Convert an instance of MdfeSefazDisp to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

