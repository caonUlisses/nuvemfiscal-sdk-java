/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.EnderecoSimples;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Grupo de informações do DPS relativas à Evento.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class AtvEvento {
  public static final String SERIALIZED_NAME_X_NOME = "xNome";
  @SerializedName(SERIALIZED_NAME_X_NOME)
  @javax.annotation.Nullable
  private String xNome;

  public static final String SERIALIZED_NAME_DESC = "desc";
  @SerializedName(SERIALIZED_NAME_DESC)
  @javax.annotation.Nullable
  private String desc;

  public static final String SERIALIZED_NAME_DT_INI = "dtIni";
  @SerializedName(SERIALIZED_NAME_DT_INI)
  @javax.annotation.Nullable
  private LocalDate dtIni;

  public static final String SERIALIZED_NAME_DT_FIM = "dtFim";
  @SerializedName(SERIALIZED_NAME_DT_FIM)
  @javax.annotation.Nullable
  private LocalDate dtFim;

  public static final String SERIALIZED_NAME_ID_ATV_EVT = "idAtvEvt";
  @SerializedName(SERIALIZED_NAME_ID_ATV_EVT)
  @javax.annotation.Nullable
  private String idAtvEvt;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  @javax.annotation.Nullable
  private EnderecoSimples end;

  public AtvEvento() {
  }

  public AtvEvento xNome(@javax.annotation.Nullable String xNome) {
    this.xNome = xNome;
    return this;
  }

  /**
   * Nome do evento Artístico, Cultural, Esportivo, etc.
   * @return xNome
   */
  @javax.annotation.Nullable
  public String getxNome() {
    return xNome;
  }

  public void setxNome(@javax.annotation.Nullable String xNome) {
    this.xNome = xNome;
  }


  public AtvEvento desc(@javax.annotation.Nullable String desc) {
    this.desc = desc;
    return this;
  }

  /**
   * &#x60;Deprecated&#x60;    **Propriedade depreciada**.    *Utilize &#x60;xNome&#x60;*.
   * @return desc
   */
  @javax.annotation.Nullable
  public String getDesc() {
    return desc;
  }

  public void setDesc(@javax.annotation.Nullable String desc) {
    this.desc = desc;
  }


  public AtvEvento dtIni(@javax.annotation.Nullable LocalDate dtIni) {
    this.dtIni = dtIni;
    return this;
  }

  /**
   * Data de início da atividade de evento. Ano, Mês e Dia (AAAA-MM-DD).
   * @return dtIni
   */
  @javax.annotation.Nullable
  public LocalDate getDtIni() {
    return dtIni;
  }

  public void setDtIni(@javax.annotation.Nullable LocalDate dtIni) {
    this.dtIni = dtIni;
  }


  public AtvEvento dtFim(@javax.annotation.Nullable LocalDate dtFim) {
    this.dtFim = dtFim;
    return this;
  }

  /**
   * Data de fim da atividade de evento. Ano, Mês e Dia (AAAA-MM-DD).
   * @return dtFim
   */
  @javax.annotation.Nullable
  public LocalDate getDtFim() {
    return dtFim;
  }

  public void setDtFim(@javax.annotation.Nullable LocalDate dtFim) {
    this.dtFim = dtFim;
  }


  public AtvEvento idAtvEvt(@javax.annotation.Nullable String idAtvEvt) {
    this.idAtvEvt = idAtvEvt;
    return this;
  }

  /**
   * Identificação da Atividade de Evento (código identificador de evento determinado pela Administração Tributária Municipal).
   * @return idAtvEvt
   */
  @javax.annotation.Nullable
  public String getIdAtvEvt() {
    return idAtvEvt;
  }

  public void setIdAtvEvt(@javax.annotation.Nullable String idAtvEvt) {
    this.idAtvEvt = idAtvEvt;
  }


  public AtvEvento id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * &#x60;Deprecated&#x60;    **Propriedade depreciada**.    *Utilize &#x60;idAtvEvt&#x60;*.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public AtvEvento end(@javax.annotation.Nullable EnderecoSimples end) {
    this.end = end;
    return this;
  }

  /**
   * Get end
   * @return end
   */
  @javax.annotation.Nullable
  public EnderecoSimples getEnd() {
    return end;
  }

  public void setEnd(@javax.annotation.Nullable EnderecoSimples end) {
    this.end = end;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AtvEvento atvEvento = (AtvEvento) o;
    return Objects.equals(this.xNome, atvEvento.xNome) &&
        Objects.equals(this.desc, atvEvento.desc) &&
        Objects.equals(this.dtIni, atvEvento.dtIni) &&
        Objects.equals(this.dtFim, atvEvento.dtFim) &&
        Objects.equals(this.idAtvEvt, atvEvento.idAtvEvt) &&
        Objects.equals(this.id, atvEvento.id) &&
        Objects.equals(this.end, atvEvento.end);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(xNome, desc, dtIni, dtFim, idAtvEvt, id, end);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AtvEvento {\n");
    sb.append("    xNome: ").append(toIndentedString(xNome)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    dtIni: ").append(toIndentedString(dtIni)).append("\n");
    sb.append("    dtFim: ").append(toIndentedString(dtFim)).append("\n");
    sb.append("    idAtvEvt: ").append(toIndentedString(idAtvEvt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("xNome");
    openapiFields.add("desc");
    openapiFields.add("dtIni");
    openapiFields.add("dtFim");
    openapiFields.add("idAtvEvt");
    openapiFields.add("id");
    openapiFields.add("end");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dtIni");
    openapiRequiredFields.add("dtFim");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AtvEvento
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AtvEvento.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AtvEvento is not found in the empty JSON string", AtvEvento.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AtvEvento.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AtvEvento` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AtvEvento.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("xNome") != null && !jsonObj.get("xNome").isJsonNull()) && !jsonObj.get("xNome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xNome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xNome").toString()));
      }
      if ((jsonObj.get("desc") != null && !jsonObj.get("desc").isJsonNull()) && !jsonObj.get("desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("desc").toString()));
      }
      if ((jsonObj.get("idAtvEvt") != null && !jsonObj.get("idAtvEvt").isJsonNull()) && !jsonObj.get("idAtvEvt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idAtvEvt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idAtvEvt").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `end`
      if (jsonObj.get("end") != null && !jsonObj.get("end").isJsonNull()) {
        EnderecoSimples.validateJsonElement(jsonObj.get("end"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AtvEvento.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AtvEvento' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AtvEvento> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AtvEvento.class));

       return (TypeAdapter<T>) new TypeAdapter<AtvEvento>() {
           @Override
           public void write(JsonWriter out, AtvEvento value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AtvEvento read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AtvEvento given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AtvEvento
   * @throws IOException if the JSON string is invalid with respect to AtvEvento
   */
  public static AtvEvento fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AtvEvento.class);
  }

  /**
   * Convert an instance of AtvEvento to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

