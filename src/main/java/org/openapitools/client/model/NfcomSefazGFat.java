/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.NfcomSefazEndeEmi;
import org.openapitools.client.model.NfcomSefazGPIX;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Grupo de informações de controle da Fatura.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazGFat {
  public static final String SERIALIZED_NAME_COMPET_FAT = "CompetFat";
  @SerializedName(SERIALIZED_NAME_COMPET_FAT)
  @javax.annotation.Nullable
  private String competFat;

  public static final String SERIALIZED_NAME_D_VENC_FAT = "dVencFat";
  @SerializedName(SERIALIZED_NAME_D_VENC_FAT)
  @javax.annotation.Nullable
  private LocalDate dVencFat;

  public static final String SERIALIZED_NAME_D_PER_USO_INI = "dPerUsoIni";
  @SerializedName(SERIALIZED_NAME_D_PER_USO_INI)
  @javax.annotation.Nullable
  private LocalDate dPerUsoIni;

  public static final String SERIALIZED_NAME_D_PER_USO_FIM = "dPerUsoFim";
  @SerializedName(SERIALIZED_NAME_D_PER_USO_FIM)
  @javax.annotation.Nullable
  private LocalDate dPerUsoFim;

  public static final String SERIALIZED_NAME_COD_BARRAS = "codBarras";
  @SerializedName(SERIALIZED_NAME_COD_BARRAS)
  @javax.annotation.Nullable
  private String codBarras;

  public static final String SERIALIZED_NAME_COD_DEB_AUTO = "codDebAuto";
  @SerializedName(SERIALIZED_NAME_COD_DEB_AUTO)
  @javax.annotation.Nullable
  private String codDebAuto;

  public static final String SERIALIZED_NAME_COD_BANCO = "codBanco";
  @SerializedName(SERIALIZED_NAME_COD_BANCO)
  @javax.annotation.Nullable
  private String codBanco;

  public static final String SERIALIZED_NAME_COD_AGENCIA = "codAgencia";
  @SerializedName(SERIALIZED_NAME_COD_AGENCIA)
  @javax.annotation.Nullable
  private String codAgencia;

  public static final String SERIALIZED_NAME_ENDER_CORRESP = "enderCorresp";
  @SerializedName(SERIALIZED_NAME_ENDER_CORRESP)
  @javax.annotation.Nullable
  private NfcomSefazEndeEmi enderCorresp;

  public static final String SERIALIZED_NAME_G_P_I_X = "gPIX";
  @SerializedName(SERIALIZED_NAME_G_P_I_X)
  @javax.annotation.Nullable
  private NfcomSefazGPIX gPIX;

  public NfcomSefazGFat() {
  }

  public NfcomSefazGFat competFat(@javax.annotation.Nullable String competFat) {
    this.competFat = competFat;
    return this;
  }

  /**
   * Ano e mês referência do faturamento (AAAAMM).
   * @return competFat
   */
  @javax.annotation.Nullable
  public String getCompetFat() {
    return competFat;
  }

  public void setCompetFat(@javax.annotation.Nullable String competFat) {
    this.competFat = competFat;
  }


  public NfcomSefazGFat dVencFat(@javax.annotation.Nullable LocalDate dVencFat) {
    this.dVencFat = dVencFat;
    return this;
  }

  /**
   * Data de vencimento da fatura.  Formato AAAA-MM-DD.
   * @return dVencFat
   */
  @javax.annotation.Nullable
  public LocalDate getdVencFat() {
    return dVencFat;
  }

  public void setdVencFat(@javax.annotation.Nullable LocalDate dVencFat) {
    this.dVencFat = dVencFat;
  }


  public NfcomSefazGFat dPerUsoIni(@javax.annotation.Nullable LocalDate dPerUsoIni) {
    this.dPerUsoIni = dPerUsoIni;
    return this;
  }

  /**
   * Período de uso inicial.  Formato AAAA-MM-DD.
   * @return dPerUsoIni
   */
  @javax.annotation.Nullable
  public LocalDate getdPerUsoIni() {
    return dPerUsoIni;
  }

  public void setdPerUsoIni(@javax.annotation.Nullable LocalDate dPerUsoIni) {
    this.dPerUsoIni = dPerUsoIni;
  }


  public NfcomSefazGFat dPerUsoFim(@javax.annotation.Nullable LocalDate dPerUsoFim) {
    this.dPerUsoFim = dPerUsoFim;
    return this;
  }

  /**
   * Período de uso final.  Formato AAAA-MM-DD.
   * @return dPerUsoFim
   */
  @javax.annotation.Nullable
  public LocalDate getdPerUsoFim() {
    return dPerUsoFim;
  }

  public void setdPerUsoFim(@javax.annotation.Nullable LocalDate dPerUsoFim) {
    this.dPerUsoFim = dPerUsoFim;
  }


  public NfcomSefazGFat codBarras(@javax.annotation.Nullable String codBarras) {
    this.codBarras = codBarras;
    return this;
  }

  /**
   * Linha digitável do código de barras.
   * @return codBarras
   */
  @javax.annotation.Nullable
  public String getCodBarras() {
    return codBarras;
  }

  public void setCodBarras(@javax.annotation.Nullable String codBarras) {
    this.codBarras = codBarras;
  }


  public NfcomSefazGFat codDebAuto(@javax.annotation.Nullable String codDebAuto) {
    this.codDebAuto = codDebAuto;
    return this;
  }

  /**
   * Código de autorização débito em conta.
   * @return codDebAuto
   */
  @javax.annotation.Nullable
  public String getCodDebAuto() {
    return codDebAuto;
  }

  public void setCodDebAuto(@javax.annotation.Nullable String codDebAuto) {
    this.codDebAuto = codDebAuto;
  }


  public NfcomSefazGFat codBanco(@javax.annotation.Nullable String codBanco) {
    this.codBanco = codBanco;
    return this;
  }

  /**
   * Número do banco para débito em conta.
   * @return codBanco
   */
  @javax.annotation.Nullable
  public String getCodBanco() {
    return codBanco;
  }

  public void setCodBanco(@javax.annotation.Nullable String codBanco) {
    this.codBanco = codBanco;
  }


  public NfcomSefazGFat codAgencia(@javax.annotation.Nullable String codAgencia) {
    this.codAgencia = codAgencia;
    return this;
  }

  /**
   * Número da agência bancária para débito em conta.
   * @return codAgencia
   */
  @javax.annotation.Nullable
  public String getCodAgencia() {
    return codAgencia;
  }

  public void setCodAgencia(@javax.annotation.Nullable String codAgencia) {
    this.codAgencia = codAgencia;
  }


  public NfcomSefazGFat enderCorresp(@javax.annotation.Nullable NfcomSefazEndeEmi enderCorresp) {
    this.enderCorresp = enderCorresp;
    return this;
  }

  /**
   * Get enderCorresp
   * @return enderCorresp
   */
  @javax.annotation.Nullable
  public NfcomSefazEndeEmi getEnderCorresp() {
    return enderCorresp;
  }

  public void setEnderCorresp(@javax.annotation.Nullable NfcomSefazEndeEmi enderCorresp) {
    this.enderCorresp = enderCorresp;
  }


  public NfcomSefazGFat gPIX(@javax.annotation.Nullable NfcomSefazGPIX gPIX) {
    this.gPIX = gPIX;
    return this;
  }

  /**
   * Get gPIX
   * @return gPIX
   */
  @javax.annotation.Nullable
  public NfcomSefazGPIX getgPIX() {
    return gPIX;
  }

  public void setgPIX(@javax.annotation.Nullable NfcomSefazGPIX gPIX) {
    this.gPIX = gPIX;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazGFat nfcomSefazGFat = (NfcomSefazGFat) o;
    return Objects.equals(this.competFat, nfcomSefazGFat.competFat) &&
        Objects.equals(this.dVencFat, nfcomSefazGFat.dVencFat) &&
        Objects.equals(this.dPerUsoIni, nfcomSefazGFat.dPerUsoIni) &&
        Objects.equals(this.dPerUsoFim, nfcomSefazGFat.dPerUsoFim) &&
        Objects.equals(this.codBarras, nfcomSefazGFat.codBarras) &&
        Objects.equals(this.codDebAuto, nfcomSefazGFat.codDebAuto) &&
        Objects.equals(this.codBanco, nfcomSefazGFat.codBanco) &&
        Objects.equals(this.codAgencia, nfcomSefazGFat.codAgencia) &&
        Objects.equals(this.enderCorresp, nfcomSefazGFat.enderCorresp) &&
        Objects.equals(this.gPIX, nfcomSefazGFat.gPIX);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(competFat, dVencFat, dPerUsoIni, dPerUsoFim, codBarras, codDebAuto, codBanco, codAgencia, enderCorresp, gPIX);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazGFat {\n");
    sb.append("    competFat: ").append(toIndentedString(competFat)).append("\n");
    sb.append("    dVencFat: ").append(toIndentedString(dVencFat)).append("\n");
    sb.append("    dPerUsoIni: ").append(toIndentedString(dPerUsoIni)).append("\n");
    sb.append("    dPerUsoFim: ").append(toIndentedString(dPerUsoFim)).append("\n");
    sb.append("    codBarras: ").append(toIndentedString(codBarras)).append("\n");
    sb.append("    codDebAuto: ").append(toIndentedString(codDebAuto)).append("\n");
    sb.append("    codBanco: ").append(toIndentedString(codBanco)).append("\n");
    sb.append("    codAgencia: ").append(toIndentedString(codAgencia)).append("\n");
    sb.append("    enderCorresp: ").append(toIndentedString(enderCorresp)).append("\n");
    sb.append("    gPIX: ").append(toIndentedString(gPIX)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompetFat");
    openapiFields.add("dVencFat");
    openapiFields.add("dPerUsoIni");
    openapiFields.add("dPerUsoFim");
    openapiFields.add("codBarras");
    openapiFields.add("codDebAuto");
    openapiFields.add("codBanco");
    openapiFields.add("codAgencia");
    openapiFields.add("enderCorresp");
    openapiFields.add("gPIX");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CompetFat");
    openapiRequiredFields.add("dVencFat");
    openapiRequiredFields.add("codBarras");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazGFat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazGFat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazGFat is not found in the empty JSON string", NfcomSefazGFat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazGFat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazGFat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazGFat.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CompetFat") != null && !jsonObj.get("CompetFat").isJsonNull()) && !jsonObj.get("CompetFat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompetFat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompetFat").toString()));
      }
      if ((jsonObj.get("codBarras") != null && !jsonObj.get("codBarras").isJsonNull()) && !jsonObj.get("codBarras").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codBarras` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codBarras").toString()));
      }
      if ((jsonObj.get("codDebAuto") != null && !jsonObj.get("codDebAuto").isJsonNull()) && !jsonObj.get("codDebAuto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codDebAuto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codDebAuto").toString()));
      }
      if ((jsonObj.get("codBanco") != null && !jsonObj.get("codBanco").isJsonNull()) && !jsonObj.get("codBanco").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codBanco` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codBanco").toString()));
      }
      if ((jsonObj.get("codAgencia") != null && !jsonObj.get("codAgencia").isJsonNull()) && !jsonObj.get("codAgencia").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codAgencia` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codAgencia").toString()));
      }
      // validate the optional field `enderCorresp`
      if (jsonObj.get("enderCorresp") != null && !jsonObj.get("enderCorresp").isJsonNull()) {
        NfcomSefazEndeEmi.validateJsonElement(jsonObj.get("enderCorresp"));
      }
      // validate the optional field `gPIX`
      if (jsonObj.get("gPIX") != null && !jsonObj.get("gPIX").isJsonNull()) {
        NfcomSefazGPIX.validateJsonElement(jsonObj.get("gPIX"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazGFat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazGFat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazGFat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazGFat.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazGFat>() {
           @Override
           public void write(JsonWriter out, NfcomSefazGFat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazGFat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazGFat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazGFat
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazGFat
   */
  public static NfcomSefazGFat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazGFat.class);
  }

  /**
   * Convert an instance of NfcomSefazGFat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

