/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual.  Grupo a ser informado nas prestações interestaduais para consumidor final, não contribuinte do ICMS.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class CteSefazICMSUFFim {
  public static final String SERIALIZED_NAME_V_B_C_U_F_FIM = "vBCUFFim";
  @SerializedName(SERIALIZED_NAME_V_B_C_U_F_FIM)
  @javax.annotation.Nullable
  private BigDecimal vBCUFFim;

  public static final String SERIALIZED_NAME_P_F_C_P_U_F_FIM = "pFCPUFFim";
  @SerializedName(SERIALIZED_NAME_P_F_C_P_U_F_FIM)
  @javax.annotation.Nullable
  private BigDecimal pFCPUFFim;

  public static final String SERIALIZED_NAME_P_I_C_M_S_U_F_FIM = "pICMSUFFim";
  @SerializedName(SERIALIZED_NAME_P_I_C_M_S_U_F_FIM)
  @javax.annotation.Nullable
  private BigDecimal pICMSUFFim;

  public static final String SERIALIZED_NAME_P_I_C_M_S_INTER = "pICMSInter";
  @SerializedName(SERIALIZED_NAME_P_I_C_M_S_INTER)
  @javax.annotation.Nullable
  private BigDecimal pICMSInter;

  public static final String SERIALIZED_NAME_V_F_C_P_U_F_FIM = "vFCPUFFim";
  @SerializedName(SERIALIZED_NAME_V_F_C_P_U_F_FIM)
  @javax.annotation.Nullable
  private BigDecimal vFCPUFFim;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_FIM = "vICMSUFFim";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_FIM)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFFim;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_INI = "vICMSUFIni";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_INI)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFIni;

  public CteSefazICMSUFFim() {
  }

  public CteSefazICMSUFFim vBCUFFim(@javax.annotation.Nullable BigDecimal vBCUFFim) {
    this.vBCUFFim = vBCUFFim;
    return this;
  }

  /**
   * Valor da BC do ICMS na UF de término da prestação do serviço de transporte.
   * minimum: 0
   * @return vBCUFFim
   */
  @javax.annotation.Nullable
  public BigDecimal getvBCUFFim() {
    return vBCUFFim;
  }

  public void setvBCUFFim(@javax.annotation.Nullable BigDecimal vBCUFFim) {
    this.vBCUFFim = vBCUFFim;
  }


  public CteSefazICMSUFFim pFCPUFFim(@javax.annotation.Nullable BigDecimal pFCPUFFim) {
    this.pFCPUFFim = pFCPUFFim;
    return this;
  }

  /**
   * Percentual do ICMS relativo ao Fundo de Combate à pobreza (FCP) na UF de término da prestação do serviço de transporte.  Alíquota adotada nas operações internas na UF do destinatário.
   * minimum: 0
   * @return pFCPUFFim
   */
  @javax.annotation.Nullable
  public BigDecimal getpFCPUFFim() {
    return pFCPUFFim;
  }

  public void setpFCPUFFim(@javax.annotation.Nullable BigDecimal pFCPUFFim) {
    this.pFCPUFFim = pFCPUFFim;
  }


  public CteSefazICMSUFFim pICMSUFFim(@javax.annotation.Nullable BigDecimal pICMSUFFim) {
    this.pICMSUFFim = pICMSUFFim;
    return this;
  }

  /**
   * Alíquota interna da UF de término da prestação do serviço de transporte.  Alíquota adotada nas operações internas na UF do destinatário.
   * minimum: 0
   * @return pICMSUFFim
   */
  @javax.annotation.Nullable
  public BigDecimal getpICMSUFFim() {
    return pICMSUFFim;
  }

  public void setpICMSUFFim(@javax.annotation.Nullable BigDecimal pICMSUFFim) {
    this.pICMSUFFim = pICMSUFFim;
  }


  public CteSefazICMSUFFim pICMSInter(@javax.annotation.Nullable BigDecimal pICMSInter) {
    this.pICMSInter = pICMSInter;
    return this;
  }

  /**
   * Alíquota interestadual das UF envolvidas.  Alíquota interestadual das UF envolvidas.
   * minimum: 0
   * @return pICMSInter
   */
  @javax.annotation.Nullable
  public BigDecimal getpICMSInter() {
    return pICMSInter;
  }

  public void setpICMSInter(@javax.annotation.Nullable BigDecimal pICMSInter) {
    this.pICMSInter = pICMSInter;
  }


  public CteSefazICMSUFFim vFCPUFFim(@javax.annotation.Nullable BigDecimal vFCPUFFim) {
    this.vFCPUFFim = vFCPUFFim;
    return this;
  }

  /**
   * Valor do ICMS relativo ao Fundo de Combate á Pobreza (FCP) da UF de término da prestação.
   * minimum: 0
   * @return vFCPUFFim
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCPUFFim() {
    return vFCPUFFim;
  }

  public void setvFCPUFFim(@javax.annotation.Nullable BigDecimal vFCPUFFim) {
    this.vFCPUFFim = vFCPUFFim;
  }


  public CteSefazICMSUFFim vICMSUFFim(@javax.annotation.Nullable BigDecimal vICMSUFFim) {
    this.vICMSUFFim = vICMSUFFim;
    return this;
  }

  /**
   * Valor do ICMS de partilha para a UF de término da prestação do serviço de transporte.
   * minimum: 0
   * @return vICMSUFFim
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFFim() {
    return vICMSUFFim;
  }

  public void setvICMSUFFim(@javax.annotation.Nullable BigDecimal vICMSUFFim) {
    this.vICMSUFFim = vICMSUFFim;
  }


  public CteSefazICMSUFFim vICMSUFIni(@javax.annotation.Nullable BigDecimal vICMSUFIni) {
    this.vICMSUFIni = vICMSUFIni;
    return this;
  }

  /**
   * Valor do ICMS de partilha para a UF de início da prestação do serviço de transporte.
   * minimum: 0
   * @return vICMSUFIni
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFIni() {
    return vICMSUFIni;
  }

  public void setvICMSUFIni(@javax.annotation.Nullable BigDecimal vICMSUFIni) {
    this.vICMSUFIni = vICMSUFIni;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CteSefazICMSUFFim cteSefazICMSUFFim = (CteSefazICMSUFFim) o;
    return Objects.equals(this.vBCUFFim, cteSefazICMSUFFim.vBCUFFim) &&
        Objects.equals(this.pFCPUFFim, cteSefazICMSUFFim.pFCPUFFim) &&
        Objects.equals(this.pICMSUFFim, cteSefazICMSUFFim.pICMSUFFim) &&
        Objects.equals(this.pICMSInter, cteSefazICMSUFFim.pICMSInter) &&
        Objects.equals(this.vFCPUFFim, cteSefazICMSUFFim.vFCPUFFim) &&
        Objects.equals(this.vICMSUFFim, cteSefazICMSUFFim.vICMSUFFim) &&
        Objects.equals(this.vICMSUFIni, cteSefazICMSUFFim.vICMSUFIni);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vBCUFFim, pFCPUFFim, pICMSUFFim, pICMSInter, vFCPUFFim, vICMSUFFim, vICMSUFIni);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CteSefazICMSUFFim {\n");
    sb.append("    vBCUFFim: ").append(toIndentedString(vBCUFFim)).append("\n");
    sb.append("    pFCPUFFim: ").append(toIndentedString(pFCPUFFim)).append("\n");
    sb.append("    pICMSUFFim: ").append(toIndentedString(pICMSUFFim)).append("\n");
    sb.append("    pICMSInter: ").append(toIndentedString(pICMSInter)).append("\n");
    sb.append("    vFCPUFFim: ").append(toIndentedString(vFCPUFFim)).append("\n");
    sb.append("    vICMSUFFim: ").append(toIndentedString(vICMSUFFim)).append("\n");
    sb.append("    vICMSUFIni: ").append(toIndentedString(vICMSUFIni)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vBCUFFim");
    openapiFields.add("pFCPUFFim");
    openapiFields.add("pICMSUFFim");
    openapiFields.add("pICMSInter");
    openapiFields.add("vFCPUFFim");
    openapiFields.add("vICMSUFFim");
    openapiFields.add("vICMSUFIni");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vBCUFFim");
    openapiRequiredFields.add("pFCPUFFim");
    openapiRequiredFields.add("pICMSUFFim");
    openapiRequiredFields.add("pICMSInter");
    openapiRequiredFields.add("vFCPUFFim");
    openapiRequiredFields.add("vICMSUFFim");
    openapiRequiredFields.add("vICMSUFIni");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CteSefazICMSUFFim
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CteSefazICMSUFFim.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CteSefazICMSUFFim is not found in the empty JSON string", CteSefazICMSUFFim.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CteSefazICMSUFFim.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CteSefazICMSUFFim` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CteSefazICMSUFFim.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CteSefazICMSUFFim.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CteSefazICMSUFFim' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CteSefazICMSUFFim> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CteSefazICMSUFFim.class));

       return (TypeAdapter<T>) new TypeAdapter<CteSefazICMSUFFim>() {
           @Override
           public void write(JsonWriter out, CteSefazICMSUFFim value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CteSefazICMSUFFim read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CteSefazICMSUFFim given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CteSefazICMSUFFim
   * @throws IOException if the JSON string is invalid with respect to CteSefazICMSUFFim
   */
  public static CteSefazICMSUFFim fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CteSefazICMSUFFim.class);
  }

  /**
   * Convert an instance of CteSefazICMSUFFim to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

