/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazICMSTot;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazVRetTribTot;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Dados dos totais da NFCom.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazTotal {
  public static final String SERIALIZED_NAME_V_PROD = "vProd";
  @SerializedName(SERIALIZED_NAME_V_PROD)
  @javax.annotation.Nullable
  private BigDecimal vProd;

  public static final String SERIALIZED_NAME_IC_M_S_TOT = "ICMSTot";
  @SerializedName(SERIALIZED_NAME_IC_M_S_TOT)
  @javax.annotation.Nonnull
  private NfcomSefazICMSTot icMSTot;

  public static final String SERIALIZED_NAME_V_C_O_F_I_N_S = "vCOFINS";
  @SerializedName(SERIALIZED_NAME_V_C_O_F_I_N_S)
  @javax.annotation.Nullable
  private BigDecimal vCOFINS;

  public static final String SERIALIZED_NAME_V_P_I_S = "vPIS";
  @SerializedName(SERIALIZED_NAME_V_P_I_S)
  @javax.annotation.Nullable
  private BigDecimal vPIS;

  public static final String SERIALIZED_NAME_V_F_U_N_T_T_E_L = "vFUNTTEL";
  @SerializedName(SERIALIZED_NAME_V_F_U_N_T_T_E_L)
  @javax.annotation.Nullable
  private BigDecimal vFUNTTEL;

  public static final String SERIALIZED_NAME_V_F_U_S_T = "vFUST";
  @SerializedName(SERIALIZED_NAME_V_F_U_S_T)
  @javax.annotation.Nullable
  private BigDecimal vFUST;

  public static final String SERIALIZED_NAME_V_RET_TRIB_TOT = "vRetTribTot";
  @SerializedName(SERIALIZED_NAME_V_RET_TRIB_TOT)
  @javax.annotation.Nonnull
  private NfcomSefazVRetTribTot vRetTribTot;

  public static final String SERIALIZED_NAME_V_DESC = "vDesc";
  @SerializedName(SERIALIZED_NAME_V_DESC)
  @javax.annotation.Nullable
  private BigDecimal vDesc;

  public static final String SERIALIZED_NAME_V_OUTRO = "vOutro";
  @SerializedName(SERIALIZED_NAME_V_OUTRO)
  @javax.annotation.Nullable
  private BigDecimal vOutro;

  public static final String SERIALIZED_NAME_V_N_F = "vNF";
  @SerializedName(SERIALIZED_NAME_V_N_F)
  @javax.annotation.Nullable
  private BigDecimal vNF;

  public NfcomSefazTotal() {
  }

  public NfcomSefazTotal vProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
    return this;
  }

  /**
   * Valor Total dos produtos e serviços.
   * minimum: 0
   * @return vProd
   */
  @javax.annotation.Nullable
  public BigDecimal getvProd() {
    return vProd;
  }

  public void setvProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
  }


  public NfcomSefazTotal icMSTot(@javax.annotation.Nonnull NfcomSefazICMSTot icMSTot) {
    this.icMSTot = icMSTot;
    return this;
  }

  /**
   * Get icMSTot
   * @return icMSTot
   */
  @javax.annotation.Nonnull
  public NfcomSefazICMSTot getIcMSTot() {
    return icMSTot;
  }

  public void setIcMSTot(@javax.annotation.Nonnull NfcomSefazICMSTot icMSTot) {
    this.icMSTot = icMSTot;
  }


  public NfcomSefazTotal vCOFINS(@javax.annotation.Nullable BigDecimal vCOFINS) {
    this.vCOFINS = vCOFINS;
    return this;
  }

  /**
   * Valor do COFINS.
   * minimum: 0
   * @return vCOFINS
   */
  @javax.annotation.Nullable
  public BigDecimal getvCOFINS() {
    return vCOFINS;
  }

  public void setvCOFINS(@javax.annotation.Nullable BigDecimal vCOFINS) {
    this.vCOFINS = vCOFINS;
  }


  public NfcomSefazTotal vPIS(@javax.annotation.Nullable BigDecimal vPIS) {
    this.vPIS = vPIS;
    return this;
  }

  /**
   * Valor do PIS.
   * minimum: 0
   * @return vPIS
   */
  @javax.annotation.Nullable
  public BigDecimal getvPIS() {
    return vPIS;
  }

  public void setvPIS(@javax.annotation.Nullable BigDecimal vPIS) {
    this.vPIS = vPIS;
  }


  public NfcomSefazTotal vFUNTTEL(@javax.annotation.Nullable BigDecimal vFUNTTEL) {
    this.vFUNTTEL = vFUNTTEL;
    return this;
  }

  /**
   * Valor do FUNTTEL.
   * minimum: 0
   * @return vFUNTTEL
   */
  @javax.annotation.Nullable
  public BigDecimal getvFUNTTEL() {
    return vFUNTTEL;
  }

  public void setvFUNTTEL(@javax.annotation.Nullable BigDecimal vFUNTTEL) {
    this.vFUNTTEL = vFUNTTEL;
  }


  public NfcomSefazTotal vFUST(@javax.annotation.Nullable BigDecimal vFUST) {
    this.vFUST = vFUST;
    return this;
  }

  /**
   * Valor do FUST.
   * minimum: 0
   * @return vFUST
   */
  @javax.annotation.Nullable
  public BigDecimal getvFUST() {
    return vFUST;
  }

  public void setvFUST(@javax.annotation.Nullable BigDecimal vFUST) {
    this.vFUST = vFUST;
  }


  public NfcomSefazTotal vRetTribTot(@javax.annotation.Nonnull NfcomSefazVRetTribTot vRetTribTot) {
    this.vRetTribTot = vRetTribTot;
    return this;
  }

  /**
   * Get vRetTribTot
   * @return vRetTribTot
   */
  @javax.annotation.Nonnull
  public NfcomSefazVRetTribTot getvRetTribTot() {
    return vRetTribTot;
  }

  public void setvRetTribTot(@javax.annotation.Nonnull NfcomSefazVRetTribTot vRetTribTot) {
    this.vRetTribTot = vRetTribTot;
  }


  public NfcomSefazTotal vDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
    return this;
  }

  /**
   * Valor Total do Desconto.
   * minimum: 0
   * @return vDesc
   */
  @javax.annotation.Nullable
  public BigDecimal getvDesc() {
    return vDesc;
  }

  public void setvDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
  }


  public NfcomSefazTotal vOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
    return this;
  }

  /**
   * Outras Despesas acessórias.
   * minimum: 0
   * @return vOutro
   */
  @javax.annotation.Nullable
  public BigDecimal getvOutro() {
    return vOutro;
  }

  public void setvOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
  }


  public NfcomSefazTotal vNF(@javax.annotation.Nullable BigDecimal vNF) {
    this.vNF = vNF;
    return this;
  }

  /**
   * Valor Total da NFCom.
   * minimum: 0
   * @return vNF
   */
  @javax.annotation.Nullable
  public BigDecimal getvNF() {
    return vNF;
  }

  public void setvNF(@javax.annotation.Nullable BigDecimal vNF) {
    this.vNF = vNF;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazTotal nfcomSefazTotal = (NfcomSefazTotal) o;
    return Objects.equals(this.vProd, nfcomSefazTotal.vProd) &&
        Objects.equals(this.icMSTot, nfcomSefazTotal.icMSTot) &&
        Objects.equals(this.vCOFINS, nfcomSefazTotal.vCOFINS) &&
        Objects.equals(this.vPIS, nfcomSefazTotal.vPIS) &&
        Objects.equals(this.vFUNTTEL, nfcomSefazTotal.vFUNTTEL) &&
        Objects.equals(this.vFUST, nfcomSefazTotal.vFUST) &&
        Objects.equals(this.vRetTribTot, nfcomSefazTotal.vRetTribTot) &&
        Objects.equals(this.vDesc, nfcomSefazTotal.vDesc) &&
        Objects.equals(this.vOutro, nfcomSefazTotal.vOutro) &&
        Objects.equals(this.vNF, nfcomSefazTotal.vNF);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vProd, icMSTot, vCOFINS, vPIS, vFUNTTEL, vFUST, vRetTribTot, vDesc, vOutro, vNF);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazTotal {\n");
    sb.append("    vProd: ").append(toIndentedString(vProd)).append("\n");
    sb.append("    icMSTot: ").append(toIndentedString(icMSTot)).append("\n");
    sb.append("    vCOFINS: ").append(toIndentedString(vCOFINS)).append("\n");
    sb.append("    vPIS: ").append(toIndentedString(vPIS)).append("\n");
    sb.append("    vFUNTTEL: ").append(toIndentedString(vFUNTTEL)).append("\n");
    sb.append("    vFUST: ").append(toIndentedString(vFUST)).append("\n");
    sb.append("    vRetTribTot: ").append(toIndentedString(vRetTribTot)).append("\n");
    sb.append("    vDesc: ").append(toIndentedString(vDesc)).append("\n");
    sb.append("    vOutro: ").append(toIndentedString(vOutro)).append("\n");
    sb.append("    vNF: ").append(toIndentedString(vNF)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vProd");
    openapiFields.add("ICMSTot");
    openapiFields.add("vCOFINS");
    openapiFields.add("vPIS");
    openapiFields.add("vFUNTTEL");
    openapiFields.add("vFUST");
    openapiFields.add("vRetTribTot");
    openapiFields.add("vDesc");
    openapiFields.add("vOutro");
    openapiFields.add("vNF");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vProd");
    openapiRequiredFields.add("ICMSTot");
    openapiRequiredFields.add("vCOFINS");
    openapiRequiredFields.add("vPIS");
    openapiRequiredFields.add("vFUNTTEL");
    openapiRequiredFields.add("vFUST");
    openapiRequiredFields.add("vRetTribTot");
    openapiRequiredFields.add("vDesc");
    openapiRequiredFields.add("vOutro");
    openapiRequiredFields.add("vNF");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazTotal
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazTotal.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazTotal is not found in the empty JSON string", NfcomSefazTotal.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazTotal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazTotal` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazTotal.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ICMSTot`
      NfcomSefazICMSTot.validateJsonElement(jsonObj.get("ICMSTot"));
      // validate the required field `vRetTribTot`
      NfcomSefazVRetTribTot.validateJsonElement(jsonObj.get("vRetTribTot"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazTotal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazTotal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazTotal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazTotal.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazTotal>() {
           @Override
           public void write(JsonWriter out, NfcomSefazTotal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazTotal read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazTotal given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazTotal
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazTotal
   */
  public static NfcomSefazTotal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazTotal.class);
  }

  /**
   * Convert an instance of NfcomSefazTotal to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

