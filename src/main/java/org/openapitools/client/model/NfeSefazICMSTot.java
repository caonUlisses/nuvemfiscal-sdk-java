/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Totais referentes ao ICMS.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazICMSTot {
  public static final String SERIALIZED_NAME_V_B_C = "vBC";
  @SerializedName(SERIALIZED_NAME_V_B_C)
  @javax.annotation.Nullable
  private BigDecimal vBC;

  public static final String SERIALIZED_NAME_V_I_C_M_S = "vICMS";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S)
  @javax.annotation.Nullable
  private BigDecimal vICMS;

  public static final String SERIALIZED_NAME_V_I_C_M_S_DESON = "vICMSDeson";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_DESON)
  @javax.annotation.Nullable
  private BigDecimal vICMSDeson;

  public static final String SERIALIZED_NAME_V_F_C_P_U_F_DEST = "vFCPUFDest";
  @SerializedName(SERIALIZED_NAME_V_F_C_P_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal vFCPUFDest;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_DEST = "vICMSUFDest";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFDest;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_REMET = "vICMSUFRemet";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_REMET)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFRemet;

  public static final String SERIALIZED_NAME_V_F_C_P = "vFCP";
  @SerializedName(SERIALIZED_NAME_V_F_C_P)
  @javax.annotation.Nullable
  private BigDecimal vFCP;

  public static final String SERIALIZED_NAME_V_B_C_S_T = "vBCST";
  @SerializedName(SERIALIZED_NAME_V_B_C_S_T)
  @javax.annotation.Nullable
  private BigDecimal vBCST;

  public static final String SERIALIZED_NAME_V_S_T = "vST";
  @SerializedName(SERIALIZED_NAME_V_S_T)
  @javax.annotation.Nullable
  private BigDecimal vST;

  public static final String SERIALIZED_NAME_V_F_C_P_S_T = "vFCPST";
  @SerializedName(SERIALIZED_NAME_V_F_C_P_S_T)
  @javax.annotation.Nullable
  private BigDecimal vFCPST;

  public static final String SERIALIZED_NAME_V_F_C_P_S_T_RET = "vFCPSTRet";
  @SerializedName(SERIALIZED_NAME_V_F_C_P_S_T_RET)
  @javax.annotation.Nullable
  private BigDecimal vFCPSTRet;

  public static final String SERIALIZED_NAME_Q_B_C_MONO = "qBCMono";
  @SerializedName(SERIALIZED_NAME_Q_B_C_MONO)
  @javax.annotation.Nullable
  private BigDecimal qBCMono;

  public static final String SERIALIZED_NAME_V_I_C_M_S_MONO = "vICMSMono";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_MONO)
  @javax.annotation.Nullable
  private BigDecimal vICMSMono;

  public static final String SERIALIZED_NAME_Q_B_C_MONO_RETEN = "qBCMonoReten";
  @SerializedName(SERIALIZED_NAME_Q_B_C_MONO_RETEN)
  @javax.annotation.Nullable
  private BigDecimal qBCMonoReten;

  public static final String SERIALIZED_NAME_V_I_C_M_S_MONO_RETEN = "vICMSMonoReten";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_MONO_RETEN)
  @javax.annotation.Nullable
  private BigDecimal vICMSMonoReten;

  public static final String SERIALIZED_NAME_Q_B_C_MONO_RET = "qBCMonoRet";
  @SerializedName(SERIALIZED_NAME_Q_B_C_MONO_RET)
  @javax.annotation.Nullable
  private BigDecimal qBCMonoRet;

  public static final String SERIALIZED_NAME_V_I_C_M_S_MONO_RET = "vICMSMonoRet";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_MONO_RET)
  @javax.annotation.Nullable
  private BigDecimal vICMSMonoRet;

  public static final String SERIALIZED_NAME_V_PROD = "vProd";
  @SerializedName(SERIALIZED_NAME_V_PROD)
  @javax.annotation.Nullable
  private BigDecimal vProd;

  public static final String SERIALIZED_NAME_V_FRETE = "vFrete";
  @SerializedName(SERIALIZED_NAME_V_FRETE)
  @javax.annotation.Nullable
  private BigDecimal vFrete;

  public static final String SERIALIZED_NAME_V_SEG = "vSeg";
  @SerializedName(SERIALIZED_NAME_V_SEG)
  @javax.annotation.Nullable
  private BigDecimal vSeg;

  public static final String SERIALIZED_NAME_V_DESC = "vDesc";
  @SerializedName(SERIALIZED_NAME_V_DESC)
  @javax.annotation.Nullable
  private BigDecimal vDesc;

  public static final String SERIALIZED_NAME_V_I_I = "vII";
  @SerializedName(SERIALIZED_NAME_V_I_I)
  @javax.annotation.Nullable
  private BigDecimal vII;

  public static final String SERIALIZED_NAME_V_I_P_I = "vIPI";
  @SerializedName(SERIALIZED_NAME_V_I_P_I)
  @javax.annotation.Nullable
  private BigDecimal vIPI;

  public static final String SERIALIZED_NAME_V_I_P_I_DEVOL = "vIPIDevol";
  @SerializedName(SERIALIZED_NAME_V_I_P_I_DEVOL)
  @javax.annotation.Nullable
  private BigDecimal vIPIDevol;

  public static final String SERIALIZED_NAME_V_P_I_S = "vPIS";
  @SerializedName(SERIALIZED_NAME_V_P_I_S)
  @javax.annotation.Nullable
  private BigDecimal vPIS;

  public static final String SERIALIZED_NAME_V_C_O_F_I_N_S = "vCOFINS";
  @SerializedName(SERIALIZED_NAME_V_C_O_F_I_N_S)
  @javax.annotation.Nullable
  private BigDecimal vCOFINS;

  public static final String SERIALIZED_NAME_V_OUTRO = "vOutro";
  @SerializedName(SERIALIZED_NAME_V_OUTRO)
  @javax.annotation.Nullable
  private BigDecimal vOutro;

  public static final String SERIALIZED_NAME_V_N_F = "vNF";
  @SerializedName(SERIALIZED_NAME_V_N_F)
  @javax.annotation.Nullable
  private BigDecimal vNF;

  public static final String SERIALIZED_NAME_V_TOT_TRIB = "vTotTrib";
  @SerializedName(SERIALIZED_NAME_V_TOT_TRIB)
  @javax.annotation.Nullable
  private BigDecimal vTotTrib;

  public NfeSefazICMSTot() {
  }

  public NfeSefazICMSTot vBC(@javax.annotation.Nullable BigDecimal vBC) {
    this.vBC = vBC;
    return this;
  }

  /**
   * BC do ICMS.
   * minimum: 0
   * @return vBC
   */
  @javax.annotation.Nullable
  public BigDecimal getvBC() {
    return vBC;
  }

  public void setvBC(@javax.annotation.Nullable BigDecimal vBC) {
    this.vBC = vBC;
  }


  public NfeSefazICMSTot vICMS(@javax.annotation.Nullable BigDecimal vICMS) {
    this.vICMS = vICMS;
    return this;
  }

  /**
   * Valor Total do ICMS.
   * minimum: 0
   * @return vICMS
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMS() {
    return vICMS;
  }

  public void setvICMS(@javax.annotation.Nullable BigDecimal vICMS) {
    this.vICMS = vICMS;
  }


  public NfeSefazICMSTot vICMSDeson(@javax.annotation.Nullable BigDecimal vICMSDeson) {
    this.vICMSDeson = vICMSDeson;
    return this;
  }

  /**
   * Valor Total do ICMS desonerado.
   * minimum: 0
   * @return vICMSDeson
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSDeson() {
    return vICMSDeson;
  }

  public void setvICMSDeson(@javax.annotation.Nullable BigDecimal vICMSDeson) {
    this.vICMSDeson = vICMSDeson;
  }


  public NfeSefazICMSTot vFCPUFDest(@javax.annotation.Nullable BigDecimal vFCPUFDest) {
    this.vFCPUFDest = vFCPUFDest;
    return this;
  }

  /**
   * Valor total do ICMS relativo ao Fundo de Combate à Pobreza (FCP) para a UF de destino.
   * minimum: 0
   * @return vFCPUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCPUFDest() {
    return vFCPUFDest;
  }

  public void setvFCPUFDest(@javax.annotation.Nullable BigDecimal vFCPUFDest) {
    this.vFCPUFDest = vFCPUFDest;
  }


  public NfeSefazICMSTot vICMSUFDest(@javax.annotation.Nullable BigDecimal vICMSUFDest) {
    this.vICMSUFDest = vICMSUFDest;
    return this;
  }

  /**
   * Valor total do ICMS de partilha para a UF do destinatário.
   * minimum: 0
   * @return vICMSUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFDest() {
    return vICMSUFDest;
  }

  public void setvICMSUFDest(@javax.annotation.Nullable BigDecimal vICMSUFDest) {
    this.vICMSUFDest = vICMSUFDest;
  }


  public NfeSefazICMSTot vICMSUFRemet(@javax.annotation.Nullable BigDecimal vICMSUFRemet) {
    this.vICMSUFRemet = vICMSUFRemet;
    return this;
  }

  /**
   * Valor total do ICMS de partilha para a UF do remetente.
   * minimum: 0
   * @return vICMSUFRemet
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFRemet() {
    return vICMSUFRemet;
  }

  public void setvICMSUFRemet(@javax.annotation.Nullable BigDecimal vICMSUFRemet) {
    this.vICMSUFRemet = vICMSUFRemet;
  }


  public NfeSefazICMSTot vFCP(@javax.annotation.Nullable BigDecimal vFCP) {
    this.vFCP = vFCP;
    return this;
  }

  /**
   * Valor Total do FCP (Fundo de Combate à Pobreza).
   * minimum: 0
   * @return vFCP
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCP() {
    return vFCP;
  }

  public void setvFCP(@javax.annotation.Nullable BigDecimal vFCP) {
    this.vFCP = vFCP;
  }


  public NfeSefazICMSTot vBCST(@javax.annotation.Nullable BigDecimal vBCST) {
    this.vBCST = vBCST;
    return this;
  }

  /**
   * BC do ICMS ST.
   * minimum: 0
   * @return vBCST
   */
  @javax.annotation.Nullable
  public BigDecimal getvBCST() {
    return vBCST;
  }

  public void setvBCST(@javax.annotation.Nullable BigDecimal vBCST) {
    this.vBCST = vBCST;
  }


  public NfeSefazICMSTot vST(@javax.annotation.Nullable BigDecimal vST) {
    this.vST = vST;
    return this;
  }

  /**
   * Valor Total do ICMS ST.
   * minimum: 0
   * @return vST
   */
  @javax.annotation.Nullable
  public BigDecimal getvST() {
    return vST;
  }

  public void setvST(@javax.annotation.Nullable BigDecimal vST) {
    this.vST = vST;
  }


  public NfeSefazICMSTot vFCPST(@javax.annotation.Nullable BigDecimal vFCPST) {
    this.vFCPST = vFCPST;
    return this;
  }

  /**
   * Valor Total do FCP (Fundo de Combate à Pobreza) retido por substituição tributária.
   * minimum: 0
   * @return vFCPST
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCPST() {
    return vFCPST;
  }

  public void setvFCPST(@javax.annotation.Nullable BigDecimal vFCPST) {
    this.vFCPST = vFCPST;
  }


  public NfeSefazICMSTot vFCPSTRet(@javax.annotation.Nullable BigDecimal vFCPSTRet) {
    this.vFCPSTRet = vFCPSTRet;
    return this;
  }

  /**
   * Valor Total do FCP (Fundo de Combate à Pobreza) retido anteriormente por substituição tributária.
   * minimum: 0
   * @return vFCPSTRet
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCPSTRet() {
    return vFCPSTRet;
  }

  public void setvFCPSTRet(@javax.annotation.Nullable BigDecimal vFCPSTRet) {
    this.vFCPSTRet = vFCPSTRet;
  }


  public NfeSefazICMSTot qBCMono(@javax.annotation.Nullable BigDecimal qBCMono) {
    this.qBCMono = qBCMono;
    return this;
  }

  /**
   * Valor total da quantidade tributada do ICMS monofásico próprio.
   * minimum: 0
   * @return qBCMono
   */
  @javax.annotation.Nullable
  public BigDecimal getqBCMono() {
    return qBCMono;
  }

  public void setqBCMono(@javax.annotation.Nullable BigDecimal qBCMono) {
    this.qBCMono = qBCMono;
  }


  public NfeSefazICMSTot vICMSMono(@javax.annotation.Nullable BigDecimal vICMSMono) {
    this.vICMSMono = vICMSMono;
    return this;
  }

  /**
   * Valor total do ICMS monofásico próprio.
   * minimum: 0
   * @return vICMSMono
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSMono() {
    return vICMSMono;
  }

  public void setvICMSMono(@javax.annotation.Nullable BigDecimal vICMSMono) {
    this.vICMSMono = vICMSMono;
  }


  public NfeSefazICMSTot qBCMonoReten(@javax.annotation.Nullable BigDecimal qBCMonoReten) {
    this.qBCMonoReten = qBCMonoReten;
    return this;
  }

  /**
   * Valor total da quantidade tributada do ICMS monofásico sujeito a retenção.
   * minimum: 0
   * @return qBCMonoReten
   */
  @javax.annotation.Nullable
  public BigDecimal getqBCMonoReten() {
    return qBCMonoReten;
  }

  public void setqBCMonoReten(@javax.annotation.Nullable BigDecimal qBCMonoReten) {
    this.qBCMonoReten = qBCMonoReten;
  }


  public NfeSefazICMSTot vICMSMonoReten(@javax.annotation.Nullable BigDecimal vICMSMonoReten) {
    this.vICMSMonoReten = vICMSMonoReten;
    return this;
  }

  /**
   * Valor total do ICMS monofásico sujeito a retenção.
   * minimum: 0
   * @return vICMSMonoReten
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSMonoReten() {
    return vICMSMonoReten;
  }

  public void setvICMSMonoReten(@javax.annotation.Nullable BigDecimal vICMSMonoReten) {
    this.vICMSMonoReten = vICMSMonoReten;
  }


  public NfeSefazICMSTot qBCMonoRet(@javax.annotation.Nullable BigDecimal qBCMonoRet) {
    this.qBCMonoRet = qBCMonoRet;
    return this;
  }

  /**
   * Valor total da quantidade tributada do ICMS monofásico retido anteriormente.
   * minimum: 0
   * @return qBCMonoRet
   */
  @javax.annotation.Nullable
  public BigDecimal getqBCMonoRet() {
    return qBCMonoRet;
  }

  public void setqBCMonoRet(@javax.annotation.Nullable BigDecimal qBCMonoRet) {
    this.qBCMonoRet = qBCMonoRet;
  }


  public NfeSefazICMSTot vICMSMonoRet(@javax.annotation.Nullable BigDecimal vICMSMonoRet) {
    this.vICMSMonoRet = vICMSMonoRet;
    return this;
  }

  /**
   * Valor do ICMS monofásico retido anteriormente.
   * minimum: 0
   * @return vICMSMonoRet
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSMonoRet() {
    return vICMSMonoRet;
  }

  public void setvICMSMonoRet(@javax.annotation.Nullable BigDecimal vICMSMonoRet) {
    this.vICMSMonoRet = vICMSMonoRet;
  }


  public NfeSefazICMSTot vProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
    return this;
  }

  /**
   * Valor Total dos produtos e serviços.
   * minimum: 0
   * @return vProd
   */
  @javax.annotation.Nullable
  public BigDecimal getvProd() {
    return vProd;
  }

  public void setvProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
  }


  public NfeSefazICMSTot vFrete(@javax.annotation.Nullable BigDecimal vFrete) {
    this.vFrete = vFrete;
    return this;
  }

  /**
   * Valor Total do Frete.
   * minimum: 0
   * @return vFrete
   */
  @javax.annotation.Nullable
  public BigDecimal getvFrete() {
    return vFrete;
  }

  public void setvFrete(@javax.annotation.Nullable BigDecimal vFrete) {
    this.vFrete = vFrete;
  }


  public NfeSefazICMSTot vSeg(@javax.annotation.Nullable BigDecimal vSeg) {
    this.vSeg = vSeg;
    return this;
  }

  /**
   * Valor Total do Seguro.
   * minimum: 0
   * @return vSeg
   */
  @javax.annotation.Nullable
  public BigDecimal getvSeg() {
    return vSeg;
  }

  public void setvSeg(@javax.annotation.Nullable BigDecimal vSeg) {
    this.vSeg = vSeg;
  }


  public NfeSefazICMSTot vDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
    return this;
  }

  /**
   * Valor Total do Desconto.
   * minimum: 0
   * @return vDesc
   */
  @javax.annotation.Nullable
  public BigDecimal getvDesc() {
    return vDesc;
  }

  public void setvDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
  }


  public NfeSefazICMSTot vII(@javax.annotation.Nullable BigDecimal vII) {
    this.vII = vII;
    return this;
  }

  /**
   * Valor Total do II.
   * minimum: 0
   * @return vII
   */
  @javax.annotation.Nullable
  public BigDecimal getvII() {
    return vII;
  }

  public void setvII(@javax.annotation.Nullable BigDecimal vII) {
    this.vII = vII;
  }


  public NfeSefazICMSTot vIPI(@javax.annotation.Nullable BigDecimal vIPI) {
    this.vIPI = vIPI;
    return this;
  }

  /**
   * Valor Total do IPI.
   * minimum: 0
   * @return vIPI
   */
  @javax.annotation.Nullable
  public BigDecimal getvIPI() {
    return vIPI;
  }

  public void setvIPI(@javax.annotation.Nullable BigDecimal vIPI) {
    this.vIPI = vIPI;
  }


  public NfeSefazICMSTot vIPIDevol(@javax.annotation.Nullable BigDecimal vIPIDevol) {
    this.vIPIDevol = vIPIDevol;
    return this;
  }

  /**
   * Valor Total do IPI devolvido. Deve ser informado quando preenchido o Grupo Tributos Devolvidos na emissão de nota finNFe&#x3D;4 (devolução) nas operações com não contribuintes do IPI. Corresponde ao total da soma dos campos id: UA04.
   * minimum: 0
   * @return vIPIDevol
   */
  @javax.annotation.Nullable
  public BigDecimal getvIPIDevol() {
    return vIPIDevol;
  }

  public void setvIPIDevol(@javax.annotation.Nullable BigDecimal vIPIDevol) {
    this.vIPIDevol = vIPIDevol;
  }


  public NfeSefazICMSTot vPIS(@javax.annotation.Nullable BigDecimal vPIS) {
    this.vPIS = vPIS;
    return this;
  }

  /**
   * Valor do PIS.
   * minimum: 0
   * @return vPIS
   */
  @javax.annotation.Nullable
  public BigDecimal getvPIS() {
    return vPIS;
  }

  public void setvPIS(@javax.annotation.Nullable BigDecimal vPIS) {
    this.vPIS = vPIS;
  }


  public NfeSefazICMSTot vCOFINS(@javax.annotation.Nullable BigDecimal vCOFINS) {
    this.vCOFINS = vCOFINS;
    return this;
  }

  /**
   * Valor do COFINS.
   * minimum: 0
   * @return vCOFINS
   */
  @javax.annotation.Nullable
  public BigDecimal getvCOFINS() {
    return vCOFINS;
  }

  public void setvCOFINS(@javax.annotation.Nullable BigDecimal vCOFINS) {
    this.vCOFINS = vCOFINS;
  }


  public NfeSefazICMSTot vOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
    return this;
  }

  /**
   * Outras Despesas acessórias.
   * minimum: 0
   * @return vOutro
   */
  @javax.annotation.Nullable
  public BigDecimal getvOutro() {
    return vOutro;
  }

  public void setvOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
  }


  public NfeSefazICMSTot vNF(@javax.annotation.Nullable BigDecimal vNF) {
    this.vNF = vNF;
    return this;
  }

  /**
   * Valor Total da NF-e.
   * minimum: 0
   * @return vNF
   */
  @javax.annotation.Nullable
  public BigDecimal getvNF() {
    return vNF;
  }

  public void setvNF(@javax.annotation.Nullable BigDecimal vNF) {
    this.vNF = vNF;
  }


  public NfeSefazICMSTot vTotTrib(@javax.annotation.Nullable BigDecimal vTotTrib) {
    this.vTotTrib = vTotTrib;
    return this;
  }

  /**
   * Valor estimado total de impostos federais, estaduais e municipais.
   * minimum: 0
   * @return vTotTrib
   */
  @javax.annotation.Nullable
  public BigDecimal getvTotTrib() {
    return vTotTrib;
  }

  public void setvTotTrib(@javax.annotation.Nullable BigDecimal vTotTrib) {
    this.vTotTrib = vTotTrib;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazICMSTot nfeSefazICMSTot = (NfeSefazICMSTot) o;
    return Objects.equals(this.vBC, nfeSefazICMSTot.vBC) &&
        Objects.equals(this.vICMS, nfeSefazICMSTot.vICMS) &&
        Objects.equals(this.vICMSDeson, nfeSefazICMSTot.vICMSDeson) &&
        Objects.equals(this.vFCPUFDest, nfeSefazICMSTot.vFCPUFDest) &&
        Objects.equals(this.vICMSUFDest, nfeSefazICMSTot.vICMSUFDest) &&
        Objects.equals(this.vICMSUFRemet, nfeSefazICMSTot.vICMSUFRemet) &&
        Objects.equals(this.vFCP, nfeSefazICMSTot.vFCP) &&
        Objects.equals(this.vBCST, nfeSefazICMSTot.vBCST) &&
        Objects.equals(this.vST, nfeSefazICMSTot.vST) &&
        Objects.equals(this.vFCPST, nfeSefazICMSTot.vFCPST) &&
        Objects.equals(this.vFCPSTRet, nfeSefazICMSTot.vFCPSTRet) &&
        Objects.equals(this.qBCMono, nfeSefazICMSTot.qBCMono) &&
        Objects.equals(this.vICMSMono, nfeSefazICMSTot.vICMSMono) &&
        Objects.equals(this.qBCMonoReten, nfeSefazICMSTot.qBCMonoReten) &&
        Objects.equals(this.vICMSMonoReten, nfeSefazICMSTot.vICMSMonoReten) &&
        Objects.equals(this.qBCMonoRet, nfeSefazICMSTot.qBCMonoRet) &&
        Objects.equals(this.vICMSMonoRet, nfeSefazICMSTot.vICMSMonoRet) &&
        Objects.equals(this.vProd, nfeSefazICMSTot.vProd) &&
        Objects.equals(this.vFrete, nfeSefazICMSTot.vFrete) &&
        Objects.equals(this.vSeg, nfeSefazICMSTot.vSeg) &&
        Objects.equals(this.vDesc, nfeSefazICMSTot.vDesc) &&
        Objects.equals(this.vII, nfeSefazICMSTot.vII) &&
        Objects.equals(this.vIPI, nfeSefazICMSTot.vIPI) &&
        Objects.equals(this.vIPIDevol, nfeSefazICMSTot.vIPIDevol) &&
        Objects.equals(this.vPIS, nfeSefazICMSTot.vPIS) &&
        Objects.equals(this.vCOFINS, nfeSefazICMSTot.vCOFINS) &&
        Objects.equals(this.vOutro, nfeSefazICMSTot.vOutro) &&
        Objects.equals(this.vNF, nfeSefazICMSTot.vNF) &&
        Objects.equals(this.vTotTrib, nfeSefazICMSTot.vTotTrib);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(vBC, vICMS, vICMSDeson, vFCPUFDest, vICMSUFDest, vICMSUFRemet, vFCP, vBCST, vST, vFCPST, vFCPSTRet, qBCMono, vICMSMono, qBCMonoReten, vICMSMonoReten, qBCMonoRet, vICMSMonoRet, vProd, vFrete, vSeg, vDesc, vII, vIPI, vIPIDevol, vPIS, vCOFINS, vOutro, vNF, vTotTrib);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazICMSTot {\n");
    sb.append("    vBC: ").append(toIndentedString(vBC)).append("\n");
    sb.append("    vICMS: ").append(toIndentedString(vICMS)).append("\n");
    sb.append("    vICMSDeson: ").append(toIndentedString(vICMSDeson)).append("\n");
    sb.append("    vFCPUFDest: ").append(toIndentedString(vFCPUFDest)).append("\n");
    sb.append("    vICMSUFDest: ").append(toIndentedString(vICMSUFDest)).append("\n");
    sb.append("    vICMSUFRemet: ").append(toIndentedString(vICMSUFRemet)).append("\n");
    sb.append("    vFCP: ").append(toIndentedString(vFCP)).append("\n");
    sb.append("    vBCST: ").append(toIndentedString(vBCST)).append("\n");
    sb.append("    vST: ").append(toIndentedString(vST)).append("\n");
    sb.append("    vFCPST: ").append(toIndentedString(vFCPST)).append("\n");
    sb.append("    vFCPSTRet: ").append(toIndentedString(vFCPSTRet)).append("\n");
    sb.append("    qBCMono: ").append(toIndentedString(qBCMono)).append("\n");
    sb.append("    vICMSMono: ").append(toIndentedString(vICMSMono)).append("\n");
    sb.append("    qBCMonoReten: ").append(toIndentedString(qBCMonoReten)).append("\n");
    sb.append("    vICMSMonoReten: ").append(toIndentedString(vICMSMonoReten)).append("\n");
    sb.append("    qBCMonoRet: ").append(toIndentedString(qBCMonoRet)).append("\n");
    sb.append("    vICMSMonoRet: ").append(toIndentedString(vICMSMonoRet)).append("\n");
    sb.append("    vProd: ").append(toIndentedString(vProd)).append("\n");
    sb.append("    vFrete: ").append(toIndentedString(vFrete)).append("\n");
    sb.append("    vSeg: ").append(toIndentedString(vSeg)).append("\n");
    sb.append("    vDesc: ").append(toIndentedString(vDesc)).append("\n");
    sb.append("    vII: ").append(toIndentedString(vII)).append("\n");
    sb.append("    vIPI: ").append(toIndentedString(vIPI)).append("\n");
    sb.append("    vIPIDevol: ").append(toIndentedString(vIPIDevol)).append("\n");
    sb.append("    vPIS: ").append(toIndentedString(vPIS)).append("\n");
    sb.append("    vCOFINS: ").append(toIndentedString(vCOFINS)).append("\n");
    sb.append("    vOutro: ").append(toIndentedString(vOutro)).append("\n");
    sb.append("    vNF: ").append(toIndentedString(vNF)).append("\n");
    sb.append("    vTotTrib: ").append(toIndentedString(vTotTrib)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vBC");
    openapiFields.add("vICMS");
    openapiFields.add("vICMSDeson");
    openapiFields.add("vFCPUFDest");
    openapiFields.add("vICMSUFDest");
    openapiFields.add("vICMSUFRemet");
    openapiFields.add("vFCP");
    openapiFields.add("vBCST");
    openapiFields.add("vST");
    openapiFields.add("vFCPST");
    openapiFields.add("vFCPSTRet");
    openapiFields.add("qBCMono");
    openapiFields.add("vICMSMono");
    openapiFields.add("qBCMonoReten");
    openapiFields.add("vICMSMonoReten");
    openapiFields.add("qBCMonoRet");
    openapiFields.add("vICMSMonoRet");
    openapiFields.add("vProd");
    openapiFields.add("vFrete");
    openapiFields.add("vSeg");
    openapiFields.add("vDesc");
    openapiFields.add("vII");
    openapiFields.add("vIPI");
    openapiFields.add("vIPIDevol");
    openapiFields.add("vPIS");
    openapiFields.add("vCOFINS");
    openapiFields.add("vOutro");
    openapiFields.add("vNF");
    openapiFields.add("vTotTrib");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vBC");
    openapiRequiredFields.add("vICMS");
    openapiRequiredFields.add("vICMSDeson");
    openapiRequiredFields.add("vFCP");
    openapiRequiredFields.add("vBCST");
    openapiRequiredFields.add("vST");
    openapiRequiredFields.add("vFCPST");
    openapiRequiredFields.add("vFCPSTRet");
    openapiRequiredFields.add("vProd");
    openapiRequiredFields.add("vFrete");
    openapiRequiredFields.add("vSeg");
    openapiRequiredFields.add("vDesc");
    openapiRequiredFields.add("vII");
    openapiRequiredFields.add("vIPI");
    openapiRequiredFields.add("vIPIDevol");
    openapiRequiredFields.add("vPIS");
    openapiRequiredFields.add("vCOFINS");
    openapiRequiredFields.add("vOutro");
    openapiRequiredFields.add("vNF");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazICMSTot
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazICMSTot.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazICMSTot is not found in the empty JSON string", NfeSefazICMSTot.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazICMSTot.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazICMSTot` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazICMSTot.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazICMSTot.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazICMSTot' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazICMSTot> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazICMSTot.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazICMSTot>() {
           @Override
           public void write(JsonWriter out, NfeSefazICMSTot value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazICMSTot read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazICMSTot given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazICMSTot
   * @throws IOException if the JSON string is invalid with respect to NfeSefazICMSTot
   */
  public static NfeSefazICMSTot fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazICMSTot.class);
  }

  /**
   * Convert an instance of NfeSefazICMSTot to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

