/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.github.com.caonulisses.nuvemfiscalsdk.model.MdfeSefazInfResp;
import io.github.com.caonulisses.nuvemfiscalsdk.model.MdfeSefazInfSeg;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações de Seguro da Carga.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class MdfeSefazSeg {
  public static final String SERIALIZED_NAME_INF_RESP = "infResp";
  @SerializedName(SERIALIZED_NAME_INF_RESP)
  @javax.annotation.Nonnull
  private MdfeSefazInfResp infResp;

  public static final String SERIALIZED_NAME_INF_SEG = "infSeg";
  @SerializedName(SERIALIZED_NAME_INF_SEG)
  @javax.annotation.Nullable
  private MdfeSefazInfSeg infSeg;

  public static final String SERIALIZED_NAME_N_APOL = "nApol";
  @SerializedName(SERIALIZED_NAME_N_APOL)
  @javax.annotation.Nullable
  private String nApol;

  public static final String SERIALIZED_NAME_N_AVER = "nAver";
  @SerializedName(SERIALIZED_NAME_N_AVER)
  @javax.annotation.Nullable
  private List<String> nAver = new ArrayList<>();

  public MdfeSefazSeg() {
  }

  public MdfeSefazSeg infResp(@javax.annotation.Nonnull MdfeSefazInfResp infResp) {
    this.infResp = infResp;
    return this;
  }

  /**
   * Get infResp
   * @return infResp
   */
  @javax.annotation.Nonnull
  public MdfeSefazInfResp getInfResp() {
    return infResp;
  }

  public void setInfResp(@javax.annotation.Nonnull MdfeSefazInfResp infResp) {
    this.infResp = infResp;
  }


  public MdfeSefazSeg infSeg(@javax.annotation.Nullable MdfeSefazInfSeg infSeg) {
    this.infSeg = infSeg;
    return this;
  }

  /**
   * Get infSeg
   * @return infSeg
   */
  @javax.annotation.Nullable
  public MdfeSefazInfSeg getInfSeg() {
    return infSeg;
  }

  public void setInfSeg(@javax.annotation.Nullable MdfeSefazInfSeg infSeg) {
    this.infSeg = infSeg;
  }


  public MdfeSefazSeg nApol(@javax.annotation.Nullable String nApol) {
    this.nApol = nApol;
    return this;
  }

  /**
   * Número da Apólice.  Obrigatório pela lei 11.442/07 (RCTRC).
   * @return nApol
   */
  @javax.annotation.Nullable
  public String getnApol() {
    return nApol;
  }

  public void setnApol(@javax.annotation.Nullable String nApol) {
    this.nApol = nApol;
  }


  public MdfeSefazSeg nAver(@javax.annotation.Nullable List<String> nAver) {
    this.nAver = nAver;
    return this;
  }

  public MdfeSefazSeg addNAverItem(String nAverItem) {
    if (this.nAver == null) {
      this.nAver = new ArrayList<>();
    }
    this.nAver.add(nAverItem);
    return this;
  }

  /**
   * Número da Averbação.  Informar as averbações do seguro.
   * @return nAver
   */
  @javax.annotation.Nullable
  public List<String> getnAver() {
    return nAver;
  }

  public void setnAver(@javax.annotation.Nullable List<String> nAver) {
    this.nAver = nAver;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdfeSefazSeg mdfeSefazSeg = (MdfeSefazSeg) o;
    return Objects.equals(this.infResp, mdfeSefazSeg.infResp) &&
        Objects.equals(this.infSeg, mdfeSefazSeg.infSeg) &&
        Objects.equals(this.nApol, mdfeSefazSeg.nApol) &&
        Objects.equals(this.nAver, mdfeSefazSeg.nAver);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(infResp, infSeg, nApol, nAver);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdfeSefazSeg {\n");
    sb.append("    infResp: ").append(toIndentedString(infResp)).append("\n");
    sb.append("    infSeg: ").append(toIndentedString(infSeg)).append("\n");
    sb.append("    nApol: ").append(toIndentedString(nApol)).append("\n");
    sb.append("    nAver: ").append(toIndentedString(nAver)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("infResp");
    openapiFields.add("infSeg");
    openapiFields.add("nApol");
    openapiFields.add("nAver");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("infResp");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MdfeSefazSeg
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MdfeSefazSeg.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MdfeSefazSeg is not found in the empty JSON string", MdfeSefazSeg.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MdfeSefazSeg.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MdfeSefazSeg` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MdfeSefazSeg.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `infResp`
      MdfeSefazInfResp.validateJsonElement(jsonObj.get("infResp"));
      // validate the optional field `infSeg`
      if (jsonObj.get("infSeg") != null && !jsonObj.get("infSeg").isJsonNull()) {
        MdfeSefazInfSeg.validateJsonElement(jsonObj.get("infSeg"));
      }
      if ((jsonObj.get("nApol") != null && !jsonObj.get("nApol").isJsonNull()) && !jsonObj.get("nApol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nApol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nApol").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("nAver") != null && !jsonObj.get("nAver").isJsonNull() && !jsonObj.get("nAver").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `nAver` to be an array in the JSON string but got `%s`", jsonObj.get("nAver").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MdfeSefazSeg.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MdfeSefazSeg' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MdfeSefazSeg> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MdfeSefazSeg.class));

       return (TypeAdapter<T>) new TypeAdapter<MdfeSefazSeg>() {
           @Override
           public void write(JsonWriter out, MdfeSefazSeg value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MdfeSefazSeg read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MdfeSefazSeg given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MdfeSefazSeg
   * @throws IOException if the JSON string is invalid with respect to MdfeSefazSeg
   */
  public static MdfeSefazSeg fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MdfeSefazSeg.class);
  }

  /**
   * Convert an instance of MdfeSefazSeg to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

