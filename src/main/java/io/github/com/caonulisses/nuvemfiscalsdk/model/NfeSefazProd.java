/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazArma;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazComb;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazDI;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazDetExport;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazGCred;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazInfProdEmb;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazInfProdNFF;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazMed;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazRastro;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazVeicProd;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Dados dos produtos e serviços da NF-e.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazProd {
  public static final String SERIALIZED_NAME_C_PROD = "cProd";
  @SerializedName(SERIALIZED_NAME_C_PROD)
  @javax.annotation.Nullable
  private String cProd;

  public static final String SERIALIZED_NAME_C_E_A_N = "cEAN";
  @SerializedName(SERIALIZED_NAME_C_E_A_N)
  @javax.annotation.Nullable
  private String cEAN;

  public static final String SERIALIZED_NAME_C_BARRA = "cBarra";
  @SerializedName(SERIALIZED_NAME_C_BARRA)
  @javax.annotation.Nullable
  private String cBarra;

  public static final String SERIALIZED_NAME_X_PROD = "xProd";
  @SerializedName(SERIALIZED_NAME_X_PROD)
  @javax.annotation.Nullable
  private String xProd;

  public static final String SERIALIZED_NAME_N_C_M = "NCM";
  @SerializedName(SERIALIZED_NAME_N_C_M)
  @javax.annotation.Nullable
  private String NCM;

  public static final String SERIALIZED_NAME_N_V_E = "NVE";
  @SerializedName(SERIALIZED_NAME_N_V_E)
  @javax.annotation.Nullable
  private List<String> NVE = new ArrayList<>();

  public static final String SERIALIZED_NAME_C_E_S_T = "CEST";
  @SerializedName(SERIALIZED_NAME_C_E_S_T)
  @javax.annotation.Nullable
  private String CEST;

  public static final String SERIALIZED_NAME_IND_ESCALA = "indEscala";
  @SerializedName(SERIALIZED_NAME_IND_ESCALA)
  @javax.annotation.Nullable
  private String indEscala;

  public static final String SERIALIZED_NAME_CN_P_J_FAB = "CNPJFab";
  @SerializedName(SERIALIZED_NAME_CN_P_J_FAB)
  @javax.annotation.Nullable
  private String cnPJFab;

  public static final String SERIALIZED_NAME_C_BENEF = "cBenef";
  @SerializedName(SERIALIZED_NAME_C_BENEF)
  @javax.annotation.Nullable
  private String cBenef;

  public static final String SERIALIZED_NAME_G_CRED = "gCred";
  @SerializedName(SERIALIZED_NAME_G_CRED)
  @javax.annotation.Nullable
  private List<NfeSefazGCred> gCred = new ArrayList<>();

  public static final String SERIALIZED_NAME_E_X_T_I_P_I = "EXTIPI";
  @SerializedName(SERIALIZED_NAME_E_X_T_I_P_I)
  @javax.annotation.Nullable
  private String EXTIPI;

  public static final String SERIALIZED_NAME_C_F_O_P = "CFOP";
  @SerializedName(SERIALIZED_NAME_C_F_O_P)
  @javax.annotation.Nullable
  private String CFOP;

  public static final String SERIALIZED_NAME_U_COM = "uCom";
  @SerializedName(SERIALIZED_NAME_U_COM)
  @javax.annotation.Nullable
  private String uCom;

  public static final String SERIALIZED_NAME_Q_COM = "qCom";
  @SerializedName(SERIALIZED_NAME_Q_COM)
  @javax.annotation.Nullable
  private BigDecimal qCom;

  public static final String SERIALIZED_NAME_V_UN_COM = "vUnCom";
  @SerializedName(SERIALIZED_NAME_V_UN_COM)
  @javax.annotation.Nullable
  private BigDecimal vUnCom;

  public static final String SERIALIZED_NAME_V_PROD = "vProd";
  @SerializedName(SERIALIZED_NAME_V_PROD)
  @javax.annotation.Nullable
  private BigDecimal vProd;

  public static final String SERIALIZED_NAME_C_E_A_N_TRIB = "cEANTrib";
  @SerializedName(SERIALIZED_NAME_C_E_A_N_TRIB)
  @javax.annotation.Nullable
  private String cEANTrib;

  public static final String SERIALIZED_NAME_C_BARRA_TRIB = "cBarraTrib";
  @SerializedName(SERIALIZED_NAME_C_BARRA_TRIB)
  @javax.annotation.Nullable
  private String cBarraTrib;

  public static final String SERIALIZED_NAME_U_TRIB = "uTrib";
  @SerializedName(SERIALIZED_NAME_U_TRIB)
  @javax.annotation.Nullable
  private String uTrib;

  public static final String SERIALIZED_NAME_Q_TRIB = "qTrib";
  @SerializedName(SERIALIZED_NAME_Q_TRIB)
  @javax.annotation.Nullable
  private BigDecimal qTrib;

  public static final String SERIALIZED_NAME_V_UN_TRIB = "vUnTrib";
  @SerializedName(SERIALIZED_NAME_V_UN_TRIB)
  @javax.annotation.Nullable
  private BigDecimal vUnTrib;

  public static final String SERIALIZED_NAME_V_FRETE = "vFrete";
  @SerializedName(SERIALIZED_NAME_V_FRETE)
  @javax.annotation.Nullable
  private BigDecimal vFrete;

  public static final String SERIALIZED_NAME_V_SEG = "vSeg";
  @SerializedName(SERIALIZED_NAME_V_SEG)
  @javax.annotation.Nullable
  private BigDecimal vSeg;

  public static final String SERIALIZED_NAME_V_DESC = "vDesc";
  @SerializedName(SERIALIZED_NAME_V_DESC)
  @javax.annotation.Nullable
  private BigDecimal vDesc;

  public static final String SERIALIZED_NAME_V_OUTRO = "vOutro";
  @SerializedName(SERIALIZED_NAME_V_OUTRO)
  @javax.annotation.Nullable
  private BigDecimal vOutro;

  public static final String SERIALIZED_NAME_IND_TOT = "indTot";
  @SerializedName(SERIALIZED_NAME_IND_TOT)
  @javax.annotation.Nullable
  private Integer indTot;

  public static final String SERIALIZED_NAME_D_I = "DI";
  @SerializedName(SERIALIZED_NAME_D_I)
  @javax.annotation.Nullable
  private List<NfeSefazDI> DI = new ArrayList<>();

  public static final String SERIALIZED_NAME_DET_EXPORT = "detExport";
  @SerializedName(SERIALIZED_NAME_DET_EXPORT)
  @javax.annotation.Nullable
  private List<NfeSefazDetExport> detExport = new ArrayList<>();

  public static final String SERIALIZED_NAME_X_PED = "xPed";
  @SerializedName(SERIALIZED_NAME_X_PED)
  @javax.annotation.Nullable
  private String xPed;

  public static final String SERIALIZED_NAME_N_ITEM_PED = "nItemPed";
  @SerializedName(SERIALIZED_NAME_N_ITEM_PED)
  @javax.annotation.Nullable
  private Integer nItemPed;

  public static final String SERIALIZED_NAME_N_F_C_I = "nFCI";
  @SerializedName(SERIALIZED_NAME_N_F_C_I)
  @javax.annotation.Nullable
  private String nFCI;

  public static final String SERIALIZED_NAME_RASTRO = "rastro";
  @SerializedName(SERIALIZED_NAME_RASTRO)
  @javax.annotation.Nullable
  private List<NfeSefazRastro> rastro = new ArrayList<>();

  public static final String SERIALIZED_NAME_INF_PROD_N_F_F = "infProdNFF";
  @SerializedName(SERIALIZED_NAME_INF_PROD_N_F_F)
  @javax.annotation.Nullable
  private NfeSefazInfProdNFF infProdNFF;

  public static final String SERIALIZED_NAME_INF_PROD_EMB = "infProdEmb";
  @SerializedName(SERIALIZED_NAME_INF_PROD_EMB)
  @javax.annotation.Nullable
  private NfeSefazInfProdEmb infProdEmb;

  public static final String SERIALIZED_NAME_VEIC_PROD = "veicProd";
  @SerializedName(SERIALIZED_NAME_VEIC_PROD)
  @javax.annotation.Nullable
  private NfeSefazVeicProd veicProd;

  public static final String SERIALIZED_NAME_MED = "med";
  @SerializedName(SERIALIZED_NAME_MED)
  @javax.annotation.Nullable
  private NfeSefazMed med;

  public static final String SERIALIZED_NAME_ARMA = "arma";
  @SerializedName(SERIALIZED_NAME_ARMA)
  @javax.annotation.Nullable
  private List<NfeSefazArma> arma = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMB = "comb";
  @SerializedName(SERIALIZED_NAME_COMB)
  @javax.annotation.Nullable
  private NfeSefazComb comb;

  public static final String SERIALIZED_NAME_N_R_E_C_O_P_I = "nRECOPI";
  @SerializedName(SERIALIZED_NAME_N_R_E_C_O_P_I)
  @javax.annotation.Nullable
  private String nRECOPI;

  public NfeSefazProd() {
  }

  public NfeSefazProd cProd(@javax.annotation.Nullable String cProd) {
    this.cProd = cProd;
    return this;
  }

  /**
   * Código do produto ou serviço. Preencher com CFOP caso se trate de itens não relacionados com mercadorias/produto e que o contribuinte não possua codificação própria  Formato ”CFOP9999”.
   * @return cProd
   */
  @javax.annotation.Nullable
  public String getcProd() {
    return cProd;
  }

  public void setcProd(@javax.annotation.Nullable String cProd) {
    this.cProd = cProd;
  }


  public NfeSefazProd cEAN(@javax.annotation.Nullable String cEAN) {
    this.cEAN = cEAN;
    return this;
  }

  /**
   * GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras.
   * @return cEAN
   */
  @javax.annotation.Nullable
  public String getcEAN() {
    return cEAN;
  }

  public void setcEAN(@javax.annotation.Nullable String cEAN) {
    this.cEAN = cEAN;
  }


  public NfeSefazProd cBarra(@javax.annotation.Nullable String cBarra) {
    this.cBarra = cBarra;
    return this;
  }

  /**
   * Codigo de barras diferente do padrão GTIN.
   * @return cBarra
   */
  @javax.annotation.Nullable
  public String getcBarra() {
    return cBarra;
  }

  public void setcBarra(@javax.annotation.Nullable String cBarra) {
    this.cBarra = cBarra;
  }


  public NfeSefazProd xProd(@javax.annotation.Nullable String xProd) {
    this.xProd = xProd;
    return this;
  }

  /**
   * Descrição do produto ou serviço.
   * @return xProd
   */
  @javax.annotation.Nullable
  public String getxProd() {
    return xProd;
  }

  public void setxProd(@javax.annotation.Nullable String xProd) {
    this.xProd = xProd;
  }


  public NfeSefazProd NCM(@javax.annotation.Nullable String NCM) {
    this.NCM = NCM;
    return this;
  }

  /**
   * Código NCM (8 posições), será permitida a informação do gênero (posição do capítulo do NCM) quando a operação não for de comércio exterior (importação/exportação) ou o produto não seja tributado pelo IPI. Em caso de item de serviço ou item que não tenham produto (Ex. transferência de crédito, crédito do ativo imobilizado, etc.), informar o código 00 (zeros) (v2.0).
   * @return NCM
   */
  @javax.annotation.Nullable
  public String getNCM() {
    return NCM;
  }

  public void setNCM(@javax.annotation.Nullable String NCM) {
    this.NCM = NCM;
  }


  public NfeSefazProd NVE(@javax.annotation.Nullable List<String> NVE) {
    this.NVE = NVE;
    return this;
  }

  public NfeSefazProd addNVEItem(String NVEItem) {
    if (this.NVE == null) {
      this.NVE = new ArrayList<>();
    }
    this.NVE.add(NVEItem);
    return this;
  }

  /**
   * Nomenclatura de Valor aduaneio e Estatístico.
   * @return NVE
   */
  @javax.annotation.Nullable
  public List<String> getNVE() {
    return NVE;
  }

  public void setNVE(@javax.annotation.Nullable List<String> NVE) {
    this.NVE = NVE;
  }


  public NfeSefazProd CEST(@javax.annotation.Nullable String CEST) {
    this.CEST = CEST;
    return this;
  }

  /**
   * Codigo especificador da Substuicao Tributaria - CEST, que identifica a mercadoria sujeita aos regimes de  substituicao tributária e de antecipação do recolhimento  do imposto.
   * @return CEST
   */
  @javax.annotation.Nullable
  public String getCEST() {
    return CEST;
  }

  public void setCEST(@javax.annotation.Nullable String CEST) {
    this.CEST = CEST;
  }


  public NfeSefazProd indEscala(@javax.annotation.Nullable String indEscala) {
    this.indEscala = indEscala;
    return this;
  }

  /**
   * Get indEscala
   * @return indEscala
   */
  @javax.annotation.Nullable
  public String getIndEscala() {
    return indEscala;
  }

  public void setIndEscala(@javax.annotation.Nullable String indEscala) {
    this.indEscala = indEscala;
  }


  public NfeSefazProd cnPJFab(@javax.annotation.Nullable String cnPJFab) {
    this.cnPJFab = cnPJFab;
    return this;
  }

  /**
   * CNPJ do Fabricante da Mercadoria, obrigatório para produto em escala NÃO relevante.
   * @return cnPJFab
   */
  @javax.annotation.Nullable
  public String getCnPJFab() {
    return cnPJFab;
  }

  public void setCnPJFab(@javax.annotation.Nullable String cnPJFab) {
    this.cnPJFab = cnPJFab;
  }


  public NfeSefazProd cBenef(@javax.annotation.Nullable String cBenef) {
    this.cBenef = cBenef;
    return this;
  }

  /**
   * Get cBenef
   * @return cBenef
   */
  @javax.annotation.Nullable
  public String getcBenef() {
    return cBenef;
  }

  public void setcBenef(@javax.annotation.Nullable String cBenef) {
    this.cBenef = cBenef;
  }


  public NfeSefazProd gCred(@javax.annotation.Nullable List<NfeSefazGCred> gCred) {
    this.gCred = gCred;
    return this;
  }

  public NfeSefazProd addGCredItem(NfeSefazGCred gCredItem) {
    if (this.gCred == null) {
      this.gCred = new ArrayList<>();
    }
    this.gCred.add(gCredItem);
    return this;
  }

  /**
   * Get gCred
   * @return gCred
   */
  @javax.annotation.Nullable
  public List<NfeSefazGCred> getgCred() {
    return gCred;
  }

  public void setgCred(@javax.annotation.Nullable List<NfeSefazGCred> gCred) {
    this.gCred = gCred;
  }


  public NfeSefazProd EXTIPI(@javax.annotation.Nullable String EXTIPI) {
    this.EXTIPI = EXTIPI;
    return this;
  }

  /**
   * Código EX TIPI (3 posições).
   * @return EXTIPI
   */
  @javax.annotation.Nullable
  public String getEXTIPI() {
    return EXTIPI;
  }

  public void setEXTIPI(@javax.annotation.Nullable String EXTIPI) {
    this.EXTIPI = EXTIPI;
  }


  public NfeSefazProd CFOP(@javax.annotation.Nullable String CFOP) {
    this.CFOP = CFOP;
    return this;
  }

  /**
   * Cfop.
   * @return CFOP
   */
  @javax.annotation.Nullable
  public String getCFOP() {
    return CFOP;
  }

  public void setCFOP(@javax.annotation.Nullable String CFOP) {
    this.CFOP = CFOP;
  }


  public NfeSefazProd uCom(@javax.annotation.Nullable String uCom) {
    this.uCom = uCom;
    return this;
  }

  /**
   * Unidade comercial.
   * @return uCom
   */
  @javax.annotation.Nullable
  public String getuCom() {
    return uCom;
  }

  public void setuCom(@javax.annotation.Nullable String uCom) {
    this.uCom = uCom;
  }


  public NfeSefazProd qCom(@javax.annotation.Nullable BigDecimal qCom) {
    this.qCom = qCom;
    return this;
  }

  /**
   * Quantidade Comercial  do produto, alterado para aceitar de 0 a 4 casas decimais e 11 inteiros.
   * minimum: 0
   * @return qCom
   */
  @javax.annotation.Nullable
  public BigDecimal getqCom() {
    return qCom;
  }

  public void setqCom(@javax.annotation.Nullable BigDecimal qCom) {
    this.qCom = qCom;
  }


  public NfeSefazProd vUnCom(@javax.annotation.Nullable BigDecimal vUnCom) {
    this.vUnCom = vUnCom;
    return this;
  }

  /**
   * Valor unitário de comercialização  - alterado para aceitar 0 a 10 casas decimais e 11 inteiros.
   * minimum: 0
   * @return vUnCom
   */
  @javax.annotation.Nullable
  public BigDecimal getvUnCom() {
    return vUnCom;
  }

  public void setvUnCom(@javax.annotation.Nullable BigDecimal vUnCom) {
    this.vUnCom = vUnCom;
  }


  public NfeSefazProd vProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
    return this;
  }

  /**
   * Valor bruto do produto ou serviço.
   * minimum: 0
   * @return vProd
   */
  @javax.annotation.Nullable
  public BigDecimal getvProd() {
    return vProd;
  }

  public void setvProd(@javax.annotation.Nullable BigDecimal vProd) {
    this.vProd = vProd;
  }


  public NfeSefazProd cEANTrib(@javax.annotation.Nullable String cEANTrib) {
    this.cEANTrib = cEANTrib;
    return this;
  }

  /**
   * GTIN (Global Trade Item Number) da unidade tributável, antigo código EAN ou código de barras.
   * @return cEANTrib
   */
  @javax.annotation.Nullable
  public String getcEANTrib() {
    return cEANTrib;
  }

  public void setcEANTrib(@javax.annotation.Nullable String cEANTrib) {
    this.cEANTrib = cEANTrib;
  }


  public NfeSefazProd cBarraTrib(@javax.annotation.Nullable String cBarraTrib) {
    this.cBarraTrib = cBarraTrib;
    return this;
  }

  /**
   * Código de barras da unidade tributável diferente do padrão GTIN.
   * @return cBarraTrib
   */
  @javax.annotation.Nullable
  public String getcBarraTrib() {
    return cBarraTrib;
  }

  public void setcBarraTrib(@javax.annotation.Nullable String cBarraTrib) {
    this.cBarraTrib = cBarraTrib;
  }


  public NfeSefazProd uTrib(@javax.annotation.Nullable String uTrib) {
    this.uTrib = uTrib;
    return this;
  }

  /**
   * Unidade Tributável.
   * @return uTrib
   */
  @javax.annotation.Nullable
  public String getuTrib() {
    return uTrib;
  }

  public void setuTrib(@javax.annotation.Nullable String uTrib) {
    this.uTrib = uTrib;
  }


  public NfeSefazProd qTrib(@javax.annotation.Nullable BigDecimal qTrib) {
    this.qTrib = qTrib;
    return this;
  }

  /**
   * Quantidade Tributável - alterado para aceitar de 0 a 4 casas decimais e 11 inteiros.
   * minimum: 0
   * @return qTrib
   */
  @javax.annotation.Nullable
  public BigDecimal getqTrib() {
    return qTrib;
  }

  public void setqTrib(@javax.annotation.Nullable BigDecimal qTrib) {
    this.qTrib = qTrib;
  }


  public NfeSefazProd vUnTrib(@javax.annotation.Nullable BigDecimal vUnTrib) {
    this.vUnTrib = vUnTrib;
    return this;
  }

  /**
   * Valor unitário de tributação - - alterado para aceitar 0 a 10 casas decimais e 11 inteiros.
   * minimum: 0
   * @return vUnTrib
   */
  @javax.annotation.Nullable
  public BigDecimal getvUnTrib() {
    return vUnTrib;
  }

  public void setvUnTrib(@javax.annotation.Nullable BigDecimal vUnTrib) {
    this.vUnTrib = vUnTrib;
  }


  public NfeSefazProd vFrete(@javax.annotation.Nullable BigDecimal vFrete) {
    this.vFrete = vFrete;
    return this;
  }

  /**
   * Valor Total do Frete.
   * minimum: 0
   * @return vFrete
   */
  @javax.annotation.Nullable
  public BigDecimal getvFrete() {
    return vFrete;
  }

  public void setvFrete(@javax.annotation.Nullable BigDecimal vFrete) {
    this.vFrete = vFrete;
  }


  public NfeSefazProd vSeg(@javax.annotation.Nullable BigDecimal vSeg) {
    this.vSeg = vSeg;
    return this;
  }

  /**
   * Valor Total do Seguro.
   * minimum: 0
   * @return vSeg
   */
  @javax.annotation.Nullable
  public BigDecimal getvSeg() {
    return vSeg;
  }

  public void setvSeg(@javax.annotation.Nullable BigDecimal vSeg) {
    this.vSeg = vSeg;
  }


  public NfeSefazProd vDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
    return this;
  }

  /**
   * Valor do Desconto.
   * minimum: 0
   * @return vDesc
   */
  @javax.annotation.Nullable
  public BigDecimal getvDesc() {
    return vDesc;
  }

  public void setvDesc(@javax.annotation.Nullable BigDecimal vDesc) {
    this.vDesc = vDesc;
  }


  public NfeSefazProd vOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
    return this;
  }

  /**
   * Outras despesas acessórias.
   * minimum: 0
   * @return vOutro
   */
  @javax.annotation.Nullable
  public BigDecimal getvOutro() {
    return vOutro;
  }

  public void setvOutro(@javax.annotation.Nullable BigDecimal vOutro) {
    this.vOutro = vOutro;
  }


  public NfeSefazProd indTot(@javax.annotation.Nullable Integer indTot) {
    this.indTot = indTot;
    return this;
  }

  /**
   * Este campo deverá ser preenchido com:  * 0 - o valor do item (vProd) não compõe o valor total da NF-e (vProd)  * 1 - o valor do item (vProd) compõe o valor total da NF-e (vProd)
   * @return indTot
   */
  @javax.annotation.Nullable
  public Integer getIndTot() {
    return indTot;
  }

  public void setIndTot(@javax.annotation.Nullable Integer indTot) {
    this.indTot = indTot;
  }


  public NfeSefazProd DI(@javax.annotation.Nullable List<NfeSefazDI> DI) {
    this.DI = DI;
    return this;
  }

  public NfeSefazProd addDIItem(NfeSefazDI DIItem) {
    if (this.DI == null) {
      this.DI = new ArrayList<>();
    }
    this.DI.add(DIItem);
    return this;
  }

  /**
   * Get DI
   * @return DI
   */
  @javax.annotation.Nullable
  public List<NfeSefazDI> getDI() {
    return DI;
  }

  public void setDI(@javax.annotation.Nullable List<NfeSefazDI> DI) {
    this.DI = DI;
  }


  public NfeSefazProd detExport(@javax.annotation.Nullable List<NfeSefazDetExport> detExport) {
    this.detExport = detExport;
    return this;
  }

  public NfeSefazProd addDetExportItem(NfeSefazDetExport detExportItem) {
    if (this.detExport == null) {
      this.detExport = new ArrayList<>();
    }
    this.detExport.add(detExportItem);
    return this;
  }

  /**
   * Get detExport
   * @return detExport
   */
  @javax.annotation.Nullable
  public List<NfeSefazDetExport> getDetExport() {
    return detExport;
  }

  public void setDetExport(@javax.annotation.Nullable List<NfeSefazDetExport> detExport) {
    this.detExport = detExport;
  }


  public NfeSefazProd xPed(@javax.annotation.Nullable String xPed) {
    this.xPed = xPed;
    return this;
  }

  /**
   * pedido de compra - Informação de interesse do emissor para controle do B2B.
   * @return xPed
   */
  @javax.annotation.Nullable
  public String getxPed() {
    return xPed;
  }

  public void setxPed(@javax.annotation.Nullable String xPed) {
    this.xPed = xPed;
  }


  public NfeSefazProd nItemPed(@javax.annotation.Nullable Integer nItemPed) {
    this.nItemPed = nItemPed;
    return this;
  }

  /**
   * Número do Item do Pedido de Compra - Identificação do número do item do pedido de Compra.
   * minimum: 0
   * maximum: 999999
   * @return nItemPed
   */
  @javax.annotation.Nullable
  public Integer getnItemPed() {
    return nItemPed;
  }

  public void setnItemPed(@javax.annotation.Nullable Integer nItemPed) {
    this.nItemPed = nItemPed;
  }


  public NfeSefazProd nFCI(@javax.annotation.Nullable String nFCI) {
    this.nFCI = nFCI;
    return this;
  }

  /**
   * Número de controle da FCI - Ficha de Conteúdo de Importação.
   * @return nFCI
   */
  @javax.annotation.Nullable
  public String getnFCI() {
    return nFCI;
  }

  public void setnFCI(@javax.annotation.Nullable String nFCI) {
    this.nFCI = nFCI;
  }


  public NfeSefazProd rastro(@javax.annotation.Nullable List<NfeSefazRastro> rastro) {
    this.rastro = rastro;
    return this;
  }

  public NfeSefazProd addRastroItem(NfeSefazRastro rastroItem) {
    if (this.rastro == null) {
      this.rastro = new ArrayList<>();
    }
    this.rastro.add(rastroItem);
    return this;
  }

  /**
   * Get rastro
   * @return rastro
   */
  @javax.annotation.Nullable
  public List<NfeSefazRastro> getRastro() {
    return rastro;
  }

  public void setRastro(@javax.annotation.Nullable List<NfeSefazRastro> rastro) {
    this.rastro = rastro;
  }


  public NfeSefazProd infProdNFF(@javax.annotation.Nullable NfeSefazInfProdNFF infProdNFF) {
    this.infProdNFF = infProdNFF;
    return this;
  }

  /**
   * Get infProdNFF
   * @return infProdNFF
   */
  @javax.annotation.Nullable
  public NfeSefazInfProdNFF getInfProdNFF() {
    return infProdNFF;
  }

  public void setInfProdNFF(@javax.annotation.Nullable NfeSefazInfProdNFF infProdNFF) {
    this.infProdNFF = infProdNFF;
  }


  public NfeSefazProd infProdEmb(@javax.annotation.Nullable NfeSefazInfProdEmb infProdEmb) {
    this.infProdEmb = infProdEmb;
    return this;
  }

  /**
   * Get infProdEmb
   * @return infProdEmb
   */
  @javax.annotation.Nullable
  public NfeSefazInfProdEmb getInfProdEmb() {
    return infProdEmb;
  }

  public void setInfProdEmb(@javax.annotation.Nullable NfeSefazInfProdEmb infProdEmb) {
    this.infProdEmb = infProdEmb;
  }


  public NfeSefazProd veicProd(@javax.annotation.Nullable NfeSefazVeicProd veicProd) {
    this.veicProd = veicProd;
    return this;
  }

  /**
   * Get veicProd
   * @return veicProd
   */
  @javax.annotation.Nullable
  public NfeSefazVeicProd getVeicProd() {
    return veicProd;
  }

  public void setVeicProd(@javax.annotation.Nullable NfeSefazVeicProd veicProd) {
    this.veicProd = veicProd;
  }


  public NfeSefazProd med(@javax.annotation.Nullable NfeSefazMed med) {
    this.med = med;
    return this;
  }

  /**
   * Get med
   * @return med
   */
  @javax.annotation.Nullable
  public NfeSefazMed getMed() {
    return med;
  }

  public void setMed(@javax.annotation.Nullable NfeSefazMed med) {
    this.med = med;
  }


  public NfeSefazProd arma(@javax.annotation.Nullable List<NfeSefazArma> arma) {
    this.arma = arma;
    return this;
  }

  public NfeSefazProd addArmaItem(NfeSefazArma armaItem) {
    if (this.arma == null) {
      this.arma = new ArrayList<>();
    }
    this.arma.add(armaItem);
    return this;
  }

  /**
   * Get arma
   * @return arma
   */
  @javax.annotation.Nullable
  public List<NfeSefazArma> getArma() {
    return arma;
  }

  public void setArma(@javax.annotation.Nullable List<NfeSefazArma> arma) {
    this.arma = arma;
  }


  public NfeSefazProd comb(@javax.annotation.Nullable NfeSefazComb comb) {
    this.comb = comb;
    return this;
  }

  /**
   * Get comb
   * @return comb
   */
  @javax.annotation.Nullable
  public NfeSefazComb getComb() {
    return comb;
  }

  public void setComb(@javax.annotation.Nullable NfeSefazComb comb) {
    this.comb = comb;
  }


  public NfeSefazProd nRECOPI(@javax.annotation.Nullable String nRECOPI) {
    this.nRECOPI = nRECOPI;
    return this;
  }

  /**
   * Número do RECOPI.
   * @return nRECOPI
   */
  @javax.annotation.Nullable
  public String getnRECOPI() {
    return nRECOPI;
  }

  public void setnRECOPI(@javax.annotation.Nullable String nRECOPI) {
    this.nRECOPI = nRECOPI;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazProd nfeSefazProd = (NfeSefazProd) o;
    return Objects.equals(this.cProd, nfeSefazProd.cProd) &&
        Objects.equals(this.cEAN, nfeSefazProd.cEAN) &&
        Objects.equals(this.cBarra, nfeSefazProd.cBarra) &&
        Objects.equals(this.xProd, nfeSefazProd.xProd) &&
        Objects.equals(this.NCM, nfeSefazProd.NCM) &&
        Objects.equals(this.NVE, nfeSefazProd.NVE) &&
        Objects.equals(this.CEST, nfeSefazProd.CEST) &&
        Objects.equals(this.indEscala, nfeSefazProd.indEscala) &&
        Objects.equals(this.cnPJFab, nfeSefazProd.cnPJFab) &&
        Objects.equals(this.cBenef, nfeSefazProd.cBenef) &&
        Objects.equals(this.gCred, nfeSefazProd.gCred) &&
        Objects.equals(this.EXTIPI, nfeSefazProd.EXTIPI) &&
        Objects.equals(this.CFOP, nfeSefazProd.CFOP) &&
        Objects.equals(this.uCom, nfeSefazProd.uCom) &&
        Objects.equals(this.qCom, nfeSefazProd.qCom) &&
        Objects.equals(this.vUnCom, nfeSefazProd.vUnCom) &&
        Objects.equals(this.vProd, nfeSefazProd.vProd) &&
        Objects.equals(this.cEANTrib, nfeSefazProd.cEANTrib) &&
        Objects.equals(this.cBarraTrib, nfeSefazProd.cBarraTrib) &&
        Objects.equals(this.uTrib, nfeSefazProd.uTrib) &&
        Objects.equals(this.qTrib, nfeSefazProd.qTrib) &&
        Objects.equals(this.vUnTrib, nfeSefazProd.vUnTrib) &&
        Objects.equals(this.vFrete, nfeSefazProd.vFrete) &&
        Objects.equals(this.vSeg, nfeSefazProd.vSeg) &&
        Objects.equals(this.vDesc, nfeSefazProd.vDesc) &&
        Objects.equals(this.vOutro, nfeSefazProd.vOutro) &&
        Objects.equals(this.indTot, nfeSefazProd.indTot) &&
        Objects.equals(this.DI, nfeSefazProd.DI) &&
        Objects.equals(this.detExport, nfeSefazProd.detExport) &&
        Objects.equals(this.xPed, nfeSefazProd.xPed) &&
        Objects.equals(this.nItemPed, nfeSefazProd.nItemPed) &&
        Objects.equals(this.nFCI, nfeSefazProd.nFCI) &&
        Objects.equals(this.rastro, nfeSefazProd.rastro) &&
        Objects.equals(this.infProdNFF, nfeSefazProd.infProdNFF) &&
        Objects.equals(this.infProdEmb, nfeSefazProd.infProdEmb) &&
        Objects.equals(this.veicProd, nfeSefazProd.veicProd) &&
        Objects.equals(this.med, nfeSefazProd.med) &&
        Objects.equals(this.arma, nfeSefazProd.arma) &&
        Objects.equals(this.comb, nfeSefazProd.comb) &&
        Objects.equals(this.nRECOPI, nfeSefazProd.nRECOPI);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cProd, cEAN, cBarra, xProd, NCM, NVE, CEST, indEscala, cnPJFab, cBenef, gCred, EXTIPI, CFOP, uCom, qCom, vUnCom, vProd, cEANTrib, cBarraTrib, uTrib, qTrib, vUnTrib, vFrete, vSeg, vDesc, vOutro, indTot, DI, detExport, xPed, nItemPed, nFCI, rastro, infProdNFF, infProdEmb, veicProd, med, arma, comb, nRECOPI);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazProd {\n");
    sb.append("    cProd: ").append(toIndentedString(cProd)).append("\n");
    sb.append("    cEAN: ").append(toIndentedString(cEAN)).append("\n");
    sb.append("    cBarra: ").append(toIndentedString(cBarra)).append("\n");
    sb.append("    xProd: ").append(toIndentedString(xProd)).append("\n");
    sb.append("    NCM: ").append(toIndentedString(NCM)).append("\n");
    sb.append("    NVE: ").append(toIndentedString(NVE)).append("\n");
    sb.append("    CEST: ").append(toIndentedString(CEST)).append("\n");
    sb.append("    indEscala: ").append(toIndentedString(indEscala)).append("\n");
    sb.append("    cnPJFab: ").append(toIndentedString(cnPJFab)).append("\n");
    sb.append("    cBenef: ").append(toIndentedString(cBenef)).append("\n");
    sb.append("    gCred: ").append(toIndentedString(gCred)).append("\n");
    sb.append("    EXTIPI: ").append(toIndentedString(EXTIPI)).append("\n");
    sb.append("    CFOP: ").append(toIndentedString(CFOP)).append("\n");
    sb.append("    uCom: ").append(toIndentedString(uCom)).append("\n");
    sb.append("    qCom: ").append(toIndentedString(qCom)).append("\n");
    sb.append("    vUnCom: ").append(toIndentedString(vUnCom)).append("\n");
    sb.append("    vProd: ").append(toIndentedString(vProd)).append("\n");
    sb.append("    cEANTrib: ").append(toIndentedString(cEANTrib)).append("\n");
    sb.append("    cBarraTrib: ").append(toIndentedString(cBarraTrib)).append("\n");
    sb.append("    uTrib: ").append(toIndentedString(uTrib)).append("\n");
    sb.append("    qTrib: ").append(toIndentedString(qTrib)).append("\n");
    sb.append("    vUnTrib: ").append(toIndentedString(vUnTrib)).append("\n");
    sb.append("    vFrete: ").append(toIndentedString(vFrete)).append("\n");
    sb.append("    vSeg: ").append(toIndentedString(vSeg)).append("\n");
    sb.append("    vDesc: ").append(toIndentedString(vDesc)).append("\n");
    sb.append("    vOutro: ").append(toIndentedString(vOutro)).append("\n");
    sb.append("    indTot: ").append(toIndentedString(indTot)).append("\n");
    sb.append("    DI: ").append(toIndentedString(DI)).append("\n");
    sb.append("    detExport: ").append(toIndentedString(detExport)).append("\n");
    sb.append("    xPed: ").append(toIndentedString(xPed)).append("\n");
    sb.append("    nItemPed: ").append(toIndentedString(nItemPed)).append("\n");
    sb.append("    nFCI: ").append(toIndentedString(nFCI)).append("\n");
    sb.append("    rastro: ").append(toIndentedString(rastro)).append("\n");
    sb.append("    infProdNFF: ").append(toIndentedString(infProdNFF)).append("\n");
    sb.append("    infProdEmb: ").append(toIndentedString(infProdEmb)).append("\n");
    sb.append("    veicProd: ").append(toIndentedString(veicProd)).append("\n");
    sb.append("    med: ").append(toIndentedString(med)).append("\n");
    sb.append("    arma: ").append(toIndentedString(arma)).append("\n");
    sb.append("    comb: ").append(toIndentedString(comb)).append("\n");
    sb.append("    nRECOPI: ").append(toIndentedString(nRECOPI)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cProd");
    openapiFields.add("cEAN");
    openapiFields.add("cBarra");
    openapiFields.add("xProd");
    openapiFields.add("NCM");
    openapiFields.add("NVE");
    openapiFields.add("CEST");
    openapiFields.add("indEscala");
    openapiFields.add("CNPJFab");
    openapiFields.add("cBenef");
    openapiFields.add("gCred");
    openapiFields.add("EXTIPI");
    openapiFields.add("CFOP");
    openapiFields.add("uCom");
    openapiFields.add("qCom");
    openapiFields.add("vUnCom");
    openapiFields.add("vProd");
    openapiFields.add("cEANTrib");
    openapiFields.add("cBarraTrib");
    openapiFields.add("uTrib");
    openapiFields.add("qTrib");
    openapiFields.add("vUnTrib");
    openapiFields.add("vFrete");
    openapiFields.add("vSeg");
    openapiFields.add("vDesc");
    openapiFields.add("vOutro");
    openapiFields.add("indTot");
    openapiFields.add("DI");
    openapiFields.add("detExport");
    openapiFields.add("xPed");
    openapiFields.add("nItemPed");
    openapiFields.add("nFCI");
    openapiFields.add("rastro");
    openapiFields.add("infProdNFF");
    openapiFields.add("infProdEmb");
    openapiFields.add("veicProd");
    openapiFields.add("med");
    openapiFields.add("arma");
    openapiFields.add("comb");
    openapiFields.add("nRECOPI");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cProd");
    openapiRequiredFields.add("cEAN");
    openapiRequiredFields.add("xProd");
    openapiRequiredFields.add("NCM");
    openapiRequiredFields.add("CFOP");
    openapiRequiredFields.add("uCom");
    openapiRequiredFields.add("qCom");
    openapiRequiredFields.add("vUnCom");
    openapiRequiredFields.add("vProd");
    openapiRequiredFields.add("cEANTrib");
    openapiRequiredFields.add("uTrib");
    openapiRequiredFields.add("qTrib");
    openapiRequiredFields.add("vUnTrib");
    openapiRequiredFields.add("indTot");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazProd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazProd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazProd is not found in the empty JSON string", NfeSefazProd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazProd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazProd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazProd.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cProd") != null && !jsonObj.get("cProd").isJsonNull()) && !jsonObj.get("cProd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cProd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cProd").toString()));
      }
      if ((jsonObj.get("cEAN") != null && !jsonObj.get("cEAN").isJsonNull()) && !jsonObj.get("cEAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cEAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cEAN").toString()));
      }
      if ((jsonObj.get("cBarra") != null && !jsonObj.get("cBarra").isJsonNull()) && !jsonObj.get("cBarra").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cBarra` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cBarra").toString()));
      }
      if ((jsonObj.get("xProd") != null && !jsonObj.get("xProd").isJsonNull()) && !jsonObj.get("xProd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xProd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xProd").toString()));
      }
      if ((jsonObj.get("NCM") != null && !jsonObj.get("NCM").isJsonNull()) && !jsonObj.get("NCM").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NCM` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NCM").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("NVE") != null && !jsonObj.get("NVE").isJsonNull() && !jsonObj.get("NVE").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `NVE` to be an array in the JSON string but got `%s`", jsonObj.get("NVE").toString()));
      }
      if ((jsonObj.get("CEST") != null && !jsonObj.get("CEST").isJsonNull()) && !jsonObj.get("CEST").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CEST` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CEST").toString()));
      }
      if ((jsonObj.get("indEscala") != null && !jsonObj.get("indEscala").isJsonNull()) && !jsonObj.get("indEscala").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `indEscala` to be a primitive type in the JSON string but got `%s`", jsonObj.get("indEscala").toString()));
      }
      if ((jsonObj.get("CNPJFab") != null && !jsonObj.get("CNPJFab").isJsonNull()) && !jsonObj.get("CNPJFab").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CNPJFab` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CNPJFab").toString()));
      }
      if ((jsonObj.get("cBenef") != null && !jsonObj.get("cBenef").isJsonNull()) && !jsonObj.get("cBenef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cBenef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cBenef").toString()));
      }
      if (jsonObj.get("gCred") != null && !jsonObj.get("gCred").isJsonNull()) {
        JsonArray jsonArraygCred = jsonObj.getAsJsonArray("gCred");
        if (jsonArraygCred != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gCred").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gCred` to be an array in the JSON string but got `%s`", jsonObj.get("gCred").toString()));
          }

          // validate the optional field `gCred` (array)
          for (int i = 0; i < jsonArraygCred.size(); i++) {
            NfeSefazGCred.validateJsonElement(jsonArraygCred.get(i));
          };
        }
      }
      if ((jsonObj.get("EXTIPI") != null && !jsonObj.get("EXTIPI").isJsonNull()) && !jsonObj.get("EXTIPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EXTIPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EXTIPI").toString()));
      }
      if ((jsonObj.get("CFOP") != null && !jsonObj.get("CFOP").isJsonNull()) && !jsonObj.get("CFOP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CFOP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CFOP").toString()));
      }
      if ((jsonObj.get("uCom") != null && !jsonObj.get("uCom").isJsonNull()) && !jsonObj.get("uCom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uCom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uCom").toString()));
      }
      if ((jsonObj.get("cEANTrib") != null && !jsonObj.get("cEANTrib").isJsonNull()) && !jsonObj.get("cEANTrib").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cEANTrib` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cEANTrib").toString()));
      }
      if ((jsonObj.get("cBarraTrib") != null && !jsonObj.get("cBarraTrib").isJsonNull()) && !jsonObj.get("cBarraTrib").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cBarraTrib` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cBarraTrib").toString()));
      }
      if ((jsonObj.get("uTrib") != null && !jsonObj.get("uTrib").isJsonNull()) && !jsonObj.get("uTrib").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uTrib` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uTrib").toString()));
      }
      if (jsonObj.get("DI") != null && !jsonObj.get("DI").isJsonNull()) {
        JsonArray jsonArrayDI = jsonObj.getAsJsonArray("DI");
        if (jsonArrayDI != null) {
          // ensure the json data is an array
          if (!jsonObj.get("DI").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `DI` to be an array in the JSON string but got `%s`", jsonObj.get("DI").toString()));
          }

          // validate the optional field `DI` (array)
          for (int i = 0; i < jsonArrayDI.size(); i++) {
            NfeSefazDI.validateJsonElement(jsonArrayDI.get(i));
          };
        }
      }
      if (jsonObj.get("detExport") != null && !jsonObj.get("detExport").isJsonNull()) {
        JsonArray jsonArraydetExport = jsonObj.getAsJsonArray("detExport");
        if (jsonArraydetExport != null) {
          // ensure the json data is an array
          if (!jsonObj.get("detExport").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `detExport` to be an array in the JSON string but got `%s`", jsonObj.get("detExport").toString()));
          }

          // validate the optional field `detExport` (array)
          for (int i = 0; i < jsonArraydetExport.size(); i++) {
            NfeSefazDetExport.validateJsonElement(jsonArraydetExport.get(i));
          };
        }
      }
      if ((jsonObj.get("xPed") != null && !jsonObj.get("xPed").isJsonNull()) && !jsonObj.get("xPed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xPed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xPed").toString()));
      }
      if ((jsonObj.get("nFCI") != null && !jsonObj.get("nFCI").isJsonNull()) && !jsonObj.get("nFCI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nFCI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nFCI").toString()));
      }
      if (jsonObj.get("rastro") != null && !jsonObj.get("rastro").isJsonNull()) {
        JsonArray jsonArrayrastro = jsonObj.getAsJsonArray("rastro");
        if (jsonArrayrastro != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rastro").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rastro` to be an array in the JSON string but got `%s`", jsonObj.get("rastro").toString()));
          }

          // validate the optional field `rastro` (array)
          for (int i = 0; i < jsonArrayrastro.size(); i++) {
            NfeSefazRastro.validateJsonElement(jsonArrayrastro.get(i));
          };
        }
      }
      // validate the optional field `infProdNFF`
      if (jsonObj.get("infProdNFF") != null && !jsonObj.get("infProdNFF").isJsonNull()) {
        NfeSefazInfProdNFF.validateJsonElement(jsonObj.get("infProdNFF"));
      }
      // validate the optional field `infProdEmb`
      if (jsonObj.get("infProdEmb") != null && !jsonObj.get("infProdEmb").isJsonNull()) {
        NfeSefazInfProdEmb.validateJsonElement(jsonObj.get("infProdEmb"));
      }
      // validate the optional field `veicProd`
      if (jsonObj.get("veicProd") != null && !jsonObj.get("veicProd").isJsonNull()) {
        NfeSefazVeicProd.validateJsonElement(jsonObj.get("veicProd"));
      }
      // validate the optional field `med`
      if (jsonObj.get("med") != null && !jsonObj.get("med").isJsonNull()) {
        NfeSefazMed.validateJsonElement(jsonObj.get("med"));
      }
      if (jsonObj.get("arma") != null && !jsonObj.get("arma").isJsonNull()) {
        JsonArray jsonArrayarma = jsonObj.getAsJsonArray("arma");
        if (jsonArrayarma != null) {
          // ensure the json data is an array
          if (!jsonObj.get("arma").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `arma` to be an array in the JSON string but got `%s`", jsonObj.get("arma").toString()));
          }

          // validate the optional field `arma` (array)
          for (int i = 0; i < jsonArrayarma.size(); i++) {
            NfeSefazArma.validateJsonElement(jsonArrayarma.get(i));
          };
        }
      }
      // validate the optional field `comb`
      if (jsonObj.get("comb") != null && !jsonObj.get("comb").isJsonNull()) {
        NfeSefazComb.validateJsonElement(jsonObj.get("comb"));
      }
      if ((jsonObj.get("nRECOPI") != null && !jsonObj.get("nRECOPI").isJsonNull()) && !jsonObj.get("nRECOPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nRECOPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nRECOPI").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazProd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazProd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazProd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazProd.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazProd>() {
           @Override
           public void write(JsonWriter out, NfeSefazProd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazProd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazProd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazProd
   * @throws IOException if the JSON string is invalid with respect to NfeSefazProd
   */
  public static NfeSefazProd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazProd.class);
  }

  /**
   * Convert an instance of NfeSefazProd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

