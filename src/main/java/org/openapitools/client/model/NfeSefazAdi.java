/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Adições (NT 2011/004).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazAdi {
  public static final String SERIALIZED_NAME_N_ADICAO = "nAdicao";
  @SerializedName(SERIALIZED_NAME_N_ADICAO)
  @javax.annotation.Nullable
  private Integer nAdicao;

  public static final String SERIALIZED_NAME_N_SEQ_ADIC = "nSeqAdic";
  @SerializedName(SERIALIZED_NAME_N_SEQ_ADIC)
  @javax.annotation.Nullable
  private Integer nSeqAdic;

  public static final String SERIALIZED_NAME_C_FABRICANTE = "cFabricante";
  @SerializedName(SERIALIZED_NAME_C_FABRICANTE)
  @javax.annotation.Nullable
  private String cFabricante;

  public static final String SERIALIZED_NAME_V_DESC_D_I = "vDescDI";
  @SerializedName(SERIALIZED_NAME_V_DESC_D_I)
  @javax.annotation.Nullable
  private BigDecimal vDescDI;

  public static final String SERIALIZED_NAME_N_DRAW = "nDraw";
  @SerializedName(SERIALIZED_NAME_N_DRAW)
  @javax.annotation.Nullable
  private String nDraw;

  public NfeSefazAdi() {
  }

  public NfeSefazAdi nAdicao(@javax.annotation.Nullable Integer nAdicao) {
    this.nAdicao = nAdicao;
    return this;
  }

  /**
   * Número da Adição.
   * minimum: 1
   * maximum: 999
   * @return nAdicao
   */
  @javax.annotation.Nullable
  public Integer getnAdicao() {
    return nAdicao;
  }

  public void setnAdicao(@javax.annotation.Nullable Integer nAdicao) {
    this.nAdicao = nAdicao;
  }


  public NfeSefazAdi nSeqAdic(@javax.annotation.Nullable Integer nSeqAdic) {
    this.nSeqAdic = nSeqAdic;
    return this;
  }

  /**
   * Número seqüencial do item.
   * minimum: 1
   * maximum: 99999
   * @return nSeqAdic
   */
  @javax.annotation.Nullable
  public Integer getnSeqAdic() {
    return nSeqAdic;
  }

  public void setnSeqAdic(@javax.annotation.Nullable Integer nSeqAdic) {
    this.nSeqAdic = nSeqAdic;
  }


  public NfeSefazAdi cFabricante(@javax.annotation.Nullable String cFabricante) {
    this.cFabricante = cFabricante;
    return this;
  }

  /**
   * Código do fabricante estrangeiro (usado nos sistemas internos de informação do emitente da NF-e).
   * @return cFabricante
   */
  @javax.annotation.Nullable
  public String getcFabricante() {
    return cFabricante;
  }

  public void setcFabricante(@javax.annotation.Nullable String cFabricante) {
    this.cFabricante = cFabricante;
  }


  public NfeSefazAdi vDescDI(@javax.annotation.Nullable BigDecimal vDescDI) {
    this.vDescDI = vDescDI;
    return this;
  }

  /**
   * Valor do desconto do item.
   * minimum: 0
   * @return vDescDI
   */
  @javax.annotation.Nullable
  public BigDecimal getvDescDI() {
    return vDescDI;
  }

  public void setvDescDI(@javax.annotation.Nullable BigDecimal vDescDI) {
    this.vDescDI = vDescDI;
  }


  public NfeSefazAdi nDraw(@javax.annotation.Nullable String nDraw) {
    this.nDraw = nDraw;
    return this;
  }

  /**
   * Número do ato concessório de Drawback.
   * @return nDraw
   */
  @javax.annotation.Nullable
  public String getnDraw() {
    return nDraw;
  }

  public void setnDraw(@javax.annotation.Nullable String nDraw) {
    this.nDraw = nDraw;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazAdi nfeSefazAdi = (NfeSefazAdi) o;
    return Objects.equals(this.nAdicao, nfeSefazAdi.nAdicao) &&
        Objects.equals(this.nSeqAdic, nfeSefazAdi.nSeqAdic) &&
        Objects.equals(this.cFabricante, nfeSefazAdi.cFabricante) &&
        Objects.equals(this.vDescDI, nfeSefazAdi.vDescDI) &&
        Objects.equals(this.nDraw, nfeSefazAdi.nDraw);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(nAdicao, nSeqAdic, cFabricante, vDescDI, nDraw);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazAdi {\n");
    sb.append("    nAdicao: ").append(toIndentedString(nAdicao)).append("\n");
    sb.append("    nSeqAdic: ").append(toIndentedString(nSeqAdic)).append("\n");
    sb.append("    cFabricante: ").append(toIndentedString(cFabricante)).append("\n");
    sb.append("    vDescDI: ").append(toIndentedString(vDescDI)).append("\n");
    sb.append("    nDraw: ").append(toIndentedString(nDraw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nAdicao");
    openapiFields.add("nSeqAdic");
    openapiFields.add("cFabricante");
    openapiFields.add("vDescDI");
    openapiFields.add("nDraw");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("nSeqAdic");
    openapiRequiredFields.add("cFabricante");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazAdi
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazAdi.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazAdi is not found in the empty JSON string", NfeSefazAdi.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazAdi.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazAdi` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazAdi.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cFabricante") != null && !jsonObj.get("cFabricante").isJsonNull()) && !jsonObj.get("cFabricante").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cFabricante` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cFabricante").toString()));
      }
      if ((jsonObj.get("nDraw") != null && !jsonObj.get("nDraw").isJsonNull()) && !jsonObj.get("nDraw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nDraw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nDraw").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazAdi.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazAdi' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazAdi> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazAdi.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazAdi>() {
           @Override
           public void write(JsonWriter out, NfeSefazAdi value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazAdi read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazAdi given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazAdi
   * @throws IOException if the JSON string is invalid with respect to NfeSefazAdi
   */
  public static NfeSefazAdi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazAdi.class);
  }

  /**
   * Convert an instance of NfeSefazAdi to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

