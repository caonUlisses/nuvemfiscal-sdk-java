/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.RpsServicoValores;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RpsDadosServico
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class RpsDadosServico {
  public static final String SERIALIZED_NAME_ISS_RETIDO = "iss_retido";
  @SerializedName(SERIALIZED_NAME_ISS_RETIDO)
  @javax.annotation.Nullable
  private Boolean issRetido = false;

  public static final String SERIALIZED_NAME_RESPONSAVEL_RETENCAO = "responsavel_retencao";
  @SerializedName(SERIALIZED_NAME_RESPONSAVEL_RETENCAO)
  @javax.annotation.Nullable
  private Integer responsavelRetencao;

  public static final String SERIALIZED_NAME_ITEM_LISTA_SERVICO = "item_lista_servico";
  @SerializedName(SERIALIZED_NAME_ITEM_LISTA_SERVICO)
  @javax.annotation.Nonnull
  private String itemListaServico;

  public static final String SERIALIZED_NAME_CODIGO_CNAE = "codigo_cnae";
  @SerializedName(SERIALIZED_NAME_CODIGO_CNAE)
  @javax.annotation.Nullable
  private String codigoCnae;

  public static final String SERIALIZED_NAME_CODIGO_TRIBUTACAO_MUNICIPIO = "codigo_tributacao_municipio";
  @SerializedName(SERIALIZED_NAME_CODIGO_TRIBUTACAO_MUNICIPIO)
  @javax.annotation.Nullable
  private String codigoTributacaoMunicipio;

  public static final String SERIALIZED_NAME_DISCRIMINACAO = "discriminacao";
  @SerializedName(SERIALIZED_NAME_DISCRIMINACAO)
  @javax.annotation.Nonnull
  private String discriminacao;

  public static final String SERIALIZED_NAME_CODIGO_MUNICIPIO = "codigo_municipio";
  @SerializedName(SERIALIZED_NAME_CODIGO_MUNICIPIO)
  @javax.annotation.Nullable
  private String codigoMunicipio;

  public static final String SERIALIZED_NAME_CODIGO_PAIS = "codigo_pais";
  @SerializedName(SERIALIZED_NAME_CODIGO_PAIS)
  @javax.annotation.Nullable
  private String codigoPais;

  public static final String SERIALIZED_NAME_TIPO_TRIBUTACAO = "tipo_tributacao";
  @SerializedName(SERIALIZED_NAME_TIPO_TRIBUTACAO)
  @javax.annotation.Nullable
  private Integer tipoTributacao;

  public static final String SERIALIZED_NAME_EXIGIBILIDADE_ISS = "exigibilidade_iss";
  @SerializedName(SERIALIZED_NAME_EXIGIBILIDADE_ISS)
  @javax.annotation.Nullable
  private Integer exigibilidadeIss;

  public static final String SERIALIZED_NAME_CODIGO_MUNICIPIO_INCIDENCIA = "codigo_municipio_incidencia";
  @SerializedName(SERIALIZED_NAME_CODIGO_MUNICIPIO_INCIDENCIA)
  @javax.annotation.Nullable
  private String codigoMunicipioIncidencia;

  public static final String SERIALIZED_NAME_NUMERO_PROCESSO = "numero_processo";
  @SerializedName(SERIALIZED_NAME_NUMERO_PROCESSO)
  @javax.annotation.Nullable
  private String numeroProcesso;

  public static final String SERIALIZED_NAME_UNIDADE = "unidade";
  @SerializedName(SERIALIZED_NAME_UNIDADE)
  @javax.annotation.Nullable
  private String unidade;

  public static final String SERIALIZED_NAME_QUANTIDADE = "quantidade";
  @SerializedName(SERIALIZED_NAME_QUANTIDADE)
  @javax.annotation.Nullable
  private BigDecimal quantidade;

  public static final String SERIALIZED_NAME_VALORES = "valores";
  @SerializedName(SERIALIZED_NAME_VALORES)
  @javax.annotation.Nonnull
  private RpsServicoValores valores;

  public RpsDadosServico() {
  }

  public RpsDadosServico issRetido(@javax.annotation.Nullable Boolean issRetido) {
    this.issRetido = issRetido;
    return this;
  }

  /**
   * Reter ISSQN.
   * @return issRetido
   */
  @javax.annotation.Nullable
  public Boolean getIssRetido() {
    return issRetido;
  }

  public void setIssRetido(@javax.annotation.Nullable Boolean issRetido) {
    this.issRetido = issRetido;
  }


  public RpsDadosServico responsavelRetencao(@javax.annotation.Nullable Integer responsavelRetencao) {
    this.responsavelRetencao = responsavelRetencao;
    return this;
  }

  /**
   * Responsável pela retenção:  * 0 - Prestador;  * 1 - Tomador;  * 2 - Intermediário.
   * @return responsavelRetencao
   */
  @javax.annotation.Nullable
  public Integer getResponsavelRetencao() {
    return responsavelRetencao;
  }

  public void setResponsavelRetencao(@javax.annotation.Nullable Integer responsavelRetencao) {
    this.responsavelRetencao = responsavelRetencao;
  }


  public RpsDadosServico itemListaServico(@javax.annotation.Nonnull String itemListaServico) {
    this.itemListaServico = itemListaServico;
    return this;
  }

  /**
   * Código do item da lista de serviço, geralmente segue a LC116, podendo variar de acordo com a prefeitura.    Você pode encontrar esse dado no portal da prefeitura, em uma nota emitida ou junto ao contador.
   * @return itemListaServico
   */
  @javax.annotation.Nonnull
  public String getItemListaServico() {
    return itemListaServico;
  }

  public void setItemListaServico(@javax.annotation.Nonnull String itemListaServico) {
    this.itemListaServico = itemListaServico;
  }


  public RpsDadosServico codigoCnae(@javax.annotation.Nullable String codigoCnae) {
    this.codigoCnae = codigoCnae;
    return this;
  }

  /**
   * Código CNAE (Classificação Nacional de Atividades Econômicas).
   * @return codigoCnae
   */
  @javax.annotation.Nullable
  public String getCodigoCnae() {
    return codigoCnae;
  }

  public void setCodigoCnae(@javax.annotation.Nullable String codigoCnae) {
    this.codigoCnae = codigoCnae;
  }


  public RpsDadosServico codigoTributacaoMunicipio(@javax.annotation.Nullable String codigoTributacaoMunicipio) {
    this.codigoTributacaoMunicipio = codigoTributacaoMunicipio;
    return this;
  }

  /**
   * Código de tributação do município.
   * @return codigoTributacaoMunicipio
   */
  @javax.annotation.Nullable
  public String getCodigoTributacaoMunicipio() {
    return codigoTributacaoMunicipio;
  }

  public void setCodigoTributacaoMunicipio(@javax.annotation.Nullable String codigoTributacaoMunicipio) {
    this.codigoTributacaoMunicipio = codigoTributacaoMunicipio;
  }


  public RpsDadosServico discriminacao(@javax.annotation.Nonnull String discriminacao) {
    this.discriminacao = discriminacao;
    return this;
  }

  /**
   * Detalhamento do serviço prestado.
   * @return discriminacao
   */
  @javax.annotation.Nonnull
  public String getDiscriminacao() {
    return discriminacao;
  }

  public void setDiscriminacao(@javax.annotation.Nonnull String discriminacao) {
    this.discriminacao = discriminacao;
  }


  public RpsDadosServico codigoMunicipio(@javax.annotation.Nullable String codigoMunicipio) {
    this.codigoMunicipio = codigoMunicipio;
    return this;
  }

  /**
   * Código IBGE do município de prestação do serviço.  Caso não informado, será considerado o município do prestador.
   * @return codigoMunicipio
   */
  @javax.annotation.Nullable
  public String getCodigoMunicipio() {
    return codigoMunicipio;
  }

  public void setCodigoMunicipio(@javax.annotation.Nullable String codigoMunicipio) {
    this.codigoMunicipio = codigoMunicipio;
  }


  public RpsDadosServico codigoPais(@javax.annotation.Nullable String codigoPais) {
    this.codigoPais = codigoPais;
    return this;
  }

  /**
   * Código do país de prestação do serviço.
   * @return codigoPais
   */
  @javax.annotation.Nullable
  public String getCodigoPais() {
    return codigoPais;
  }

  public void setCodigoPais(@javax.annotation.Nullable String codigoPais) {
    this.codigoPais = codigoPais;
  }


  public RpsDadosServico tipoTributacao(@javax.annotation.Nullable Integer tipoTributacao) {
    this.tipoTributacao = tipoTributacao;
    return this;
  }

  /**
   * Tipo de Tributação do Serviço:  * 1 - Isento de ISS  * 2 - Imune  * 3 - Não Incidência no Município  * 4 - Não Tributável  * 5 - Retido  * 6 - Tributável Dentro do Município  * 7 - Tributável Fora do Município  * 8 - Tributável Dentro do Município pelo tomador
   * @return tipoTributacao
   */
  @javax.annotation.Nullable
  public Integer getTipoTributacao() {
    return tipoTributacao;
  }

  public void setTipoTributacao(@javax.annotation.Nullable Integer tipoTributacao) {
    this.tipoTributacao = tipoTributacao;
  }


  public RpsDadosServico exigibilidadeIss(@javax.annotation.Nullable Integer exigibilidadeIss) {
    this.exigibilidadeIss = exigibilidadeIss;
    return this;
  }

  /**
   * Exigibilidade do ISS:  * 1 - Exigível  * 2 - Não Incidência  * 3 - Isenção  * 4 - Exportação  * 5 - Imunidade  * 6 - Suspenso por Decisão Judicial  * 7 - Suspenso por Processo Administrativo
   * @return exigibilidadeIss
   */
  @javax.annotation.Nullable
  public Integer getExigibilidadeIss() {
    return exigibilidadeIss;
  }

  public void setExigibilidadeIss(@javax.annotation.Nullable Integer exigibilidadeIss) {
    this.exigibilidadeIss = exigibilidadeIss;
  }


  public RpsDadosServico codigoMunicipioIncidencia(@javax.annotation.Nullable String codigoMunicipioIncidencia) {
    this.codigoMunicipioIncidencia = codigoMunicipioIncidencia;
    return this;
  }

  /**
   * Código IBGE do município de incidência do ISSQN.
   * @return codigoMunicipioIncidencia
   */
  @javax.annotation.Nullable
  public String getCodigoMunicipioIncidencia() {
    return codigoMunicipioIncidencia;
  }

  public void setCodigoMunicipioIncidencia(@javax.annotation.Nullable String codigoMunicipioIncidencia) {
    this.codigoMunicipioIncidencia = codigoMunicipioIncidencia;
  }


  public RpsDadosServico numeroProcesso(@javax.annotation.Nullable String numeroProcesso) {
    this.numeroProcesso = numeroProcesso;
    return this;
  }

  /**
   * Número do Processo de Suspensão da Exigibilidade.
   * @return numeroProcesso
   */
  @javax.annotation.Nullable
  public String getNumeroProcesso() {
    return numeroProcesso;
  }

  public void setNumeroProcesso(@javax.annotation.Nullable String numeroProcesso) {
    this.numeroProcesso = numeroProcesso;
  }


  public RpsDadosServico unidade(@javax.annotation.Nullable String unidade) {
    this.unidade = unidade;
    return this;
  }

  /**
   * Unidade do serviço prestado.
   * @return unidade
   */
  @javax.annotation.Nullable
  public String getUnidade() {
    return unidade;
  }

  public void setUnidade(@javax.annotation.Nullable String unidade) {
    this.unidade = unidade;
  }


  public RpsDadosServico quantidade(@javax.annotation.Nullable BigDecimal quantidade) {
    this.quantidade = quantidade;
    return this;
  }

  /**
   * Quantidade dos serviços prestados.
   * minimum: 0
   * @return quantidade
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantidade() {
    return quantidade;
  }

  public void setQuantidade(@javax.annotation.Nullable BigDecimal quantidade) {
    this.quantidade = quantidade;
  }


  public RpsDadosServico valores(@javax.annotation.Nonnull RpsServicoValores valores) {
    this.valores = valores;
    return this;
  }

  /**
   * Get valores
   * @return valores
   */
  @javax.annotation.Nonnull
  public RpsServicoValores getValores() {
    return valores;
  }

  public void setValores(@javax.annotation.Nonnull RpsServicoValores valores) {
    this.valores = valores;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RpsDadosServico rpsDadosServico = (RpsDadosServico) o;
    return Objects.equals(this.issRetido, rpsDadosServico.issRetido) &&
        Objects.equals(this.responsavelRetencao, rpsDadosServico.responsavelRetencao) &&
        Objects.equals(this.itemListaServico, rpsDadosServico.itemListaServico) &&
        Objects.equals(this.codigoCnae, rpsDadosServico.codigoCnae) &&
        Objects.equals(this.codigoTributacaoMunicipio, rpsDadosServico.codigoTributacaoMunicipio) &&
        Objects.equals(this.discriminacao, rpsDadosServico.discriminacao) &&
        Objects.equals(this.codigoMunicipio, rpsDadosServico.codigoMunicipio) &&
        Objects.equals(this.codigoPais, rpsDadosServico.codigoPais) &&
        Objects.equals(this.tipoTributacao, rpsDadosServico.tipoTributacao) &&
        Objects.equals(this.exigibilidadeIss, rpsDadosServico.exigibilidadeIss) &&
        Objects.equals(this.codigoMunicipioIncidencia, rpsDadosServico.codigoMunicipioIncidencia) &&
        Objects.equals(this.numeroProcesso, rpsDadosServico.numeroProcesso) &&
        Objects.equals(this.unidade, rpsDadosServico.unidade) &&
        Objects.equals(this.quantidade, rpsDadosServico.quantidade) &&
        Objects.equals(this.valores, rpsDadosServico.valores);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issRetido, responsavelRetencao, itemListaServico, codigoCnae, codigoTributacaoMunicipio, discriminacao, codigoMunicipio, codigoPais, tipoTributacao, exigibilidadeIss, codigoMunicipioIncidencia, numeroProcesso, unidade, quantidade, valores);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RpsDadosServico {\n");
    sb.append("    issRetido: ").append(toIndentedString(issRetido)).append("\n");
    sb.append("    responsavelRetencao: ").append(toIndentedString(responsavelRetencao)).append("\n");
    sb.append("    itemListaServico: ").append(toIndentedString(itemListaServico)).append("\n");
    sb.append("    codigoCnae: ").append(toIndentedString(codigoCnae)).append("\n");
    sb.append("    codigoTributacaoMunicipio: ").append(toIndentedString(codigoTributacaoMunicipio)).append("\n");
    sb.append("    discriminacao: ").append(toIndentedString(discriminacao)).append("\n");
    sb.append("    codigoMunicipio: ").append(toIndentedString(codigoMunicipio)).append("\n");
    sb.append("    codigoPais: ").append(toIndentedString(codigoPais)).append("\n");
    sb.append("    tipoTributacao: ").append(toIndentedString(tipoTributacao)).append("\n");
    sb.append("    exigibilidadeIss: ").append(toIndentedString(exigibilidadeIss)).append("\n");
    sb.append("    codigoMunicipioIncidencia: ").append(toIndentedString(codigoMunicipioIncidencia)).append("\n");
    sb.append("    numeroProcesso: ").append(toIndentedString(numeroProcesso)).append("\n");
    sb.append("    unidade: ").append(toIndentedString(unidade)).append("\n");
    sb.append("    quantidade: ").append(toIndentedString(quantidade)).append("\n");
    sb.append("    valores: ").append(toIndentedString(valores)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("iss_retido");
    openapiFields.add("responsavel_retencao");
    openapiFields.add("item_lista_servico");
    openapiFields.add("codigo_cnae");
    openapiFields.add("codigo_tributacao_municipio");
    openapiFields.add("discriminacao");
    openapiFields.add("codigo_municipio");
    openapiFields.add("codigo_pais");
    openapiFields.add("tipo_tributacao");
    openapiFields.add("exigibilidade_iss");
    openapiFields.add("codigo_municipio_incidencia");
    openapiFields.add("numero_processo");
    openapiFields.add("unidade");
    openapiFields.add("quantidade");
    openapiFields.add("valores");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("item_lista_servico");
    openapiRequiredFields.add("discriminacao");
    openapiRequiredFields.add("valores");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RpsDadosServico
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RpsDadosServico.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RpsDadosServico is not found in the empty JSON string", RpsDadosServico.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RpsDadosServico.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RpsDadosServico` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RpsDadosServico.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("item_lista_servico").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_lista_servico` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_lista_servico").toString()));
      }
      if ((jsonObj.get("codigo_cnae") != null && !jsonObj.get("codigo_cnae").isJsonNull()) && !jsonObj.get("codigo_cnae").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigo_cnae` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigo_cnae").toString()));
      }
      if ((jsonObj.get("codigo_tributacao_municipio") != null && !jsonObj.get("codigo_tributacao_municipio").isJsonNull()) && !jsonObj.get("codigo_tributacao_municipio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigo_tributacao_municipio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigo_tributacao_municipio").toString()));
      }
      if (!jsonObj.get("discriminacao").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discriminacao` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discriminacao").toString()));
      }
      if ((jsonObj.get("codigo_municipio") != null && !jsonObj.get("codigo_municipio").isJsonNull()) && !jsonObj.get("codigo_municipio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigo_municipio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigo_municipio").toString()));
      }
      if ((jsonObj.get("codigo_pais") != null && !jsonObj.get("codigo_pais").isJsonNull()) && !jsonObj.get("codigo_pais").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigo_pais` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigo_pais").toString()));
      }
      if ((jsonObj.get("codigo_municipio_incidencia") != null && !jsonObj.get("codigo_municipio_incidencia").isJsonNull()) && !jsonObj.get("codigo_municipio_incidencia").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigo_municipio_incidencia` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigo_municipio_incidencia").toString()));
      }
      if ((jsonObj.get("numero_processo") != null && !jsonObj.get("numero_processo").isJsonNull()) && !jsonObj.get("numero_processo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numero_processo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numero_processo").toString()));
      }
      if ((jsonObj.get("unidade") != null && !jsonObj.get("unidade").isJsonNull()) && !jsonObj.get("unidade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unidade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unidade").toString()));
      }
      // validate the required field `valores`
      RpsServicoValores.validateJsonElement(jsonObj.get("valores"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RpsDadosServico.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RpsDadosServico' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RpsDadosServico> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RpsDadosServico.class));

       return (TypeAdapter<T>) new TypeAdapter<RpsDadosServico>() {
           @Override
           public void write(JsonWriter out, RpsDadosServico value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RpsDadosServico read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RpsDadosServico given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RpsDadosServico
   * @throws IOException if the JSON string is invalid with respect to RpsDadosServico
   */
  public static RpsDadosServico fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RpsDadosServico.class);
  }

  /**
   * Convert an instance of RpsDadosServico to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

