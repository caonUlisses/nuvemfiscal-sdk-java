/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazIPINT;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfeSefazIPITrib;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * NfeSefazIpi
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazIpi {
  public static final String SERIALIZED_NAME_CN_P_J_PROD = "CNPJProd";
  @SerializedName(SERIALIZED_NAME_CN_P_J_PROD)
  @javax.annotation.Nullable
  private String cnPJProd;

  public static final String SERIALIZED_NAME_C_SELO = "cSelo";
  @SerializedName(SERIALIZED_NAME_C_SELO)
  @javax.annotation.Nullable
  private String cSelo;

  public static final String SERIALIZED_NAME_Q_SELO = "qSelo";
  @SerializedName(SERIALIZED_NAME_Q_SELO)
  @javax.annotation.Nullable
  private Integer qSelo;

  public static final String SERIALIZED_NAME_C_ENQ = "cEnq";
  @SerializedName(SERIALIZED_NAME_C_ENQ)
  @javax.annotation.Nullable
  private String cEnq;

  public static final String SERIALIZED_NAME_IP_I_TRIB = "IPITrib";
  @SerializedName(SERIALIZED_NAME_IP_I_TRIB)
  @javax.annotation.Nullable
  private NfeSefazIPITrib ipITrib;

  public static final String SERIALIZED_NAME_I_P_I_N_T = "IPINT";
  @SerializedName(SERIALIZED_NAME_I_P_I_N_T)
  @javax.annotation.Nullable
  private NfeSefazIPINT IPINT;

  public NfeSefazIpi() {
  }

  public NfeSefazIpi cnPJProd(@javax.annotation.Nullable String cnPJProd) {
    this.cnPJProd = cnPJProd;
    return this;
  }

  /**
   * CNPJ do produtor da mercadoria, quando diferente do emitente. Somente para os casos de exportação direta ou indireta.
   * @return cnPJProd
   */
  @javax.annotation.Nullable
  public String getCnPJProd() {
    return cnPJProd;
  }

  public void setCnPJProd(@javax.annotation.Nullable String cnPJProd) {
    this.cnPJProd = cnPJProd;
  }


  public NfeSefazIpi cSelo(@javax.annotation.Nullable String cSelo) {
    this.cSelo = cSelo;
    return this;
  }

  /**
   * Código do selo de controle do IPI.
   * @return cSelo
   */
  @javax.annotation.Nullable
  public String getcSelo() {
    return cSelo;
  }

  public void setcSelo(@javax.annotation.Nullable String cSelo) {
    this.cSelo = cSelo;
  }


  public NfeSefazIpi qSelo(@javax.annotation.Nullable Integer qSelo) {
    this.qSelo = qSelo;
    return this;
  }

  /**
   * Quantidade de selo de controle do IPI.
   * @return qSelo
   */
  @javax.annotation.Nullable
  public Integer getqSelo() {
    return qSelo;
  }

  public void setqSelo(@javax.annotation.Nullable Integer qSelo) {
    this.qSelo = qSelo;
  }


  public NfeSefazIpi cEnq(@javax.annotation.Nullable String cEnq) {
    this.cEnq = cEnq;
    return this;
  }

  /**
   * Código de Enquadramento Legal do IPI (tabela a ser criada pela RFB).
   * @return cEnq
   */
  @javax.annotation.Nullable
  public String getcEnq() {
    return cEnq;
  }

  public void setcEnq(@javax.annotation.Nullable String cEnq) {
    this.cEnq = cEnq;
  }


  public NfeSefazIpi ipITrib(@javax.annotation.Nullable NfeSefazIPITrib ipITrib) {
    this.ipITrib = ipITrib;
    return this;
  }

  /**
   * Get ipITrib
   * @return ipITrib
   */
  @javax.annotation.Nullable
  public NfeSefazIPITrib getIpITrib() {
    return ipITrib;
  }

  public void setIpITrib(@javax.annotation.Nullable NfeSefazIPITrib ipITrib) {
    this.ipITrib = ipITrib;
  }


  public NfeSefazIpi IPINT(@javax.annotation.Nullable NfeSefazIPINT IPINT) {
    this.IPINT = IPINT;
    return this;
  }

  /**
   * Get IPINT
   * @return IPINT
   */
  @javax.annotation.Nullable
  public NfeSefazIPINT getIPINT() {
    return IPINT;
  }

  public void setIPINT(@javax.annotation.Nullable NfeSefazIPINT IPINT) {
    this.IPINT = IPINT;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazIpi nfeSefazIpi = (NfeSefazIpi) o;
    return Objects.equals(this.cnPJProd, nfeSefazIpi.cnPJProd) &&
        Objects.equals(this.cSelo, nfeSefazIpi.cSelo) &&
        Objects.equals(this.qSelo, nfeSefazIpi.qSelo) &&
        Objects.equals(this.cEnq, nfeSefazIpi.cEnq) &&
        Objects.equals(this.ipITrib, nfeSefazIpi.ipITrib) &&
        Objects.equals(this.IPINT, nfeSefazIpi.IPINT);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cnPJProd, cSelo, qSelo, cEnq, ipITrib, IPINT);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazIpi {\n");
    sb.append("    cnPJProd: ").append(toIndentedString(cnPJProd)).append("\n");
    sb.append("    cSelo: ").append(toIndentedString(cSelo)).append("\n");
    sb.append("    qSelo: ").append(toIndentedString(qSelo)).append("\n");
    sb.append("    cEnq: ").append(toIndentedString(cEnq)).append("\n");
    sb.append("    ipITrib: ").append(toIndentedString(ipITrib)).append("\n");
    sb.append("    IPINT: ").append(toIndentedString(IPINT)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CNPJProd");
    openapiFields.add("cSelo");
    openapiFields.add("qSelo");
    openapiFields.add("cEnq");
    openapiFields.add("IPITrib");
    openapiFields.add("IPINT");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cEnq");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazIpi
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazIpi.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazIpi is not found in the empty JSON string", NfeSefazIpi.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazIpi.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazIpi` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazIpi.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CNPJProd") != null && !jsonObj.get("CNPJProd").isJsonNull()) && !jsonObj.get("CNPJProd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CNPJProd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CNPJProd").toString()));
      }
      if ((jsonObj.get("cSelo") != null && !jsonObj.get("cSelo").isJsonNull()) && !jsonObj.get("cSelo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cSelo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cSelo").toString()));
      }
      if ((jsonObj.get("cEnq") != null && !jsonObj.get("cEnq").isJsonNull()) && !jsonObj.get("cEnq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cEnq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cEnq").toString()));
      }
      // validate the optional field `IPITrib`
      if (jsonObj.get("IPITrib") != null && !jsonObj.get("IPITrib").isJsonNull()) {
        NfeSefazIPITrib.validateJsonElement(jsonObj.get("IPITrib"));
      }
      // validate the optional field `IPINT`
      if (jsonObj.get("IPINT") != null && !jsonObj.get("IPINT").isJsonNull()) {
        NfeSefazIPINT.validateJsonElement(jsonObj.get("IPINT"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazIpi.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazIpi' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazIpi> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazIpi.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazIpi>() {
           @Override
           public void write(JsonWriter out, NfeSefazIpi value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazIpi read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazIpi given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazIpi
   * @throws IOException if the JSON string is invalid with respect to NfeSefazIpi
   */
  public static NfeSefazIpi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazIpi.class);
  }

  /**
   * Convert an instance of NfeSefazIpi to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

