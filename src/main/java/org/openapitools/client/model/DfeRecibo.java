/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DfeRecibo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class DfeRecibo {
  public static final String SERIALIZED_NAME_NUMERO = "numero";
  @SerializedName(SERIALIZED_NAME_NUMERO)
  @javax.annotation.Nullable
  private String numero;

  public static final String SERIALIZED_NAME_CODIGO_STATUS = "codigo_status";
  @SerializedName(SERIALIZED_NAME_CODIGO_STATUS)
  @javax.annotation.Nullable
  private Integer codigoStatus;

  public static final String SERIALIZED_NAME_MOTIVO_STATUS = "motivo_status";
  @SerializedName(SERIALIZED_NAME_MOTIVO_STATUS)
  @javax.annotation.Nullable
  private String motivoStatus;

  public static final String SERIALIZED_NAME_DATA_RECEBIMENTO = "data_recebimento";
  @SerializedName(SERIALIZED_NAME_DATA_RECEBIMENTO)
  @javax.annotation.Nullable
  private OffsetDateTime dataRecebimento;

  public static final String SERIALIZED_NAME_CODIGO_MENSAGEM = "codigo_mensagem";
  @SerializedName(SERIALIZED_NAME_CODIGO_MENSAGEM)
  @javax.annotation.Nullable
  private Integer codigoMensagem;

  public static final String SERIALIZED_NAME_MENSAGEM = "mensagem";
  @SerializedName(SERIALIZED_NAME_MENSAGEM)
  @javax.annotation.Nullable
  private String mensagem;

  public DfeRecibo() {
  }

  public DfeRecibo numero(@javax.annotation.Nullable String numero) {
    this.numero = numero;
    return this;
  }

  /**
   * Número do Recibo
   * @return numero
   */
  @javax.annotation.Nullable
  public String getNumero() {
    return numero;
  }

  public void setNumero(@javax.annotation.Nullable String numero) {
    this.numero = numero;
  }


  public DfeRecibo codigoStatus(@javax.annotation.Nullable Integer codigoStatus) {
    this.codigoStatus = codigoStatus;
    return this;
  }

  /**
   * Código do status da mensagem enviada.
   * @return codigoStatus
   */
  @javax.annotation.Nullable
  public Integer getCodigoStatus() {
    return codigoStatus;
  }

  public void setCodigoStatus(@javax.annotation.Nullable Integer codigoStatus) {
    this.codigoStatus = codigoStatus;
  }


  public DfeRecibo motivoStatus(@javax.annotation.Nullable String motivoStatus) {
    this.motivoStatus = motivoStatus;
    return this;
  }

  /**
   * Descrição literal do status do serviço solicitado.
   * @return motivoStatus
   */
  @javax.annotation.Nullable
  public String getMotivoStatus() {
    return motivoStatus;
  }

  public void setMotivoStatus(@javax.annotation.Nullable String motivoStatus) {
    this.motivoStatus = motivoStatus;
  }


  public DfeRecibo dataRecebimento(@javax.annotation.Nullable OffsetDateTime dataRecebimento) {
    this.dataRecebimento = dataRecebimento;
    return this;
  }

  /**
   * Data e hora de processamento.
   * @return dataRecebimento
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataRecebimento() {
    return dataRecebimento;
  }

  public void setDataRecebimento(@javax.annotation.Nullable OffsetDateTime dataRecebimento) {
    this.dataRecebimento = dataRecebimento;
  }


  public DfeRecibo codigoMensagem(@javax.annotation.Nullable Integer codigoMensagem) {
    this.codigoMensagem = codigoMensagem;
    return this;
  }

  /**
   * Código da Mensagem.
   * @return codigoMensagem
   */
  @javax.annotation.Nullable
  public Integer getCodigoMensagem() {
    return codigoMensagem;
  }

  public void setCodigoMensagem(@javax.annotation.Nullable Integer codigoMensagem) {
    this.codigoMensagem = codigoMensagem;
  }


  public DfeRecibo mensagem(@javax.annotation.Nullable String mensagem) {
    this.mensagem = mensagem;
    return this;
  }

  /**
   * Mensagem da SEFAZ para o emissor.
   * @return mensagem
   */
  @javax.annotation.Nullable
  public String getMensagem() {
    return mensagem;
  }

  public void setMensagem(@javax.annotation.Nullable String mensagem) {
    this.mensagem = mensagem;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfeRecibo dfeRecibo = (DfeRecibo) o;
    return Objects.equals(this.numero, dfeRecibo.numero) &&
        Objects.equals(this.codigoStatus, dfeRecibo.codigoStatus) &&
        Objects.equals(this.motivoStatus, dfeRecibo.motivoStatus) &&
        Objects.equals(this.dataRecebimento, dfeRecibo.dataRecebimento) &&
        Objects.equals(this.codigoMensagem, dfeRecibo.codigoMensagem) &&
        Objects.equals(this.mensagem, dfeRecibo.mensagem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numero, codigoStatus, motivoStatus, dataRecebimento, codigoMensagem, mensagem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfeRecibo {\n");
    sb.append("    numero: ").append(toIndentedString(numero)).append("\n");
    sb.append("    codigoStatus: ").append(toIndentedString(codigoStatus)).append("\n");
    sb.append("    motivoStatus: ").append(toIndentedString(motivoStatus)).append("\n");
    sb.append("    dataRecebimento: ").append(toIndentedString(dataRecebimento)).append("\n");
    sb.append("    codigoMensagem: ").append(toIndentedString(codigoMensagem)).append("\n");
    sb.append("    mensagem: ").append(toIndentedString(mensagem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("numero");
    openapiFields.add("codigo_status");
    openapiFields.add("motivo_status");
    openapiFields.add("data_recebimento");
    openapiFields.add("codigo_mensagem");
    openapiFields.add("mensagem");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DfeRecibo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DfeRecibo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DfeRecibo is not found in the empty JSON string", DfeRecibo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DfeRecibo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DfeRecibo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("numero") != null && !jsonObj.get("numero").isJsonNull()) && !jsonObj.get("numero").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numero` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numero").toString()));
      }
      if ((jsonObj.get("motivo_status") != null && !jsonObj.get("motivo_status").isJsonNull()) && !jsonObj.get("motivo_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `motivo_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("motivo_status").toString()));
      }
      if ((jsonObj.get("mensagem") != null && !jsonObj.get("mensagem").isJsonNull()) && !jsonObj.get("mensagem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mensagem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mensagem").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DfeRecibo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DfeRecibo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DfeRecibo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DfeRecibo.class));

       return (TypeAdapter<T>) new TypeAdapter<DfeRecibo>() {
           @Override
           public void write(JsonWriter out, DfeRecibo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DfeRecibo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DfeRecibo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DfeRecibo
   * @throws IOException if the JSON string is invalid with respect to DfeRecibo
   */
  public static DfeRecibo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DfeRecibo.class);
  }

  /**
   * Convert an instance of DfeRecibo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

