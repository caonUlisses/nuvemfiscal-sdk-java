/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Totalizadores da carga transportada e seus documentos fiscais.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class MdfeSefazTot {
  public static final String SERIALIZED_NAME_Q_C_TE = "qCTe";
  @SerializedName(SERIALIZED_NAME_Q_C_TE)
  @javax.annotation.Nullable
  private Integer qCTe;

  public static final String SERIALIZED_NAME_Q_N_FE = "qNFe";
  @SerializedName(SERIALIZED_NAME_Q_N_FE)
  @javax.annotation.Nullable
  private Integer qNFe;

  public static final String SERIALIZED_NAME_Q_M_D_FE = "qMDFe";
  @SerializedName(SERIALIZED_NAME_Q_M_D_FE)
  @javax.annotation.Nullable
  private Integer qMDFe;

  public static final String SERIALIZED_NAME_V_CARGA = "vCarga";
  @SerializedName(SERIALIZED_NAME_V_CARGA)
  @javax.annotation.Nullable
  private BigDecimal vCarga;

  public static final String SERIALIZED_NAME_C_UNID = "cUnid";
  @SerializedName(SERIALIZED_NAME_C_UNID)
  @javax.annotation.Nullable
  private String cUnid;

  public static final String SERIALIZED_NAME_Q_CARGA = "qCarga";
  @SerializedName(SERIALIZED_NAME_Q_CARGA)
  @javax.annotation.Nullable
  private BigDecimal qCarga;

  public MdfeSefazTot() {
  }

  public MdfeSefazTot qCTe(@javax.annotation.Nullable Integer qCTe) {
    this.qCTe = qCTe;
    return this;
  }

  /**
   * Quantidade total de CT-e relacionados no Manifesto.
   * minimum: 0
   * maximum: 999999
   * @return qCTe
   */
  @javax.annotation.Nullable
  public Integer getqCTe() {
    return qCTe;
  }

  public void setqCTe(@javax.annotation.Nullable Integer qCTe) {
    this.qCTe = qCTe;
  }


  public MdfeSefazTot qNFe(@javax.annotation.Nullable Integer qNFe) {
    this.qNFe = qNFe;
    return this;
  }

  /**
   * Quantidade total de NF-e relacionadas no Manifesto.
   * minimum: 0
   * maximum: 999999
   * @return qNFe
   */
  @javax.annotation.Nullable
  public Integer getqNFe() {
    return qNFe;
  }

  public void setqNFe(@javax.annotation.Nullable Integer qNFe) {
    this.qNFe = qNFe;
  }


  public MdfeSefazTot qMDFe(@javax.annotation.Nullable Integer qMDFe) {
    this.qMDFe = qMDFe;
    return this;
  }

  /**
   * Quantidade total de MDF-e relacionados no Manifesto Aquaviário.
   * minimum: 0
   * maximum: 999999
   * @return qMDFe
   */
  @javax.annotation.Nullable
  public Integer getqMDFe() {
    return qMDFe;
  }

  public void setqMDFe(@javax.annotation.Nullable Integer qMDFe) {
    this.qMDFe = qMDFe;
  }


  public MdfeSefazTot vCarga(@javax.annotation.Nullable BigDecimal vCarga) {
    this.vCarga = vCarga;
    return this;
  }

  /**
   * Valor total da carga / mercadorias transportadas.
   * minimum: 0
   * @return vCarga
   */
  @javax.annotation.Nullable
  public BigDecimal getvCarga() {
    return vCarga;
  }

  public void setvCarga(@javax.annotation.Nullable BigDecimal vCarga) {
    this.vCarga = vCarga;
  }


  public MdfeSefazTot cUnid(@javax.annotation.Nullable String cUnid) {
    this.cUnid = cUnid;
    return this;
  }

  /**
   * Código da unidade de medida do Peso Bruto da Carga / Mercadorias transportadas.  * 01 - KG  * 02 - TON
   * @return cUnid
   */
  @javax.annotation.Nullable
  public String getcUnid() {
    return cUnid;
  }

  public void setcUnid(@javax.annotation.Nullable String cUnid) {
    this.cUnid = cUnid;
  }


  public MdfeSefazTot qCarga(@javax.annotation.Nullable BigDecimal qCarga) {
    this.qCarga = qCarga;
    return this;
  }

  /**
   * Peso Bruto Total da Carga / Mercadorias transportadas.
   * minimum: 0
   * @return qCarga
   */
  @javax.annotation.Nullable
  public BigDecimal getqCarga() {
    return qCarga;
  }

  public void setqCarga(@javax.annotation.Nullable BigDecimal qCarga) {
    this.qCarga = qCarga;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdfeSefazTot mdfeSefazTot = (MdfeSefazTot) o;
    return Objects.equals(this.qCTe, mdfeSefazTot.qCTe) &&
        Objects.equals(this.qNFe, mdfeSefazTot.qNFe) &&
        Objects.equals(this.qMDFe, mdfeSefazTot.qMDFe) &&
        Objects.equals(this.vCarga, mdfeSefazTot.vCarga) &&
        Objects.equals(this.cUnid, mdfeSefazTot.cUnid) &&
        Objects.equals(this.qCarga, mdfeSefazTot.qCarga);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(qCTe, qNFe, qMDFe, vCarga, cUnid, qCarga);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdfeSefazTot {\n");
    sb.append("    qCTe: ").append(toIndentedString(qCTe)).append("\n");
    sb.append("    qNFe: ").append(toIndentedString(qNFe)).append("\n");
    sb.append("    qMDFe: ").append(toIndentedString(qMDFe)).append("\n");
    sb.append("    vCarga: ").append(toIndentedString(vCarga)).append("\n");
    sb.append("    cUnid: ").append(toIndentedString(cUnid)).append("\n");
    sb.append("    qCarga: ").append(toIndentedString(qCarga)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("qCTe");
    openapiFields.add("qNFe");
    openapiFields.add("qMDFe");
    openapiFields.add("vCarga");
    openapiFields.add("cUnid");
    openapiFields.add("qCarga");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vCarga");
    openapiRequiredFields.add("cUnid");
    openapiRequiredFields.add("qCarga");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MdfeSefazTot
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MdfeSefazTot.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MdfeSefazTot is not found in the empty JSON string", MdfeSefazTot.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MdfeSefazTot.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MdfeSefazTot` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MdfeSefazTot.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cUnid") != null && !jsonObj.get("cUnid").isJsonNull()) && !jsonObj.get("cUnid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cUnid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cUnid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MdfeSefazTot.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MdfeSefazTot' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MdfeSefazTot> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MdfeSefazTot.class));

       return (TypeAdapter<T>) new TypeAdapter<MdfeSefazTot>() {
           @Override
           public void write(JsonWriter out, MdfeSefazTot value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MdfeSefazTot read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MdfeSefazTot given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MdfeSefazTot
   * @throws IOException if the JSON string is invalid with respect to MdfeSefazTot
   */
  public static MdfeSefazTot fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MdfeSefazTot.class);
  }

  /**
   * Convert an instance of MdfeSefazTot to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

