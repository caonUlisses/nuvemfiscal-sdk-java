/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Prestação sujeito à tributação com redução de BC do ICMS.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazICMS20 {
  public static final String SERIALIZED_NAME_C_S_T = "CST";
  @SerializedName(SERIALIZED_NAME_C_S_T)
  @javax.annotation.Nullable
  private String CST;

  public static final String SERIALIZED_NAME_P_RED_B_C = "pRedBC";
  @SerializedName(SERIALIZED_NAME_P_RED_B_C)
  @javax.annotation.Nullable
  private BigDecimal pRedBC;

  public static final String SERIALIZED_NAME_V_B_C = "vBC";
  @SerializedName(SERIALIZED_NAME_V_B_C)
  @javax.annotation.Nullable
  private BigDecimal vBC;

  public static final String SERIALIZED_NAME_P_I_C_M_S = "pICMS";
  @SerializedName(SERIALIZED_NAME_P_I_C_M_S)
  @javax.annotation.Nullable
  private BigDecimal pICMS;

  public static final String SERIALIZED_NAME_V_I_C_M_S = "vICMS";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S)
  @javax.annotation.Nullable
  private BigDecimal vICMS;

  public static final String SERIALIZED_NAME_V_I_C_M_S_DESON = "vICMSDeson";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_DESON)
  @javax.annotation.Nullable
  private BigDecimal vICMSDeson;

  public static final String SERIALIZED_NAME_C_BENEF = "cBenef";
  @SerializedName(SERIALIZED_NAME_C_BENEF)
  @javax.annotation.Nullable
  private String cBenef;

  public static final String SERIALIZED_NAME_P_F_C_P = "pFCP";
  @SerializedName(SERIALIZED_NAME_P_F_C_P)
  @javax.annotation.Nullable
  private BigDecimal pFCP;

  public static final String SERIALIZED_NAME_V_F_C_P = "vFCP";
  @SerializedName(SERIALIZED_NAME_V_F_C_P)
  @javax.annotation.Nullable
  private BigDecimal vFCP;

  public NfcomSefazICMS20() {
  }

  public NfcomSefazICMS20 CST(@javax.annotation.Nullable String CST) {
    this.CST = CST;
    return this;
  }

  /**
   * Classificação Tributária do serviço.  * 20 - tributação com BC reduzida do ICMS
   * @return CST
   */
  @javax.annotation.Nullable
  public String getCST() {
    return CST;
  }

  public void setCST(@javax.annotation.Nullable String CST) {
    this.CST = CST;
  }


  public NfcomSefazICMS20 pRedBC(@javax.annotation.Nullable BigDecimal pRedBC) {
    this.pRedBC = pRedBC;
    return this;
  }

  /**
   * Percentual de redução da BC.
   * minimum: 0
   * @return pRedBC
   */
  @javax.annotation.Nullable
  public BigDecimal getpRedBC() {
    return pRedBC;
  }

  public void setpRedBC(@javax.annotation.Nullable BigDecimal pRedBC) {
    this.pRedBC = pRedBC;
  }


  public NfcomSefazICMS20 vBC(@javax.annotation.Nullable BigDecimal vBC) {
    this.vBC = vBC;
    return this;
  }

  /**
   * Valor da BC do ICMS.
   * minimum: 0
   * @return vBC
   */
  @javax.annotation.Nullable
  public BigDecimal getvBC() {
    return vBC;
  }

  public void setvBC(@javax.annotation.Nullable BigDecimal vBC) {
    this.vBC = vBC;
  }


  public NfcomSefazICMS20 pICMS(@javax.annotation.Nullable BigDecimal pICMS) {
    this.pICMS = pICMS;
    return this;
  }

  /**
   * Alíquota do ICMS.
   * minimum: 0
   * @return pICMS
   */
  @javax.annotation.Nullable
  public BigDecimal getpICMS() {
    return pICMS;
  }

  public void setpICMS(@javax.annotation.Nullable BigDecimal pICMS) {
    this.pICMS = pICMS;
  }


  public NfcomSefazICMS20 vICMS(@javax.annotation.Nullable BigDecimal vICMS) {
    this.vICMS = vICMS;
    return this;
  }

  /**
   * Valor do ICMS.
   * minimum: 0
   * @return vICMS
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMS() {
    return vICMS;
  }

  public void setvICMS(@javax.annotation.Nullable BigDecimal vICMS) {
    this.vICMS = vICMS;
  }


  public NfcomSefazICMS20 vICMSDeson(@javax.annotation.Nullable BigDecimal vICMSDeson) {
    this.vICMSDeson = vICMSDeson;
    return this;
  }

  /**
   * Valor do ICMS de desoneração.
   * minimum: 0
   * @return vICMSDeson
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSDeson() {
    return vICMSDeson;
  }

  public void setvICMSDeson(@javax.annotation.Nullable BigDecimal vICMSDeson) {
    this.vICMSDeson = vICMSDeson;
  }


  public NfcomSefazICMS20 cBenef(@javax.annotation.Nullable String cBenef) {
    this.cBenef = cBenef;
    return this;
  }

  /**
   * Código de Benefício Fiscal na UF aplicado ao item.  Código de Benefício Fiscal utilizado pela UF, aplicado ao  item.
   * @return cBenef
   */
  @javax.annotation.Nullable
  public String getcBenef() {
    return cBenef;
  }

  public void setcBenef(@javax.annotation.Nullable String cBenef) {
    this.cBenef = cBenef;
  }


  public NfcomSefazICMS20 pFCP(@javax.annotation.Nullable BigDecimal pFCP) {
    this.pFCP = pFCP;
    return this;
  }

  /**
   * Percentual de ICMS relativo ao Fundo de Combate à Pobreza (FCP).
   * minimum: 0
   * @return pFCP
   */
  @javax.annotation.Nullable
  public BigDecimal getpFCP() {
    return pFCP;
  }

  public void setpFCP(@javax.annotation.Nullable BigDecimal pFCP) {
    this.pFCP = pFCP;
  }


  public NfcomSefazICMS20 vFCP(@javax.annotation.Nullable BigDecimal vFCP) {
    this.vFCP = vFCP;
    return this;
  }

  /**
   * Valor do ICMS relativo ao Fundo de Combate à Pobreza (FCP).
   * minimum: 0
   * @return vFCP
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCP() {
    return vFCP;
  }

  public void setvFCP(@javax.annotation.Nullable BigDecimal vFCP) {
    this.vFCP = vFCP;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazICMS20 nfcomSefazICMS20 = (NfcomSefazICMS20) o;
    return Objects.equals(this.CST, nfcomSefazICMS20.CST) &&
        Objects.equals(this.pRedBC, nfcomSefazICMS20.pRedBC) &&
        Objects.equals(this.vBC, nfcomSefazICMS20.vBC) &&
        Objects.equals(this.pICMS, nfcomSefazICMS20.pICMS) &&
        Objects.equals(this.vICMS, nfcomSefazICMS20.vICMS) &&
        Objects.equals(this.vICMSDeson, nfcomSefazICMS20.vICMSDeson) &&
        Objects.equals(this.cBenef, nfcomSefazICMS20.cBenef) &&
        Objects.equals(this.pFCP, nfcomSefazICMS20.pFCP) &&
        Objects.equals(this.vFCP, nfcomSefazICMS20.vFCP);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(CST, pRedBC, vBC, pICMS, vICMS, vICMSDeson, cBenef, pFCP, vFCP);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazICMS20 {\n");
    sb.append("    CST: ").append(toIndentedString(CST)).append("\n");
    sb.append("    pRedBC: ").append(toIndentedString(pRedBC)).append("\n");
    sb.append("    vBC: ").append(toIndentedString(vBC)).append("\n");
    sb.append("    pICMS: ").append(toIndentedString(pICMS)).append("\n");
    sb.append("    vICMS: ").append(toIndentedString(vICMS)).append("\n");
    sb.append("    vICMSDeson: ").append(toIndentedString(vICMSDeson)).append("\n");
    sb.append("    cBenef: ").append(toIndentedString(cBenef)).append("\n");
    sb.append("    pFCP: ").append(toIndentedString(pFCP)).append("\n");
    sb.append("    vFCP: ").append(toIndentedString(vFCP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CST");
    openapiFields.add("pRedBC");
    openapiFields.add("vBC");
    openapiFields.add("pICMS");
    openapiFields.add("vICMS");
    openapiFields.add("vICMSDeson");
    openapiFields.add("cBenef");
    openapiFields.add("pFCP");
    openapiFields.add("vFCP");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CST");
    openapiRequiredFields.add("pRedBC");
    openapiRequiredFields.add("vBC");
    openapiRequiredFields.add("pICMS");
    openapiRequiredFields.add("vICMS");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazICMS20
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazICMS20.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazICMS20 is not found in the empty JSON string", NfcomSefazICMS20.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazICMS20.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazICMS20` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazICMS20.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CST") != null && !jsonObj.get("CST").isJsonNull()) && !jsonObj.get("CST").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CST` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CST").toString()));
      }
      if ((jsonObj.get("cBenef") != null && !jsonObj.get("cBenef").isJsonNull()) && !jsonObj.get("cBenef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cBenef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cBenef").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazICMS20.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazICMS20' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazICMS20> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazICMS20.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazICMS20>() {
           @Override
           public void write(JsonWriter out, NfcomSefazICMS20 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazICMS20 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazICMS20 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazICMS20
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazICMS20
   */
  public static NfcomSefazICMS20 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazICMS20.class);
  }

  /**
   * Convert an instance of NfcomSefazICMS20 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

