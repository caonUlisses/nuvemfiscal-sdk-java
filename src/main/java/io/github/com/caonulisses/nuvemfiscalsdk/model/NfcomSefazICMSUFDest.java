/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Informações do ICMS de partilha com a UF destinatária.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazICMSUFDest {
  public static final String SERIALIZED_NAME_C_U_F_DEST = "cUFDest";
  @SerializedName(SERIALIZED_NAME_C_U_F_DEST)
  @javax.annotation.Nullable
  private Integer cUFDest;

  public static final String SERIALIZED_NAME_V_B_C_U_F_DEST = "vBCUFDest";
  @SerializedName(SERIALIZED_NAME_V_B_C_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal vBCUFDest;

  public static final String SERIALIZED_NAME_P_F_C_P_U_F_DEST = "pFCPUFDest";
  @SerializedName(SERIALIZED_NAME_P_F_C_P_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal pFCPUFDest;

  public static final String SERIALIZED_NAME_P_I_C_M_S_U_F_DEST = "pICMSUFDest";
  @SerializedName(SERIALIZED_NAME_P_I_C_M_S_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal pICMSUFDest;

  public static final String SERIALIZED_NAME_V_F_C_P_U_F_DEST = "vFCPUFDest";
  @SerializedName(SERIALIZED_NAME_V_F_C_P_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal vFCPUFDest;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_DEST = "vICMSUFDest";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_DEST)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFDest;

  public static final String SERIALIZED_NAME_V_I_C_M_S_U_F_EMI = "vICMSUFEmi";
  @SerializedName(SERIALIZED_NAME_V_I_C_M_S_U_F_EMI)
  @javax.annotation.Nullable
  private BigDecimal vICMSUFEmi;

  public static final String SERIALIZED_NAME_C_BENEF_U_F_DEST = "cBenefUFDest";
  @SerializedName(SERIALIZED_NAME_C_BENEF_U_F_DEST)
  @javax.annotation.Nullable
  private String cBenefUFDest;

  public NfcomSefazICMSUFDest() {
  }

  public NfcomSefazICMSUFDest cUFDest(@javax.annotation.Nullable Integer cUFDest) {
    this.cUFDest = cUFDest;
    return this;
  }

  /**
   * Get cUFDest
   * @return cUFDest
   */
  @javax.annotation.Nullable
  public Integer getcUFDest() {
    return cUFDest;
  }

  public void setcUFDest(@javax.annotation.Nullable Integer cUFDest) {
    this.cUFDest = cUFDest;
  }


  public NfcomSefazICMSUFDest vBCUFDest(@javax.annotation.Nullable BigDecimal vBCUFDest) {
    this.vBCUFDest = vBCUFDest;
    return this;
  }

  /**
   * Valor da BC do ICMS na UF de destino.
   * minimum: 0
   * @return vBCUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getvBCUFDest() {
    return vBCUFDest;
  }

  public void setvBCUFDest(@javax.annotation.Nullable BigDecimal vBCUFDest) {
    this.vBCUFDest = vBCUFDest;
  }


  public NfcomSefazICMSUFDest pFCPUFDest(@javax.annotation.Nullable BigDecimal pFCPUFDest) {
    this.pFCPUFDest = pFCPUFDest;
    return this;
  }

  /**
   * Percentual do ICMS relativo ao Fundo de Combate à pobreza (FCP) na UF de destino.  Alíquota adotada nas operações internas na UF do destinatário.
   * minimum: 0
   * @return pFCPUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getpFCPUFDest() {
    return pFCPUFDest;
  }

  public void setpFCPUFDest(@javax.annotation.Nullable BigDecimal pFCPUFDest) {
    this.pFCPUFDest = pFCPUFDest;
  }


  public NfcomSefazICMSUFDest pICMSUFDest(@javax.annotation.Nullable BigDecimal pICMSUFDest) {
    this.pICMSUFDest = pICMSUFDest;
    return this;
  }

  /**
   * Alíquota interna da UF de destino.  Alíquota adotada nas operações internas na UF do destinatário.
   * minimum: 0
   * @return pICMSUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getpICMSUFDest() {
    return pICMSUFDest;
  }

  public void setpICMSUFDest(@javax.annotation.Nullable BigDecimal pICMSUFDest) {
    this.pICMSUFDest = pICMSUFDest;
  }


  public NfcomSefazICMSUFDest vFCPUFDest(@javax.annotation.Nullable BigDecimal vFCPUFDest) {
    this.vFCPUFDest = vFCPUFDest;
    return this;
  }

  /**
   * Valor do ICMS relativo ao Fundo de Combate á Pobreza (FCP) da UF de destino.
   * minimum: 0
   * @return vFCPUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getvFCPUFDest() {
    return vFCPUFDest;
  }

  public void setvFCPUFDest(@javax.annotation.Nullable BigDecimal vFCPUFDest) {
    this.vFCPUFDest = vFCPUFDest;
  }


  public NfcomSefazICMSUFDest vICMSUFDest(@javax.annotation.Nullable BigDecimal vICMSUFDest) {
    this.vICMSUFDest = vICMSUFDest;
    return this;
  }

  /**
   * Valor do ICMS de partilha para a UF de destino.
   * minimum: 0
   * @return vICMSUFDest
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFDest() {
    return vICMSUFDest;
  }

  public void setvICMSUFDest(@javax.annotation.Nullable BigDecimal vICMSUFDest) {
    this.vICMSUFDest = vICMSUFDest;
  }


  public NfcomSefazICMSUFDest vICMSUFEmi(@javax.annotation.Nullable BigDecimal vICMSUFEmi) {
    this.vICMSUFEmi = vICMSUFEmi;
    return this;
  }

  /**
   * Valor do ICMS de partilha para a UF de emissão.
   * minimum: 0
   * @return vICMSUFEmi
   */
  @javax.annotation.Nullable
  public BigDecimal getvICMSUFEmi() {
    return vICMSUFEmi;
  }

  public void setvICMSUFEmi(@javax.annotation.Nullable BigDecimal vICMSUFEmi) {
    this.vICMSUFEmi = vICMSUFEmi;
  }


  public NfcomSefazICMSUFDest cBenefUFDest(@javax.annotation.Nullable String cBenefUFDest) {
    this.cBenefUFDest = cBenefUFDest;
    return this;
  }

  /**
   * Código de Benefício Fiscal na UF destino aplicado ao item.  Código de Benefício Fiscal utilizado pela UF, aplicado ao  item.
   * @return cBenefUFDest
   */
  @javax.annotation.Nullable
  public String getcBenefUFDest() {
    return cBenefUFDest;
  }

  public void setcBenefUFDest(@javax.annotation.Nullable String cBenefUFDest) {
    this.cBenefUFDest = cBenefUFDest;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazICMSUFDest nfcomSefazICMSUFDest = (NfcomSefazICMSUFDest) o;
    return Objects.equals(this.cUFDest, nfcomSefazICMSUFDest.cUFDest) &&
        Objects.equals(this.vBCUFDest, nfcomSefazICMSUFDest.vBCUFDest) &&
        Objects.equals(this.pFCPUFDest, nfcomSefazICMSUFDest.pFCPUFDest) &&
        Objects.equals(this.pICMSUFDest, nfcomSefazICMSUFDest.pICMSUFDest) &&
        Objects.equals(this.vFCPUFDest, nfcomSefazICMSUFDest.vFCPUFDest) &&
        Objects.equals(this.vICMSUFDest, nfcomSefazICMSUFDest.vICMSUFDest) &&
        Objects.equals(this.vICMSUFEmi, nfcomSefazICMSUFDest.vICMSUFEmi) &&
        Objects.equals(this.cBenefUFDest, nfcomSefazICMSUFDest.cBenefUFDest);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cUFDest, vBCUFDest, pFCPUFDest, pICMSUFDest, vFCPUFDest, vICMSUFDest, vICMSUFEmi, cBenefUFDest);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazICMSUFDest {\n");
    sb.append("    cUFDest: ").append(toIndentedString(cUFDest)).append("\n");
    sb.append("    vBCUFDest: ").append(toIndentedString(vBCUFDest)).append("\n");
    sb.append("    pFCPUFDest: ").append(toIndentedString(pFCPUFDest)).append("\n");
    sb.append("    pICMSUFDest: ").append(toIndentedString(pICMSUFDest)).append("\n");
    sb.append("    vFCPUFDest: ").append(toIndentedString(vFCPUFDest)).append("\n");
    sb.append("    vICMSUFDest: ").append(toIndentedString(vICMSUFDest)).append("\n");
    sb.append("    vICMSUFEmi: ").append(toIndentedString(vICMSUFEmi)).append("\n");
    sb.append("    cBenefUFDest: ").append(toIndentedString(cBenefUFDest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cUFDest");
    openapiFields.add("vBCUFDest");
    openapiFields.add("pFCPUFDest");
    openapiFields.add("pICMSUFDest");
    openapiFields.add("vFCPUFDest");
    openapiFields.add("vICMSUFDest");
    openapiFields.add("vICMSUFEmi");
    openapiFields.add("cBenefUFDest");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vBCUFDest");
    openapiRequiredFields.add("pFCPUFDest");
    openapiRequiredFields.add("pICMSUFDest");
    openapiRequiredFields.add("vFCPUFDest");
    openapiRequiredFields.add("vICMSUFDest");
    openapiRequiredFields.add("vICMSUFEmi");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazICMSUFDest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazICMSUFDest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazICMSUFDest is not found in the empty JSON string", NfcomSefazICMSUFDest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazICMSUFDest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazICMSUFDest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazICMSUFDest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cBenefUFDest") != null && !jsonObj.get("cBenefUFDest").isJsonNull()) && !jsonObj.get("cBenefUFDest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cBenefUFDest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cBenefUFDest").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazICMSUFDest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazICMSUFDest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazICMSUFDest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazICMSUFDest.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazICMSUFDest>() {
           @Override
           public void write(JsonWriter out, NfcomSefazICMSUFDest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazICMSUFDest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazICMSUFDest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazICMSUFDest
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazICMSUFDest
   */
  public static NfcomSefazICMSUFDest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazICMSUFDest.class);
  }

  /**
   * Convert an instance of NfcomSefazICMSUFDest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

