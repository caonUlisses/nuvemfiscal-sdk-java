/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * grupo do detalhamento de Medicamentos e de matérias-primas farmacêuticas.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfeSefazMed {
  public static final String SERIALIZED_NAME_C_PROD_A_N_V_I_S_A = "cProdANVISA";
  @SerializedName(SERIALIZED_NAME_C_PROD_A_N_V_I_S_A)
  @javax.annotation.Nullable
  private String cProdANVISA;

  public static final String SERIALIZED_NAME_X_MOTIVO_ISENCAO = "xMotivoIsencao";
  @SerializedName(SERIALIZED_NAME_X_MOTIVO_ISENCAO)
  @javax.annotation.Nullable
  private String xMotivoIsencao;

  public static final String SERIALIZED_NAME_V_P_M_C = "vPMC";
  @SerializedName(SERIALIZED_NAME_V_P_M_C)
  @javax.annotation.Nullable
  private BigDecimal vPMC;

  public NfeSefazMed() {
  }

  public NfeSefazMed cProdANVISA(@javax.annotation.Nullable String cProdANVISA) {
    this.cProdANVISA = cProdANVISA;
    return this;
  }

  /**
   * Utilizar o número do registro ANVISA  ou preencher com o literal “ISENTO”, no caso de medicamento isento de registro na ANVISA.
   * @return cProdANVISA
   */
  @javax.annotation.Nullable
  public String getcProdANVISA() {
    return cProdANVISA;
  }

  public void setcProdANVISA(@javax.annotation.Nullable String cProdANVISA) {
    this.cProdANVISA = cProdANVISA;
  }


  public NfeSefazMed xMotivoIsencao(@javax.annotation.Nullable String xMotivoIsencao) {
    this.xMotivoIsencao = xMotivoIsencao;
    return this;
  }

  /**
   * Obs.: Para medicamento isento de registro na ANVISA, informar o número da decisão que o isenta, como por exemplo o número da Resolução da Diretoria Colegiada da ANVISA (RDC).
   * @return xMotivoIsencao
   */
  @javax.annotation.Nullable
  public String getxMotivoIsencao() {
    return xMotivoIsencao;
  }

  public void setxMotivoIsencao(@javax.annotation.Nullable String xMotivoIsencao) {
    this.xMotivoIsencao = xMotivoIsencao;
  }


  public NfeSefazMed vPMC(@javax.annotation.Nullable BigDecimal vPMC) {
    this.vPMC = vPMC;
    return this;
  }

  /**
   * Preço Máximo ao Consumidor.
   * minimum: 0
   * @return vPMC
   */
  @javax.annotation.Nullable
  public BigDecimal getvPMC() {
    return vPMC;
  }

  public void setvPMC(@javax.annotation.Nullable BigDecimal vPMC) {
    this.vPMC = vPMC;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfeSefazMed nfeSefazMed = (NfeSefazMed) o;
    return Objects.equals(this.cProdANVISA, nfeSefazMed.cProdANVISA) &&
        Objects.equals(this.xMotivoIsencao, nfeSefazMed.xMotivoIsencao) &&
        Objects.equals(this.vPMC, nfeSefazMed.vPMC);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cProdANVISA, xMotivoIsencao, vPMC);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfeSefazMed {\n");
    sb.append("    cProdANVISA: ").append(toIndentedString(cProdANVISA)).append("\n");
    sb.append("    xMotivoIsencao: ").append(toIndentedString(xMotivoIsencao)).append("\n");
    sb.append("    vPMC: ").append(toIndentedString(vPMC)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cProdANVISA");
    openapiFields.add("xMotivoIsencao");
    openapiFields.add("vPMC");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cProdANVISA");
    openapiRequiredFields.add("vPMC");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfeSefazMed
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfeSefazMed.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfeSefazMed is not found in the empty JSON string", NfeSefazMed.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfeSefazMed.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfeSefazMed` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfeSefazMed.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cProdANVISA") != null && !jsonObj.get("cProdANVISA").isJsonNull()) && !jsonObj.get("cProdANVISA").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cProdANVISA` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cProdANVISA").toString()));
      }
      if ((jsonObj.get("xMotivoIsencao") != null && !jsonObj.get("xMotivoIsencao").isJsonNull()) && !jsonObj.get("xMotivoIsencao").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xMotivoIsencao` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xMotivoIsencao").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfeSefazMed.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfeSefazMed' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfeSefazMed> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfeSefazMed.class));

       return (TypeAdapter<T>) new TypeAdapter<NfeSefazMed>() {
           @Override
           public void write(JsonWriter out, NfeSefazMed value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfeSefazMed read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfeSefazMed given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfeSefazMed
   * @throws IOException if the JSON string is invalid with respect to NfeSefazMed
   */
  public static NfeSefazMed fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfeSefazMed.class);
  }

  /**
   * Convert an instance of NfeSefazMed to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

