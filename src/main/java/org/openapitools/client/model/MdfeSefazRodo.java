/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MdfeSefazInfANTT;
import org.openapitools.client.model.MdfeSefazLacRodo;
import org.openapitools.client.model.MdfeSefazVeicReboque;
import org.openapitools.client.model.MdfeSefazVeicTracao;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Informações do modal Rodoviário.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class MdfeSefazRodo {
  public static final String SERIALIZED_NAME_INF_A_N_T_T = "infANTT";
  @SerializedName(SERIALIZED_NAME_INF_A_N_T_T)
  @javax.annotation.Nullable
  private MdfeSefazInfANTT infANTT;

  public static final String SERIALIZED_NAME_VEIC_TRACAO = "veicTracao";
  @SerializedName(SERIALIZED_NAME_VEIC_TRACAO)
  @javax.annotation.Nonnull
  private MdfeSefazVeicTracao veicTracao;

  public static final String SERIALIZED_NAME_VEIC_REBOQUE = "veicReboque";
  @SerializedName(SERIALIZED_NAME_VEIC_REBOQUE)
  @javax.annotation.Nullable
  private List<MdfeSefazVeicReboque> veicReboque = new ArrayList<>();

  public static final String SERIALIZED_NAME_COD_AG_PORTO = "codAgPorto";
  @SerializedName(SERIALIZED_NAME_COD_AG_PORTO)
  @javax.annotation.Nullable
  private String codAgPorto;

  public static final String SERIALIZED_NAME_LAC_RODO = "lacRodo";
  @SerializedName(SERIALIZED_NAME_LAC_RODO)
  @javax.annotation.Nullable
  private List<MdfeSefazLacRodo> lacRodo = new ArrayList<>();

  public MdfeSefazRodo() {
  }

  public MdfeSefazRodo infANTT(@javax.annotation.Nullable MdfeSefazInfANTT infANTT) {
    this.infANTT = infANTT;
    return this;
  }

  /**
   * Get infANTT
   * @return infANTT
   */
  @javax.annotation.Nullable
  public MdfeSefazInfANTT getInfANTT() {
    return infANTT;
  }

  public void setInfANTT(@javax.annotation.Nullable MdfeSefazInfANTT infANTT) {
    this.infANTT = infANTT;
  }


  public MdfeSefazRodo veicTracao(@javax.annotation.Nonnull MdfeSefazVeicTracao veicTracao) {
    this.veicTracao = veicTracao;
    return this;
  }

  /**
   * Get veicTracao
   * @return veicTracao
   */
  @javax.annotation.Nonnull
  public MdfeSefazVeicTracao getVeicTracao() {
    return veicTracao;
  }

  public void setVeicTracao(@javax.annotation.Nonnull MdfeSefazVeicTracao veicTracao) {
    this.veicTracao = veicTracao;
  }


  public MdfeSefazRodo veicReboque(@javax.annotation.Nullable List<MdfeSefazVeicReboque> veicReboque) {
    this.veicReboque = veicReboque;
    return this;
  }

  public MdfeSefazRodo addVeicReboqueItem(MdfeSefazVeicReboque veicReboqueItem) {
    if (this.veicReboque == null) {
      this.veicReboque = new ArrayList<>();
    }
    this.veicReboque.add(veicReboqueItem);
    return this;
  }

  /**
   * Get veicReboque
   * @return veicReboque
   */
  @javax.annotation.Nullable
  public List<MdfeSefazVeicReboque> getVeicReboque() {
    return veicReboque;
  }

  public void setVeicReboque(@javax.annotation.Nullable List<MdfeSefazVeicReboque> veicReboque) {
    this.veicReboque = veicReboque;
  }


  public MdfeSefazRodo codAgPorto(@javax.annotation.Nullable String codAgPorto) {
    this.codAgPorto = codAgPorto;
    return this;
  }

  /**
   * Código de Agendamento no porto.
   * @return codAgPorto
   */
  @javax.annotation.Nullable
  public String getCodAgPorto() {
    return codAgPorto;
  }

  public void setCodAgPorto(@javax.annotation.Nullable String codAgPorto) {
    this.codAgPorto = codAgPorto;
  }


  public MdfeSefazRodo lacRodo(@javax.annotation.Nullable List<MdfeSefazLacRodo> lacRodo) {
    this.lacRodo = lacRodo;
    return this;
  }

  public MdfeSefazRodo addLacRodoItem(MdfeSefazLacRodo lacRodoItem) {
    if (this.lacRodo == null) {
      this.lacRodo = new ArrayList<>();
    }
    this.lacRodo.add(lacRodoItem);
    return this;
  }

  /**
   * Get lacRodo
   * @return lacRodo
   */
  @javax.annotation.Nullable
  public List<MdfeSefazLacRodo> getLacRodo() {
    return lacRodo;
  }

  public void setLacRodo(@javax.annotation.Nullable List<MdfeSefazLacRodo> lacRodo) {
    this.lacRodo = lacRodo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdfeSefazRodo mdfeSefazRodo = (MdfeSefazRodo) o;
    return Objects.equals(this.infANTT, mdfeSefazRodo.infANTT) &&
        Objects.equals(this.veicTracao, mdfeSefazRodo.veicTracao) &&
        Objects.equals(this.veicReboque, mdfeSefazRodo.veicReboque) &&
        Objects.equals(this.codAgPorto, mdfeSefazRodo.codAgPorto) &&
        Objects.equals(this.lacRodo, mdfeSefazRodo.lacRodo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(infANTT, veicTracao, veicReboque, codAgPorto, lacRodo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdfeSefazRodo {\n");
    sb.append("    infANTT: ").append(toIndentedString(infANTT)).append("\n");
    sb.append("    veicTracao: ").append(toIndentedString(veicTracao)).append("\n");
    sb.append("    veicReboque: ").append(toIndentedString(veicReboque)).append("\n");
    sb.append("    codAgPorto: ").append(toIndentedString(codAgPorto)).append("\n");
    sb.append("    lacRodo: ").append(toIndentedString(lacRodo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("infANTT");
    openapiFields.add("veicTracao");
    openapiFields.add("veicReboque");
    openapiFields.add("codAgPorto");
    openapiFields.add("lacRodo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("veicTracao");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MdfeSefazRodo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MdfeSefazRodo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MdfeSefazRodo is not found in the empty JSON string", MdfeSefazRodo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MdfeSefazRodo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MdfeSefazRodo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MdfeSefazRodo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `infANTT`
      if (jsonObj.get("infANTT") != null && !jsonObj.get("infANTT").isJsonNull()) {
        MdfeSefazInfANTT.validateJsonElement(jsonObj.get("infANTT"));
      }
      // validate the required field `veicTracao`
      MdfeSefazVeicTracao.validateJsonElement(jsonObj.get("veicTracao"));
      if (jsonObj.get("veicReboque") != null && !jsonObj.get("veicReboque").isJsonNull()) {
        JsonArray jsonArrayveicReboque = jsonObj.getAsJsonArray("veicReboque");
        if (jsonArrayveicReboque != null) {
          // ensure the json data is an array
          if (!jsonObj.get("veicReboque").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `veicReboque` to be an array in the JSON string but got `%s`", jsonObj.get("veicReboque").toString()));
          }

          // validate the optional field `veicReboque` (array)
          for (int i = 0; i < jsonArrayveicReboque.size(); i++) {
            MdfeSefazVeicReboque.validateJsonElement(jsonArrayveicReboque.get(i));
          };
        }
      }
      if ((jsonObj.get("codAgPorto") != null && !jsonObj.get("codAgPorto").isJsonNull()) && !jsonObj.get("codAgPorto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codAgPorto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codAgPorto").toString()));
      }
      if (jsonObj.get("lacRodo") != null && !jsonObj.get("lacRodo").isJsonNull()) {
        JsonArray jsonArraylacRodo = jsonObj.getAsJsonArray("lacRodo");
        if (jsonArraylacRodo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lacRodo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lacRodo` to be an array in the JSON string but got `%s`", jsonObj.get("lacRodo").toString()));
          }

          // validate the optional field `lacRodo` (array)
          for (int i = 0; i < jsonArraylacRodo.size(); i++) {
            MdfeSefazLacRodo.validateJsonElement(jsonArraylacRodo.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MdfeSefazRodo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MdfeSefazRodo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MdfeSefazRodo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MdfeSefazRodo.class));

       return (TypeAdapter<T>) new TypeAdapter<MdfeSefazRodo>() {
           @Override
           public void write(JsonWriter out, MdfeSefazRodo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MdfeSefazRodo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MdfeSefazRodo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MdfeSefazRodo
   * @throws IOException if the JSON string is invalid with respect to MdfeSefazRodo
   */
  public static MdfeSefazRodo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MdfeSefazRodo.class);
  }

  /**
   * Convert an instance of MdfeSefazRodo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

