/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CteSefazComData;
import org.openapitools.client.model.CteSefazComHora;
import org.openapitools.client.model.CteSefazNoInter;
import org.openapitools.client.model.CteSefazNoPeriodo;
import org.openapitools.client.model.CteSefazSemData;
import org.openapitools.client.model.CteSefazSemHora;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Informações ref. a previsão de entrega.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class CteSefazEntrega {
  public static final String SERIALIZED_NAME_SEM_DATA = "semData";
  @SerializedName(SERIALIZED_NAME_SEM_DATA)
  @javax.annotation.Nullable
  private CteSefazSemData semData;

  public static final String SERIALIZED_NAME_COM_DATA = "comData";
  @SerializedName(SERIALIZED_NAME_COM_DATA)
  @javax.annotation.Nullable
  private CteSefazComData comData;

  public static final String SERIALIZED_NAME_NO_PERIODO = "noPeriodo";
  @SerializedName(SERIALIZED_NAME_NO_PERIODO)
  @javax.annotation.Nullable
  private CteSefazNoPeriodo noPeriodo;

  public static final String SERIALIZED_NAME_SEM_HORA = "semHora";
  @SerializedName(SERIALIZED_NAME_SEM_HORA)
  @javax.annotation.Nullable
  private CteSefazSemHora semHora;

  public static final String SERIALIZED_NAME_COM_HORA = "comHora";
  @SerializedName(SERIALIZED_NAME_COM_HORA)
  @javax.annotation.Nullable
  private CteSefazComHora comHora;

  public static final String SERIALIZED_NAME_NO_INTER = "noInter";
  @SerializedName(SERIALIZED_NAME_NO_INTER)
  @javax.annotation.Nullable
  private CteSefazNoInter noInter;

  public CteSefazEntrega() {
  }

  public CteSefazEntrega semData(@javax.annotation.Nullable CteSefazSemData semData) {
    this.semData = semData;
    return this;
  }

  /**
   * Get semData
   * @return semData
   */
  @javax.annotation.Nullable
  public CteSefazSemData getSemData() {
    return semData;
  }

  public void setSemData(@javax.annotation.Nullable CteSefazSemData semData) {
    this.semData = semData;
  }


  public CteSefazEntrega comData(@javax.annotation.Nullable CteSefazComData comData) {
    this.comData = comData;
    return this;
  }

  /**
   * Get comData
   * @return comData
   */
  @javax.annotation.Nullable
  public CteSefazComData getComData() {
    return comData;
  }

  public void setComData(@javax.annotation.Nullable CteSefazComData comData) {
    this.comData = comData;
  }


  public CteSefazEntrega noPeriodo(@javax.annotation.Nullable CteSefazNoPeriodo noPeriodo) {
    this.noPeriodo = noPeriodo;
    return this;
  }

  /**
   * Get noPeriodo
   * @return noPeriodo
   */
  @javax.annotation.Nullable
  public CteSefazNoPeriodo getNoPeriodo() {
    return noPeriodo;
  }

  public void setNoPeriodo(@javax.annotation.Nullable CteSefazNoPeriodo noPeriodo) {
    this.noPeriodo = noPeriodo;
  }


  public CteSefazEntrega semHora(@javax.annotation.Nullable CteSefazSemHora semHora) {
    this.semHora = semHora;
    return this;
  }

  /**
   * Get semHora
   * @return semHora
   */
  @javax.annotation.Nullable
  public CteSefazSemHora getSemHora() {
    return semHora;
  }

  public void setSemHora(@javax.annotation.Nullable CteSefazSemHora semHora) {
    this.semHora = semHora;
  }


  public CteSefazEntrega comHora(@javax.annotation.Nullable CteSefazComHora comHora) {
    this.comHora = comHora;
    return this;
  }

  /**
   * Get comHora
   * @return comHora
   */
  @javax.annotation.Nullable
  public CteSefazComHora getComHora() {
    return comHora;
  }

  public void setComHora(@javax.annotation.Nullable CteSefazComHora comHora) {
    this.comHora = comHora;
  }


  public CteSefazEntrega noInter(@javax.annotation.Nullable CteSefazNoInter noInter) {
    this.noInter = noInter;
    return this;
  }

  /**
   * Get noInter
   * @return noInter
   */
  @javax.annotation.Nullable
  public CteSefazNoInter getNoInter() {
    return noInter;
  }

  public void setNoInter(@javax.annotation.Nullable CteSefazNoInter noInter) {
    this.noInter = noInter;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CteSefazEntrega cteSefazEntrega = (CteSefazEntrega) o;
    return Objects.equals(this.semData, cteSefazEntrega.semData) &&
        Objects.equals(this.comData, cteSefazEntrega.comData) &&
        Objects.equals(this.noPeriodo, cteSefazEntrega.noPeriodo) &&
        Objects.equals(this.semHora, cteSefazEntrega.semHora) &&
        Objects.equals(this.comHora, cteSefazEntrega.comHora) &&
        Objects.equals(this.noInter, cteSefazEntrega.noInter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(semData, comData, noPeriodo, semHora, comHora, noInter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CteSefazEntrega {\n");
    sb.append("    semData: ").append(toIndentedString(semData)).append("\n");
    sb.append("    comData: ").append(toIndentedString(comData)).append("\n");
    sb.append("    noPeriodo: ").append(toIndentedString(noPeriodo)).append("\n");
    sb.append("    semHora: ").append(toIndentedString(semHora)).append("\n");
    sb.append("    comHora: ").append(toIndentedString(comHora)).append("\n");
    sb.append("    noInter: ").append(toIndentedString(noInter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("semData");
    openapiFields.add("comData");
    openapiFields.add("noPeriodo");
    openapiFields.add("semHora");
    openapiFields.add("comHora");
    openapiFields.add("noInter");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CteSefazEntrega
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CteSefazEntrega.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CteSefazEntrega is not found in the empty JSON string", CteSefazEntrega.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CteSefazEntrega.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CteSefazEntrega` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `semData`
      if (jsonObj.get("semData") != null && !jsonObj.get("semData").isJsonNull()) {
        CteSefazSemData.validateJsonElement(jsonObj.get("semData"));
      }
      // validate the optional field `comData`
      if (jsonObj.get("comData") != null && !jsonObj.get("comData").isJsonNull()) {
        CteSefazComData.validateJsonElement(jsonObj.get("comData"));
      }
      // validate the optional field `noPeriodo`
      if (jsonObj.get("noPeriodo") != null && !jsonObj.get("noPeriodo").isJsonNull()) {
        CteSefazNoPeriodo.validateJsonElement(jsonObj.get("noPeriodo"));
      }
      // validate the optional field `semHora`
      if (jsonObj.get("semHora") != null && !jsonObj.get("semHora").isJsonNull()) {
        CteSefazSemHora.validateJsonElement(jsonObj.get("semHora"));
      }
      // validate the optional field `comHora`
      if (jsonObj.get("comHora") != null && !jsonObj.get("comHora").isJsonNull()) {
        CteSefazComHora.validateJsonElement(jsonObj.get("comHora"));
      }
      // validate the optional field `noInter`
      if (jsonObj.get("noInter") != null && !jsonObj.get("noInter").isJsonNull()) {
        CteSefazNoInter.validateJsonElement(jsonObj.get("noInter"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CteSefazEntrega.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CteSefazEntrega' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CteSefazEntrega> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CteSefazEntrega.class));

       return (TypeAdapter<T>) new TypeAdapter<CteSefazEntrega>() {
           @Override
           public void write(JsonWriter out, CteSefazEntrega value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CteSefazEntrega read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CteSefazEntrega given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CteSefazEntrega
   * @throws IOException if the JSON string is invalid with respect to CteSefazEntrega
   */
  public static CteSefazEntrega fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CteSefazEntrega.class);
  }

  /**
   * Convert an instance of CteSefazEntrega to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

