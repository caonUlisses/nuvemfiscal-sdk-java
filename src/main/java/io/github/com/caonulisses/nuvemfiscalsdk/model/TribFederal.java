/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.TribOutrosPisCofins;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Grupo de informações de outros tributos relacionados ao serviço prestado.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class TribFederal {
  public static final String SERIALIZED_NAME_PISCOFINS = "piscofins";
  @SerializedName(SERIALIZED_NAME_PISCOFINS)
  @javax.annotation.Nullable
  private TribOutrosPisCofins piscofins;

  public static final String SERIALIZED_NAME_V_RET_C_P = "vRetCP";
  @SerializedName(SERIALIZED_NAME_V_RET_C_P)
  @javax.annotation.Nullable
  private BigDecimal vRetCP;

  public static final String SERIALIZED_NAME_V_RET_I_R_R_F = "vRetIRRF";
  @SerializedName(SERIALIZED_NAME_V_RET_I_R_R_F)
  @javax.annotation.Nullable
  private BigDecimal vRetIRRF;

  public static final String SERIALIZED_NAME_V_RET_C_S_L_L = "vRetCSLL";
  @SerializedName(SERIALIZED_NAME_V_RET_C_S_L_L)
  @javax.annotation.Nullable
  private BigDecimal vRetCSLL;

  public TribFederal() {
  }

  public TribFederal piscofins(@javax.annotation.Nullable TribOutrosPisCofins piscofins) {
    this.piscofins = piscofins;
    return this;
  }

  /**
   * Get piscofins
   * @return piscofins
   */
  @javax.annotation.Nullable
  public TribOutrosPisCofins getPiscofins() {
    return piscofins;
  }

  public void setPiscofins(@javax.annotation.Nullable TribOutrosPisCofins piscofins) {
    this.piscofins = piscofins;
  }


  public TribFederal vRetCP(@javax.annotation.Nullable BigDecimal vRetCP) {
    this.vRetCP = vRetCP;
    return this;
  }

  /**
   * Valor monetário do CP(R$).
   * minimum: 0
   * @return vRetCP
   */
  @javax.annotation.Nullable
  public BigDecimal getvRetCP() {
    return vRetCP;
  }

  public void setvRetCP(@javax.annotation.Nullable BigDecimal vRetCP) {
    this.vRetCP = vRetCP;
  }


  public TribFederal vRetIRRF(@javax.annotation.Nullable BigDecimal vRetIRRF) {
    this.vRetIRRF = vRetIRRF;
    return this;
  }

  /**
   * Valor monetário do IRRF (R$).
   * minimum: 0
   * @return vRetIRRF
   */
  @javax.annotation.Nullable
  public BigDecimal getvRetIRRF() {
    return vRetIRRF;
  }

  public void setvRetIRRF(@javax.annotation.Nullable BigDecimal vRetIRRF) {
    this.vRetIRRF = vRetIRRF;
  }


  public TribFederal vRetCSLL(@javax.annotation.Nullable BigDecimal vRetCSLL) {
    this.vRetCSLL = vRetCSLL;
    return this;
  }

  /**
   * Valor monetário do CSLL (R$).
   * minimum: 0
   * @return vRetCSLL
   */
  @javax.annotation.Nullable
  public BigDecimal getvRetCSLL() {
    return vRetCSLL;
  }

  public void setvRetCSLL(@javax.annotation.Nullable BigDecimal vRetCSLL) {
    this.vRetCSLL = vRetCSLL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TribFederal tribFederal = (TribFederal) o;
    return Objects.equals(this.piscofins, tribFederal.piscofins) &&
        Objects.equals(this.vRetCP, tribFederal.vRetCP) &&
        Objects.equals(this.vRetIRRF, tribFederal.vRetIRRF) &&
        Objects.equals(this.vRetCSLL, tribFederal.vRetCSLL);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(piscofins, vRetCP, vRetIRRF, vRetCSLL);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TribFederal {\n");
    sb.append("    piscofins: ").append(toIndentedString(piscofins)).append("\n");
    sb.append("    vRetCP: ").append(toIndentedString(vRetCP)).append("\n");
    sb.append("    vRetIRRF: ").append(toIndentedString(vRetIRRF)).append("\n");
    sb.append("    vRetCSLL: ").append(toIndentedString(vRetCSLL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("piscofins");
    openapiFields.add("vRetCP");
    openapiFields.add("vRetIRRF");
    openapiFields.add("vRetCSLL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TribFederal
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TribFederal.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TribFederal is not found in the empty JSON string", TribFederal.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TribFederal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TribFederal` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `piscofins`
      if (jsonObj.get("piscofins") != null && !jsonObj.get("piscofins").isJsonNull()) {
        TribOutrosPisCofins.validateJsonElement(jsonObj.get("piscofins"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TribFederal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TribFederal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TribFederal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TribFederal.class));

       return (TypeAdapter<T>) new TypeAdapter<TribFederal>() {
           @Override
           public void write(JsonWriter out, TribFederal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TribFederal read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TribFederal given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TribFederal
   * @throws IOException if the JSON string is invalid with respect to TribFederal
   */
  public static TribFederal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TribFederal.class);
  }

  /**
   * Convert an instance of TribFederal to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

