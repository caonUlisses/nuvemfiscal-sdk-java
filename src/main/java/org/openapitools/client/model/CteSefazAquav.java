/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CteSefazBalsa;
import org.openapitools.client.model.CteSefazDetCont;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Informações do modal Aquaviário.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class CteSefazAquav {
  public static final String SERIALIZED_NAME_V_PREST = "vPrest";
  @SerializedName(SERIALIZED_NAME_V_PREST)
  @javax.annotation.Nullable
  private BigDecimal vPrest;

  public static final String SERIALIZED_NAME_V_A_F_R_M_M = "vAFRMM";
  @SerializedName(SERIALIZED_NAME_V_A_F_R_M_M)
  @javax.annotation.Nullable
  private BigDecimal vAFRMM;

  public static final String SERIALIZED_NAME_X_NAVIO = "xNavio";
  @SerializedName(SERIALIZED_NAME_X_NAVIO)
  @javax.annotation.Nullable
  private String xNavio;

  public static final String SERIALIZED_NAME_BALSA = "balsa";
  @SerializedName(SERIALIZED_NAME_BALSA)
  @javax.annotation.Nullable
  private List<CteSefazBalsa> balsa = new ArrayList<>();

  public static final String SERIALIZED_NAME_N_VIAG = "nViag";
  @SerializedName(SERIALIZED_NAME_N_VIAG)
  @javax.annotation.Nullable
  private String nViag;

  public static final String SERIALIZED_NAME_DIREC = "direc";
  @SerializedName(SERIALIZED_NAME_DIREC)
  @javax.annotation.Nullable
  private String direc;

  public static final String SERIALIZED_NAME_IRIN = "irin";
  @SerializedName(SERIALIZED_NAME_IRIN)
  @javax.annotation.Nullable
  private String irin;

  public static final String SERIALIZED_NAME_DET_CONT = "detCont";
  @SerializedName(SERIALIZED_NAME_DET_CONT)
  @javax.annotation.Nullable
  private List<CteSefazDetCont> detCont = new ArrayList<>();

  public static final String SERIALIZED_NAME_TP_NAV = "tpNav";
  @SerializedName(SERIALIZED_NAME_TP_NAV)
  @javax.annotation.Nullable
  private Integer tpNav;

  public CteSefazAquav() {
  }

  public CteSefazAquav vPrest(@javax.annotation.Nullable BigDecimal vPrest) {
    this.vPrest = vPrest;
    return this;
  }

  /**
   * Valor da Prestação Base de Cálculo do AFRMM.
   * minimum: 0
   * @return vPrest
   */
  @javax.annotation.Nullable
  public BigDecimal getvPrest() {
    return vPrest;
  }

  public void setvPrest(@javax.annotation.Nullable BigDecimal vPrest) {
    this.vPrest = vPrest;
  }


  public CteSefazAquav vAFRMM(@javax.annotation.Nullable BigDecimal vAFRMM) {
    this.vAFRMM = vAFRMM;
    return this;
  }

  /**
   * AFRMM (Adicional de Frete para Renovação da Marinha Mercante).
   * minimum: 0
   * @return vAFRMM
   */
  @javax.annotation.Nullable
  public BigDecimal getvAFRMM() {
    return vAFRMM;
  }

  public void setvAFRMM(@javax.annotation.Nullable BigDecimal vAFRMM) {
    this.vAFRMM = vAFRMM;
  }


  public CteSefazAquav xNavio(@javax.annotation.Nullable String xNavio) {
    this.xNavio = xNavio;
    return this;
  }

  /**
   * Identificação do Navio.
   * @return xNavio
   */
  @javax.annotation.Nullable
  public String getxNavio() {
    return xNavio;
  }

  public void setxNavio(@javax.annotation.Nullable String xNavio) {
    this.xNavio = xNavio;
  }


  public CteSefazAquav balsa(@javax.annotation.Nullable List<CteSefazBalsa> balsa) {
    this.balsa = balsa;
    return this;
  }

  public CteSefazAquav addBalsaItem(CteSefazBalsa balsaItem) {
    if (this.balsa == null) {
      this.balsa = new ArrayList<>();
    }
    this.balsa.add(balsaItem);
    return this;
  }

  /**
   * Get balsa
   * @return balsa
   */
  @javax.annotation.Nullable
  public List<CteSefazBalsa> getBalsa() {
    return balsa;
  }

  public void setBalsa(@javax.annotation.Nullable List<CteSefazBalsa> balsa) {
    this.balsa = balsa;
  }


  public CteSefazAquav nViag(@javax.annotation.Nullable String nViag) {
    this.nViag = nViag;
    return this;
  }

  /**
   * Número da Viagem.
   * @return nViag
   */
  @javax.annotation.Nullable
  public String getnViag() {
    return nViag;
  }

  public void setnViag(@javax.annotation.Nullable String nViag) {
    this.nViag = nViag;
  }


  public CteSefazAquav direc(@javax.annotation.Nullable String direc) {
    this.direc = direc;
    return this;
  }

  /**
   * Direção.  Preencher com: N-Norte, L-Leste, S-Sul, O-Oeste.
   * @return direc
   */
  @javax.annotation.Nullable
  public String getDirec() {
    return direc;
  }

  public void setDirec(@javax.annotation.Nullable String direc) {
    this.direc = direc;
  }


  public CteSefazAquav irin(@javax.annotation.Nullable String irin) {
    this.irin = irin;
    return this;
  }

  /**
   * Irin do navio sempre deverá ser informado.
   * @return irin
   */
  @javax.annotation.Nullable
  public String getIrin() {
    return irin;
  }

  public void setIrin(@javax.annotation.Nullable String irin) {
    this.irin = irin;
  }


  public CteSefazAquav detCont(@javax.annotation.Nullable List<CteSefazDetCont> detCont) {
    this.detCont = detCont;
    return this;
  }

  public CteSefazAquav addDetContItem(CteSefazDetCont detContItem) {
    if (this.detCont == null) {
      this.detCont = new ArrayList<>();
    }
    this.detCont.add(detContItem);
    return this;
  }

  /**
   * Get detCont
   * @return detCont
   */
  @javax.annotation.Nullable
  public List<CteSefazDetCont> getDetCont() {
    return detCont;
  }

  public void setDetCont(@javax.annotation.Nullable List<CteSefazDetCont> detCont) {
    this.detCont = detCont;
  }


  public CteSefazAquav tpNav(@javax.annotation.Nullable Integer tpNav) {
    this.tpNav = tpNav;
    return this;
  }

  /**
   * Tipo de Navegação.  Preencher com:  * 0 - Interior  * 1 - Cabotagem
   * @return tpNav
   */
  @javax.annotation.Nullable
  public Integer getTpNav() {
    return tpNav;
  }

  public void setTpNav(@javax.annotation.Nullable Integer tpNav) {
    this.tpNav = tpNav;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CteSefazAquav cteSefazAquav = (CteSefazAquav) o;
    return Objects.equals(this.vPrest, cteSefazAquav.vPrest) &&
        Objects.equals(this.vAFRMM, cteSefazAquav.vAFRMM) &&
        Objects.equals(this.xNavio, cteSefazAquav.xNavio) &&
        Objects.equals(this.balsa, cteSefazAquav.balsa) &&
        Objects.equals(this.nViag, cteSefazAquav.nViag) &&
        Objects.equals(this.direc, cteSefazAquav.direc) &&
        Objects.equals(this.irin, cteSefazAquav.irin) &&
        Objects.equals(this.detCont, cteSefazAquav.detCont) &&
        Objects.equals(this.tpNav, cteSefazAquav.tpNav);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(vPrest, vAFRMM, xNavio, balsa, nViag, direc, irin, detCont, tpNav);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CteSefazAquav {\n");
    sb.append("    vPrest: ").append(toIndentedString(vPrest)).append("\n");
    sb.append("    vAFRMM: ").append(toIndentedString(vAFRMM)).append("\n");
    sb.append("    xNavio: ").append(toIndentedString(xNavio)).append("\n");
    sb.append("    balsa: ").append(toIndentedString(balsa)).append("\n");
    sb.append("    nViag: ").append(toIndentedString(nViag)).append("\n");
    sb.append("    direc: ").append(toIndentedString(direc)).append("\n");
    sb.append("    irin: ").append(toIndentedString(irin)).append("\n");
    sb.append("    detCont: ").append(toIndentedString(detCont)).append("\n");
    sb.append("    tpNav: ").append(toIndentedString(tpNav)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vPrest");
    openapiFields.add("vAFRMM");
    openapiFields.add("xNavio");
    openapiFields.add("balsa");
    openapiFields.add("nViag");
    openapiFields.add("direc");
    openapiFields.add("irin");
    openapiFields.add("detCont");
    openapiFields.add("tpNav");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vPrest");
    openapiRequiredFields.add("vAFRMM");
    openapiRequiredFields.add("xNavio");
    openapiRequiredFields.add("direc");
    openapiRequiredFields.add("irin");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CteSefazAquav
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CteSefazAquav.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CteSefazAquav is not found in the empty JSON string", CteSefazAquav.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CteSefazAquav.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CteSefazAquav` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CteSefazAquav.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("xNavio") != null && !jsonObj.get("xNavio").isJsonNull()) && !jsonObj.get("xNavio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xNavio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xNavio").toString()));
      }
      if (jsonObj.get("balsa") != null && !jsonObj.get("balsa").isJsonNull()) {
        JsonArray jsonArraybalsa = jsonObj.getAsJsonArray("balsa");
        if (jsonArraybalsa != null) {
          // ensure the json data is an array
          if (!jsonObj.get("balsa").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `balsa` to be an array in the JSON string but got `%s`", jsonObj.get("balsa").toString()));
          }

          // validate the optional field `balsa` (array)
          for (int i = 0; i < jsonArraybalsa.size(); i++) {
            CteSefazBalsa.validateJsonElement(jsonArraybalsa.get(i));
          };
        }
      }
      if ((jsonObj.get("nViag") != null && !jsonObj.get("nViag").isJsonNull()) && !jsonObj.get("nViag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nViag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nViag").toString()));
      }
      if ((jsonObj.get("direc") != null && !jsonObj.get("direc").isJsonNull()) && !jsonObj.get("direc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direc").toString()));
      }
      if ((jsonObj.get("irin") != null && !jsonObj.get("irin").isJsonNull()) && !jsonObj.get("irin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `irin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("irin").toString()));
      }
      if (jsonObj.get("detCont") != null && !jsonObj.get("detCont").isJsonNull()) {
        JsonArray jsonArraydetCont = jsonObj.getAsJsonArray("detCont");
        if (jsonArraydetCont != null) {
          // ensure the json data is an array
          if (!jsonObj.get("detCont").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `detCont` to be an array in the JSON string but got `%s`", jsonObj.get("detCont").toString()));
          }

          // validate the optional field `detCont` (array)
          for (int i = 0; i < jsonArraydetCont.size(); i++) {
            CteSefazDetCont.validateJsonElement(jsonArraydetCont.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CteSefazAquav.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CteSefazAquav' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CteSefazAquav> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CteSefazAquav.class));

       return (TypeAdapter<T>) new TypeAdapter<CteSefazAquav>() {
           @Override
           public void write(JsonWriter out, CteSefazAquav value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CteSefazAquav read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CteSefazAquav given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CteSefazAquav
   * @throws IOException if the JSON string is invalid with respect to CteSefazAquav
   */
  public static CteSefazAquav fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CteSefazAquav.class);
  }

  /**
   * Convert an instance of CteSefazAquav to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

