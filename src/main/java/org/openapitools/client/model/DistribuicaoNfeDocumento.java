/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DistribuicaoNfeDocumento
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class DistribuicaoNfeDocumento {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_NSU = "nsu";
  @SerializedName(SERIALIZED_NAME_NSU)
  @javax.annotation.Nullable
  private Integer nsu;

  public static final String SERIALIZED_NAME_SCHEMA = "schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  @javax.annotation.Nonnull
  private String schema;

  /**
   * Tipo do documento de interesse da pessoa ou empresa.
   */
  @JsonAdapter(TipoDocumentoEnum.Adapter.class)
  public enum TipoDocumentoEnum {
    NOTA("nota"),
    
    EVENTO("evento");

    private String value;

    TipoDocumentoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TipoDocumentoEnum fromValue(String value) {
      for (TipoDocumentoEnum b : TipoDocumentoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TipoDocumentoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoDocumentoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TipoDocumentoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TipoDocumentoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TipoDocumentoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TIPO_DOCUMENTO = "tipo_documento";
  @SerializedName(SERIALIZED_NAME_TIPO_DOCUMENTO)
  @javax.annotation.Nullable
  private TipoDocumentoEnum tipoDocumento;

  public static final String SERIALIZED_NAME_CHAVE_ACESSO = "chave_acesso";
  @SerializedName(SERIALIZED_NAME_CHAVE_ACESSO)
  @javax.annotation.Nullable
  private String chaveAcesso;

  public static final String SERIALIZED_NAME_RESUMO = "resumo";
  @SerializedName(SERIALIZED_NAME_RESUMO)
  @javax.annotation.Nullable
  private Boolean resumo;

  public static final String SERIALIZED_NAME_TIPO_EVENTO = "tipo_evento";
  @SerializedName(SERIALIZED_NAME_TIPO_EVENTO)
  @javax.annotation.Nullable
  private String tipoEvento;

  public static final String SERIALIZED_NAME_NUMERO_SEQUENCIAL = "numero_sequencial";
  @SerializedName(SERIALIZED_NAME_NUMERO_SEQUENCIAL)
  @javax.annotation.Nullable
  private Integer numeroSequencial;

  public static final String SERIALIZED_NAME_DATA_EVENTO = "data_evento";
  @SerializedName(SERIALIZED_NAME_DATA_EVENTO)
  @javax.annotation.Nullable
  private OffsetDateTime dataEvento;

  public static final String SERIALIZED_NAME_DATA_RECEBIMENTO = "data_recebimento";
  @SerializedName(SERIALIZED_NAME_DATA_RECEBIMENTO)
  @javax.annotation.Nullable
  private OffsetDateTime dataRecebimento;

  public static final String SERIALIZED_NAME_NUMERO_PROTOCOLO = "numero_protocolo";
  @SerializedName(SERIALIZED_NAME_NUMERO_PROTOCOLO)
  @javax.annotation.Nullable
  private String numeroProtocolo;

  public static final String SERIALIZED_NAME_TIPO_NFE = "tipo_nfe";
  @SerializedName(SERIALIZED_NAME_TIPO_NFE)
  @javax.annotation.Nullable
  private Integer tipoNfe;

  public static final String SERIALIZED_NAME_VALOR_NFE = "valor_nfe";
  @SerializedName(SERIALIZED_NAME_VALOR_NFE)
  @javax.annotation.Nullable
  private BigDecimal valorNfe;

  public static final String SERIALIZED_NAME_DIGEST_VALUE = "digest_value";
  @SerializedName(SERIALIZED_NAME_DIGEST_VALUE)
  @javax.annotation.Nullable
  private String digestValue;

  public static final String SERIALIZED_NAME_EMITENTE_CPF_CNPJ = "emitente_cpf_cnpj";
  @SerializedName(SERIALIZED_NAME_EMITENTE_CPF_CNPJ)
  @javax.annotation.Nullable
  private String emitenteCpfCnpj;

  public static final String SERIALIZED_NAME_EMITENTE_NOME_RAZAO_SOCIAL = "emitente_nome_razao_social";
  @SerializedName(SERIALIZED_NAME_EMITENTE_NOME_RAZAO_SOCIAL)
  @javax.annotation.Nullable
  private String emitenteNomeRazaoSocial;

  public static final String SERIALIZED_NAME_EMITENTE_INSCRICAO_ESTADUAL = "emitente_inscricao_estadual";
  @SerializedName(SERIALIZED_NAME_EMITENTE_INSCRICAO_ESTADUAL)
  @javax.annotation.Nullable
  private String emitenteInscricaoEstadual;

  public DistribuicaoNfeDocumento() {
  }

  public DistribuicaoNfeDocumento id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * ID único gerado pela Nuvem Fiscal para identificar o documento.
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public DistribuicaoNfeDocumento createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Data/hora em que o documento foi criado na Nuvem Fiscal. Representado no formato &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/ISO_8601\&quot; target&#x3D;\&quot;blank\&quot;&gt;&#x60;ISO 8601&#x60;&lt;/a&gt;.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DistribuicaoNfeDocumento nsu(@javax.annotation.Nullable Integer nsu) {
    this.nsu = nsu;
    return this;
  }

  /**
   * NSU do documento fiscal.
   * @return nsu
   */
  @javax.annotation.Nullable
  public Integer getNsu() {
    return nsu;
  }

  public void setNsu(@javax.annotation.Nullable Integer nsu) {
    this.nsu = nsu;
  }


  public DistribuicaoNfeDocumento schema(@javax.annotation.Nonnull String schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Identificação do Schema XML que será utilizado para validar o XML existente no conteúdo da tag docZip. Vai identificar o tipo do documento e sua versão. Exemplos: resNFe_v1.00.xsd, procNFe_v3.10.xsd, resEvento_1.00.xsd, procEventoNFe_v1.00.xsd.
   * @return schema
   */
  @javax.annotation.Nonnull
  public String getSchema() {
    return schema;
  }

  public void setSchema(@javax.annotation.Nonnull String schema) {
    this.schema = schema;
  }


  public DistribuicaoNfeDocumento tipoDocumento(@javax.annotation.Nullable TipoDocumentoEnum tipoDocumento) {
    this.tipoDocumento = tipoDocumento;
    return this;
  }

  /**
   * Tipo do documento de interesse da pessoa ou empresa.
   * @return tipoDocumento
   */
  @javax.annotation.Nullable
  public TipoDocumentoEnum getTipoDocumento() {
    return tipoDocumento;
  }

  public void setTipoDocumento(@javax.annotation.Nullable TipoDocumentoEnum tipoDocumento) {
    this.tipoDocumento = tipoDocumento;
  }


  public DistribuicaoNfeDocumento chaveAcesso(@javax.annotation.Nullable String chaveAcesso) {
    this.chaveAcesso = chaveAcesso;
    return this;
  }

  /**
   * Chave de Acesso da NF-e.
   * @return chaveAcesso
   */
  @javax.annotation.Nullable
  public String getChaveAcesso() {
    return chaveAcesso;
  }

  public void setChaveAcesso(@javax.annotation.Nullable String chaveAcesso) {
    this.chaveAcesso = chaveAcesso;
  }


  public DistribuicaoNfeDocumento resumo(@javax.annotation.Nullable Boolean resumo) {
    this.resumo = resumo;
    return this;
  }

  /**
   * Indica se o documento distribuído está em sua forma resumida.
   * @return resumo
   */
  @javax.annotation.Nullable
  public Boolean getResumo() {
    return resumo;
  }

  public void setResumo(@javax.annotation.Nullable Boolean resumo) {
    this.resumo = resumo;
  }


  public DistribuicaoNfeDocumento tipoEvento(@javax.annotation.Nullable String tipoEvento) {
    this.tipoEvento = tipoEvento;
    return this;
  }

  /**
   * Tipo do evento.
   * @return tipoEvento
   */
  @javax.annotation.Nullable
  public String getTipoEvento() {
    return tipoEvento;
  }

  public void setTipoEvento(@javax.annotation.Nullable String tipoEvento) {
    this.tipoEvento = tipoEvento;
  }


  public DistribuicaoNfeDocumento numeroSequencial(@javax.annotation.Nullable Integer numeroSequencial) {
    this.numeroSequencial = numeroSequencial;
    return this;
  }

  /**
   * Número sequencial do evento para o mesmo tipo de evento.
   * @return numeroSequencial
   */
  @javax.annotation.Nullable
  public Integer getNumeroSequencial() {
    return numeroSequencial;
  }

  public void setNumeroSequencial(@javax.annotation.Nullable Integer numeroSequencial) {
    this.numeroSequencial = numeroSequencial;
  }


  public DistribuicaoNfeDocumento dataEvento(@javax.annotation.Nullable OffsetDateTime dataEvento) {
    this.dataEvento = dataEvento;
    return this;
  }

  /**
   * Data e hora do evento.
   * @return dataEvento
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataEvento() {
    return dataEvento;
  }

  public void setDataEvento(@javax.annotation.Nullable OffsetDateTime dataEvento) {
    this.dataEvento = dataEvento;
  }


  public DistribuicaoNfeDocumento dataRecebimento(@javax.annotation.Nullable OffsetDateTime dataRecebimento) {
    this.dataRecebimento = dataRecebimento;
    return this;
  }

  /**
   * Data e hora de autorização do evento.
   * @return dataRecebimento
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataRecebimento() {
    return dataRecebimento;
  }

  public void setDataRecebimento(@javax.annotation.Nullable OffsetDateTime dataRecebimento) {
    this.dataRecebimento = dataRecebimento;
  }


  public DistribuicaoNfeDocumento numeroProtocolo(@javax.annotation.Nullable String numeroProtocolo) {
    this.numeroProtocolo = numeroProtocolo;
    return this;
  }

  /**
   * Número do protocolo de autorização.
   * @return numeroProtocolo
   */
  @javax.annotation.Nullable
  public String getNumeroProtocolo() {
    return numeroProtocolo;
  }

  public void setNumeroProtocolo(@javax.annotation.Nullable String numeroProtocolo) {
    this.numeroProtocolo = numeroProtocolo;
  }


  public DistribuicaoNfeDocumento tipoNfe(@javax.annotation.Nullable Integer tipoNfe) {
    this.tipoNfe = tipoNfe;
    return this;
  }

  /**
   * Tipo da NF-e (0 - entrada; 1 - saída).
   * @return tipoNfe
   */
  @javax.annotation.Nullable
  public Integer getTipoNfe() {
    return tipoNfe;
  }

  public void setTipoNfe(@javax.annotation.Nullable Integer tipoNfe) {
    this.tipoNfe = tipoNfe;
  }


  public DistribuicaoNfeDocumento valorNfe(@javax.annotation.Nullable BigDecimal valorNfe) {
    this.valorNfe = valorNfe;
    return this;
  }

  /**
   * Valor total da NF-e.
   * @return valorNfe
   */
  @javax.annotation.Nullable
  public BigDecimal getValorNfe() {
    return valorNfe;
  }

  public void setValorNfe(@javax.annotation.Nullable BigDecimal valorNfe) {
    this.valorNfe = valorNfe;
  }


  public DistribuicaoNfeDocumento digestValue(@javax.annotation.Nullable String digestValue) {
    this.digestValue = digestValue;
    return this;
  }

  /**
   * Digest Value da NF-e processada. Utilizado para conferir a integridade da NF-e original.
   * @return digestValue
   */
  @javax.annotation.Nullable
  public String getDigestValue() {
    return digestValue;
  }

  public void setDigestValue(@javax.annotation.Nullable String digestValue) {
    this.digestValue = digestValue;
  }


  public DistribuicaoNfeDocumento emitenteCpfCnpj(@javax.annotation.Nullable String emitenteCpfCnpj) {
    this.emitenteCpfCnpj = emitenteCpfCnpj;
    return this;
  }

  /**
   * CPF/CNPJ do emitente.
   * @return emitenteCpfCnpj
   */
  @javax.annotation.Nullable
  public String getEmitenteCpfCnpj() {
    return emitenteCpfCnpj;
  }

  public void setEmitenteCpfCnpj(@javax.annotation.Nullable String emitenteCpfCnpj) {
    this.emitenteCpfCnpj = emitenteCpfCnpj;
  }


  public DistribuicaoNfeDocumento emitenteNomeRazaoSocial(@javax.annotation.Nullable String emitenteNomeRazaoSocial) {
    this.emitenteNomeRazaoSocial = emitenteNomeRazaoSocial;
    return this;
  }

  /**
   * Nome ou Razão Social do emitente.
   * @return emitenteNomeRazaoSocial
   */
  @javax.annotation.Nullable
  public String getEmitenteNomeRazaoSocial() {
    return emitenteNomeRazaoSocial;
  }

  public void setEmitenteNomeRazaoSocial(@javax.annotation.Nullable String emitenteNomeRazaoSocial) {
    this.emitenteNomeRazaoSocial = emitenteNomeRazaoSocial;
  }


  public DistribuicaoNfeDocumento emitenteInscricaoEstadual(@javax.annotation.Nullable String emitenteInscricaoEstadual) {
    this.emitenteInscricaoEstadual = emitenteInscricaoEstadual;
    return this;
  }

  /**
   * Inscrição Estadual do emitente.
   * @return emitenteInscricaoEstadual
   */
  @javax.annotation.Nullable
  public String getEmitenteInscricaoEstadual() {
    return emitenteInscricaoEstadual;
  }

  public void setEmitenteInscricaoEstadual(@javax.annotation.Nullable String emitenteInscricaoEstadual) {
    this.emitenteInscricaoEstadual = emitenteInscricaoEstadual;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DistribuicaoNfeDocumento distribuicaoNfeDocumento = (DistribuicaoNfeDocumento) o;
    return Objects.equals(this.id, distribuicaoNfeDocumento.id) &&
        Objects.equals(this.createdAt, distribuicaoNfeDocumento.createdAt) &&
        Objects.equals(this.nsu, distribuicaoNfeDocumento.nsu) &&
        Objects.equals(this.schema, distribuicaoNfeDocumento.schema) &&
        Objects.equals(this.tipoDocumento, distribuicaoNfeDocumento.tipoDocumento) &&
        Objects.equals(this.chaveAcesso, distribuicaoNfeDocumento.chaveAcesso) &&
        Objects.equals(this.resumo, distribuicaoNfeDocumento.resumo) &&
        Objects.equals(this.tipoEvento, distribuicaoNfeDocumento.tipoEvento) &&
        Objects.equals(this.numeroSequencial, distribuicaoNfeDocumento.numeroSequencial) &&
        Objects.equals(this.dataEvento, distribuicaoNfeDocumento.dataEvento) &&
        Objects.equals(this.dataRecebimento, distribuicaoNfeDocumento.dataRecebimento) &&
        Objects.equals(this.numeroProtocolo, distribuicaoNfeDocumento.numeroProtocolo) &&
        Objects.equals(this.tipoNfe, distribuicaoNfeDocumento.tipoNfe) &&
        Objects.equals(this.valorNfe, distribuicaoNfeDocumento.valorNfe) &&
        Objects.equals(this.digestValue, distribuicaoNfeDocumento.digestValue) &&
        Objects.equals(this.emitenteCpfCnpj, distribuicaoNfeDocumento.emitenteCpfCnpj) &&
        Objects.equals(this.emitenteNomeRazaoSocial, distribuicaoNfeDocumento.emitenteNomeRazaoSocial) &&
        Objects.equals(this.emitenteInscricaoEstadual, distribuicaoNfeDocumento.emitenteInscricaoEstadual);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, nsu, schema, tipoDocumento, chaveAcesso, resumo, tipoEvento, numeroSequencial, dataEvento, dataRecebimento, numeroProtocolo, tipoNfe, valorNfe, digestValue, emitenteCpfCnpj, emitenteNomeRazaoSocial, emitenteInscricaoEstadual);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DistribuicaoNfeDocumento {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    nsu: ").append(toIndentedString(nsu)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    tipoDocumento: ").append(toIndentedString(tipoDocumento)).append("\n");
    sb.append("    chaveAcesso: ").append(toIndentedString(chaveAcesso)).append("\n");
    sb.append("    resumo: ").append(toIndentedString(resumo)).append("\n");
    sb.append("    tipoEvento: ").append(toIndentedString(tipoEvento)).append("\n");
    sb.append("    numeroSequencial: ").append(toIndentedString(numeroSequencial)).append("\n");
    sb.append("    dataEvento: ").append(toIndentedString(dataEvento)).append("\n");
    sb.append("    dataRecebimento: ").append(toIndentedString(dataRecebimento)).append("\n");
    sb.append("    numeroProtocolo: ").append(toIndentedString(numeroProtocolo)).append("\n");
    sb.append("    tipoNfe: ").append(toIndentedString(tipoNfe)).append("\n");
    sb.append("    valorNfe: ").append(toIndentedString(valorNfe)).append("\n");
    sb.append("    digestValue: ").append(toIndentedString(digestValue)).append("\n");
    sb.append("    emitenteCpfCnpj: ").append(toIndentedString(emitenteCpfCnpj)).append("\n");
    sb.append("    emitenteNomeRazaoSocial: ").append(toIndentedString(emitenteNomeRazaoSocial)).append("\n");
    sb.append("    emitenteInscricaoEstadual: ").append(toIndentedString(emitenteInscricaoEstadual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("created_at");
    openapiFields.add("nsu");
    openapiFields.add("schema");
    openapiFields.add("tipo_documento");
    openapiFields.add("chave_acesso");
    openapiFields.add("resumo");
    openapiFields.add("tipo_evento");
    openapiFields.add("numero_sequencial");
    openapiFields.add("data_evento");
    openapiFields.add("data_recebimento");
    openapiFields.add("numero_protocolo");
    openapiFields.add("tipo_nfe");
    openapiFields.add("valor_nfe");
    openapiFields.add("digest_value");
    openapiFields.add("emitente_cpf_cnpj");
    openapiFields.add("emitente_nome_razao_social");
    openapiFields.add("emitente_inscricao_estadual");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schema");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DistribuicaoNfeDocumento
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DistribuicaoNfeDocumento.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DistribuicaoNfeDocumento is not found in the empty JSON string", DistribuicaoNfeDocumento.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DistribuicaoNfeDocumento.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DistribuicaoNfeDocumento` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DistribuicaoNfeDocumento.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("schema").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schema` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schema").toString()));
      }
      if ((jsonObj.get("tipo_documento") != null && !jsonObj.get("tipo_documento").isJsonNull()) && !jsonObj.get("tipo_documento").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tipo_documento` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tipo_documento").toString()));
      }
      // validate the optional field `tipo_documento`
      if (jsonObj.get("tipo_documento") != null && !jsonObj.get("tipo_documento").isJsonNull()) {
        TipoDocumentoEnum.validateJsonElement(jsonObj.get("tipo_documento"));
      }
      if ((jsonObj.get("chave_acesso") != null && !jsonObj.get("chave_acesso").isJsonNull()) && !jsonObj.get("chave_acesso").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chave_acesso` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chave_acesso").toString()));
      }
      if ((jsonObj.get("tipo_evento") != null && !jsonObj.get("tipo_evento").isJsonNull()) && !jsonObj.get("tipo_evento").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tipo_evento` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tipo_evento").toString()));
      }
      if ((jsonObj.get("numero_protocolo") != null && !jsonObj.get("numero_protocolo").isJsonNull()) && !jsonObj.get("numero_protocolo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numero_protocolo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numero_protocolo").toString()));
      }
      if ((jsonObj.get("digest_value") != null && !jsonObj.get("digest_value").isJsonNull()) && !jsonObj.get("digest_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `digest_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("digest_value").toString()));
      }
      if ((jsonObj.get("emitente_cpf_cnpj") != null && !jsonObj.get("emitente_cpf_cnpj").isJsonNull()) && !jsonObj.get("emitente_cpf_cnpj").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emitente_cpf_cnpj` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emitente_cpf_cnpj").toString()));
      }
      if ((jsonObj.get("emitente_nome_razao_social") != null && !jsonObj.get("emitente_nome_razao_social").isJsonNull()) && !jsonObj.get("emitente_nome_razao_social").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emitente_nome_razao_social` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emitente_nome_razao_social").toString()));
      }
      if ((jsonObj.get("emitente_inscricao_estadual") != null && !jsonObj.get("emitente_inscricao_estadual").isJsonNull()) && !jsonObj.get("emitente_inscricao_estadual").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emitente_inscricao_estadual` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emitente_inscricao_estadual").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DistribuicaoNfeDocumento.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DistribuicaoNfeDocumento' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DistribuicaoNfeDocumento> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DistribuicaoNfeDocumento.class));

       return (TypeAdapter<T>) new TypeAdapter<DistribuicaoNfeDocumento>() {
           @Override
           public void write(JsonWriter out, DistribuicaoNfeDocumento value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DistribuicaoNfeDocumento read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DistribuicaoNfeDocumento given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DistribuicaoNfeDocumento
   * @throws IOException if the JSON string is invalid with respect to DistribuicaoNfeDocumento
   */
  public static DistribuicaoNfeDocumento fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DistribuicaoNfeDocumento.class);
  }

  /**
   * Convert an instance of DistribuicaoNfeDocumento to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

