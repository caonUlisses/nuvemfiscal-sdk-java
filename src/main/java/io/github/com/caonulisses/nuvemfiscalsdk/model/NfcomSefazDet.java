/*
 * API Nuvem Fiscal
 * API para automação comercial e documentos fiscais.
 *
 * The version of the OpenAPI document: 2.44.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.com.caonulisses.nuvemfiscalsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGProcRef;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazGRessarc;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazImposto;
import io.github.com.caonulisses.nuvemfiscalsdk.model.NfcomSefazProd;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.com.caonulisses.nuvemfiscalsdk.JSON;

/**
 * Detalhamento de Produtos e Serviços.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-30T14:00:11.942973268-03:00[America/Sao_Paulo]", comments = "Generator version: 7.10.0")
public class NfcomSefazDet {
  public static final String SERIALIZED_NAME_N_ITEM = "nItem";
  @SerializedName(SERIALIZED_NAME_N_ITEM)
  @javax.annotation.Nullable
  private Integer nItem;

  public static final String SERIALIZED_NAME_CH_N_F_COM_ANT = "chNFComAnt";
  @SerializedName(SERIALIZED_NAME_CH_N_F_COM_ANT)
  @javax.annotation.Nullable
  private String chNFComAnt;

  public static final String SERIALIZED_NAME_N_ITEM_ANT = "nItemAnt";
  @SerializedName(SERIALIZED_NAME_N_ITEM_ANT)
  @javax.annotation.Nullable
  private String nItemAnt;

  public static final String SERIALIZED_NAME_IND_N_F_COM_ANT_PAPEL_FAT_CENTRAL = "indNFComAntPapelFatCentral";
  @SerializedName(SERIALIZED_NAME_IND_N_F_COM_ANT_PAPEL_FAT_CENTRAL)
  @javax.annotation.Nullable
  private Integer indNFComAntPapelFatCentral;

  public static final String SERIALIZED_NAME_PROD = "prod";
  @SerializedName(SERIALIZED_NAME_PROD)
  @javax.annotation.Nonnull
  private NfcomSefazProd prod;

  public static final String SERIALIZED_NAME_IMPOSTO = "imposto";
  @SerializedName(SERIALIZED_NAME_IMPOSTO)
  @javax.annotation.Nonnull
  private NfcomSefazImposto imposto;

  public static final String SERIALIZED_NAME_G_PROC_REF = "gProcRef";
  @SerializedName(SERIALIZED_NAME_G_PROC_REF)
  @javax.annotation.Nullable
  private NfcomSefazGProcRef gProcRef;

  public static final String SERIALIZED_NAME_G_RESSARC = "gRessarc";
  @SerializedName(SERIALIZED_NAME_G_RESSARC)
  @javax.annotation.Nullable
  private NfcomSefazGRessarc gRessarc;

  public static final String SERIALIZED_NAME_INF_AD_PROD = "infAdProd";
  @SerializedName(SERIALIZED_NAME_INF_AD_PROD)
  @javax.annotation.Nullable
  private String infAdProd;

  public NfcomSefazDet() {
  }

  public NfcomSefazDet nItem(@javax.annotation.Nullable Integer nItem) {
    this.nItem = nItem;
    return this;
  }

  /**
   * Número do item da NFCom.
   * minimum: 1
   * maximum: 9999
   * @return nItem
   */
  @javax.annotation.Nullable
  public Integer getnItem() {
    return nItem;
  }

  public void setnItem(@javax.annotation.Nullable Integer nItem) {
    this.nItem = nItem;
  }


  public NfcomSefazDet chNFComAnt(@javax.annotation.Nullable String chNFComAnt) {
    this.chNFComAnt = chNFComAnt;
    return this;
  }

  /**
   * Chave de Acesso da NFCom anterior.  Informar chave de acesso de referencia anterior  TAG OPCIONAL, DEVE SER INFORMADA APENAS NOS CASOS PREVISTOS DE NOTA ANTERIOR REFERENCIADA.
   * @return chNFComAnt
   */
  @javax.annotation.Nullable
  public String getChNFComAnt() {
    return chNFComAnt;
  }

  public void setChNFComAnt(@javax.annotation.Nullable String chNFComAnt) {
    this.chNFComAnt = chNFComAnt;
  }


  public NfcomSefazDet nItemAnt(@javax.annotation.Nullable String nItemAnt) {
    this.nItemAnt = nItemAnt;
    return this;
  }

  /**
   * Número do item da NFCom anterior.  Informar nro do item da chave de acesso de referencia anterior  TAG OPCIONAL, DEVE SER INFORMADA APENAS NOS CASOS PREVISTOS DE NOTA ANTERIOR REFERENCIADA.
   * @return nItemAnt
   */
  @javax.annotation.Nullable
  public String getnItemAnt() {
    return nItemAnt;
  }

  public void setnItemAnt(@javax.annotation.Nullable String nItemAnt) {
    this.nItemAnt = nItemAnt;
  }


  public NfcomSefazDet indNFComAntPapelFatCentral(@javax.annotation.Nullable Integer indNFComAntPapelFatCentral) {
    this.indNFComAntPapelFatCentral = indNFComAntPapelFatCentral;
    return this;
  }

  /**
   * Indicador de Nota anterior em papel no faturamento centralizado.  Informa que a NFCom Anterior de Faturamento centralizado não é eletrônica.
   * @return indNFComAntPapelFatCentral
   */
  @javax.annotation.Nullable
  public Integer getIndNFComAntPapelFatCentral() {
    return indNFComAntPapelFatCentral;
  }

  public void setIndNFComAntPapelFatCentral(@javax.annotation.Nullable Integer indNFComAntPapelFatCentral) {
    this.indNFComAntPapelFatCentral = indNFComAntPapelFatCentral;
  }


  public NfcomSefazDet prod(@javax.annotation.Nonnull NfcomSefazProd prod) {
    this.prod = prod;
    return this;
  }

  /**
   * Get prod
   * @return prod
   */
  @javax.annotation.Nonnull
  public NfcomSefazProd getProd() {
    return prod;
  }

  public void setProd(@javax.annotation.Nonnull NfcomSefazProd prod) {
    this.prod = prod;
  }


  public NfcomSefazDet imposto(@javax.annotation.Nonnull NfcomSefazImposto imposto) {
    this.imposto = imposto;
    return this;
  }

  /**
   * Get imposto
   * @return imposto
   */
  @javax.annotation.Nonnull
  public NfcomSefazImposto getImposto() {
    return imposto;
  }

  public void setImposto(@javax.annotation.Nonnull NfcomSefazImposto imposto) {
    this.imposto = imposto;
  }


  public NfcomSefazDet gProcRef(@javax.annotation.Nullable NfcomSefazGProcRef gProcRef) {
    this.gProcRef = gProcRef;
    return this;
  }

  /**
   * Get gProcRef
   * @return gProcRef
   */
  @javax.annotation.Nullable
  public NfcomSefazGProcRef getgProcRef() {
    return gProcRef;
  }

  public void setgProcRef(@javax.annotation.Nullable NfcomSefazGProcRef gProcRef) {
    this.gProcRef = gProcRef;
  }


  public NfcomSefazDet gRessarc(@javax.annotation.Nullable NfcomSefazGRessarc gRessarc) {
    this.gRessarc = gRessarc;
    return this;
  }

  /**
   * Get gRessarc
   * @return gRessarc
   */
  @javax.annotation.Nullable
  public NfcomSefazGRessarc getgRessarc() {
    return gRessarc;
  }

  public void setgRessarc(@javax.annotation.Nullable NfcomSefazGRessarc gRessarc) {
    this.gRessarc = gRessarc;
  }


  public NfcomSefazDet infAdProd(@javax.annotation.Nullable String infAdProd) {
    this.infAdProd = infAdProd;
    return this;
  }

  /**
   * Informações adicionais do produto (norma referenciada, informações complementares, etc).
   * @return infAdProd
   */
  @javax.annotation.Nullable
  public String getInfAdProd() {
    return infAdProd;
  }

  public void setInfAdProd(@javax.annotation.Nullable String infAdProd) {
    this.infAdProd = infAdProd;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfcomSefazDet nfcomSefazDet = (NfcomSefazDet) o;
    return Objects.equals(this.nItem, nfcomSefazDet.nItem) &&
        Objects.equals(this.chNFComAnt, nfcomSefazDet.chNFComAnt) &&
        Objects.equals(this.nItemAnt, nfcomSefazDet.nItemAnt) &&
        Objects.equals(this.indNFComAntPapelFatCentral, nfcomSefazDet.indNFComAntPapelFatCentral) &&
        Objects.equals(this.prod, nfcomSefazDet.prod) &&
        Objects.equals(this.imposto, nfcomSefazDet.imposto) &&
        Objects.equals(this.gProcRef, nfcomSefazDet.gProcRef) &&
        Objects.equals(this.gRessarc, nfcomSefazDet.gRessarc) &&
        Objects.equals(this.infAdProd, nfcomSefazDet.infAdProd);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(nItem, chNFComAnt, nItemAnt, indNFComAntPapelFatCentral, prod, imposto, gProcRef, gRessarc, infAdProd);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfcomSefazDet {\n");
    sb.append("    nItem: ").append(toIndentedString(nItem)).append("\n");
    sb.append("    chNFComAnt: ").append(toIndentedString(chNFComAnt)).append("\n");
    sb.append("    nItemAnt: ").append(toIndentedString(nItemAnt)).append("\n");
    sb.append("    indNFComAntPapelFatCentral: ").append(toIndentedString(indNFComAntPapelFatCentral)).append("\n");
    sb.append("    prod: ").append(toIndentedString(prod)).append("\n");
    sb.append("    imposto: ").append(toIndentedString(imposto)).append("\n");
    sb.append("    gProcRef: ").append(toIndentedString(gProcRef)).append("\n");
    sb.append("    gRessarc: ").append(toIndentedString(gRessarc)).append("\n");
    sb.append("    infAdProd: ").append(toIndentedString(infAdProd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nItem");
    openapiFields.add("chNFComAnt");
    openapiFields.add("nItemAnt");
    openapiFields.add("indNFComAntPapelFatCentral");
    openapiFields.add("prod");
    openapiFields.add("imposto");
    openapiFields.add("gProcRef");
    openapiFields.add("gRessarc");
    openapiFields.add("infAdProd");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("nItem");
    openapiRequiredFields.add("prod");
    openapiRequiredFields.add("imposto");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NfcomSefazDet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NfcomSefazDet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NfcomSefazDet is not found in the empty JSON string", NfcomSefazDet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NfcomSefazDet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NfcomSefazDet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NfcomSefazDet.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chNFComAnt") != null && !jsonObj.get("chNFComAnt").isJsonNull()) && !jsonObj.get("chNFComAnt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chNFComAnt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chNFComAnt").toString()));
      }
      if ((jsonObj.get("nItemAnt") != null && !jsonObj.get("nItemAnt").isJsonNull()) && !jsonObj.get("nItemAnt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nItemAnt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nItemAnt").toString()));
      }
      // validate the required field `prod`
      NfcomSefazProd.validateJsonElement(jsonObj.get("prod"));
      // validate the required field `imposto`
      NfcomSefazImposto.validateJsonElement(jsonObj.get("imposto"));
      // validate the optional field `gProcRef`
      if (jsonObj.get("gProcRef") != null && !jsonObj.get("gProcRef").isJsonNull()) {
        NfcomSefazGProcRef.validateJsonElement(jsonObj.get("gProcRef"));
      }
      // validate the optional field `gRessarc`
      if (jsonObj.get("gRessarc") != null && !jsonObj.get("gRessarc").isJsonNull()) {
        NfcomSefazGRessarc.validateJsonElement(jsonObj.get("gRessarc"));
      }
      if ((jsonObj.get("infAdProd") != null && !jsonObj.get("infAdProd").isJsonNull()) && !jsonObj.get("infAdProd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `infAdProd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("infAdProd").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NfcomSefazDet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NfcomSefazDet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NfcomSefazDet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NfcomSefazDet.class));

       return (TypeAdapter<T>) new TypeAdapter<NfcomSefazDet>() {
           @Override
           public void write(JsonWriter out, NfcomSefazDet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NfcomSefazDet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NfcomSefazDet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NfcomSefazDet
   * @throws IOException if the JSON string is invalid with respect to NfcomSefazDet
   */
  public static NfcomSefazDet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NfcomSefazDet.class);
  }

  /**
   * Convert an instance of NfcomSefazDet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

